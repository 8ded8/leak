a=[[
 _______  ______ _______ _______ _     _ _______ ______       ______  __   __      _____ _______ _______ _     _
 |       |_____/ |_____| |       |____/  |______ |     \      |_____]   \_/          |   |______ |______ |     |
 |_____  |    \_ |     | |_____  |    \_ |______ |_____/      |_____]    |         __|__ |       |       |_____|
]]



-- // GUI TO LUA (MODIFIED) \\ --

-- // INSTANCES: 246 | SCRIPTS: 1 | MODULES: 2 \\ --

local UI = {}

UI["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"))
UI["1"]["IgnoreGuiInset"] = true
UI["1"]["DisplayOrder"] = 1000
UI["1"]["ScreenInsets"] = Enum.ScreenInsets.DeviceSafeInsets
UI["1"]["Name"] = [[sploit]]
UI["1"]["ResetOnSpawn"] = false

UI["2"] = Instance.new("LocalScript", UI["1"])
UI["2"]["Name"] = [[MainScript]]

UI["3"] = Instance.new("Frame", UI["1"])
UI["3"]["Active"] = true
UI["3"]["BorderSizePixel"] = 2
UI["3"]["BackgroundColor3"] = Color3.fromRGB(100, 100, 100)
UI["3"]["ClipsDescendants"] = true
UI["3"]["Size"] = UDim2.new(0.46165, 0, 0.47244, 0)
UI["3"]["Position"] = UDim2.new(0.32233, 0, 0.25206, 0)
UI["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["3"]["Name"] = [[MainFrame]]

UI["4"] = Instance.new("Frame", UI["3"])
UI["4"]["BorderSizePixel"] = 0
UI["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["4"]["Size"] = UDim2.new(0.6654, 0, 0.82231, 0)
UI["4"]["Position"] = UDim2.new(0.30985, 0, 0.16, 0)
UI["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["4"]["Name"] = [[BackgroundFrame]]
UI["4"]["BackgroundTransparency"] = 0.9

UI["5"] = Instance.new("UICorner", UI["4"])


UI["6"] = Instance.new("TextLabel", UI["3"])
UI["6"]["TextWrapped"] = true
UI["6"]["BorderSizePixel"] = 0
UI["6"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["6"]["TextScaled"] = true
UI["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["6"]["TextSize"] = 14
UI["6"]["FontFace"] = Font.new([[rbxassetid://12187368625]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["6"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["6"]["BackgroundTransparency"] = 0.85
UI["6"]["Size"] = UDim2.new(0.24306, 0, 0.07057, 0)
UI["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6"]["Text"] = [[Made by: @oldbeanz]]
UI["6"]["Name"] = [[Credits]]
UI["6"]["Position"] = UDim2.new(0.01178, 0, 0.90886, 0)

UI["7"] = Instance.new("UICorner", UI["6"])


UI["8"] = Instance.new("UITextSizeConstraint", UI["6"])
UI["8"]["MaxTextSize"] = 35

UI["9"] = Instance.new("Folder", UI["3"])
UI["9"]["Name"] = [[Tools]]

UI["a"] = Instance.new("ScrollingFrame", UI["9"])
UI["a"]["Visible"] = false
UI["a"]["Active"] = true
UI["a"]["BorderSizePixel"] = 0
UI["a"]["ScrollingEnabled"] = false
UI["a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["a"]["Name"] = [[Scroll]]
UI["a"]["ScrollBarImageTransparency"] = 1
UI["a"]["Size"] = UDim2.new(0.625, 0, 0.802, 0)
UI["a"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
UI["a"]["Position"] = UDim2.new(0.331, 0, 0.174, 0)
UI["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["a"]["BackgroundTransparency"] = 1

UI["b"] = Instance.new("UIListLayout", UI["a"])
UI["b"]["Padding"] = UDim.new(0.015, 0)
UI["b"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["c"] = Instance.new("TextButton", UI["a"])
UI["c"]["TextWrapped"] = true
UI["c"]["BorderSizePixel"] = 0
UI["c"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["c"]["TextSize"] = 14
UI["c"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["c"]["TextScaled"] = true
UI["c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["c"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["c"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["c"]["Name"] = [[NoRecoil]]
UI["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["c"]["Text"] = [[100% Intelligence]]
UI["c"]["Position"] = UDim2.new(0.00938, 0, 0.09016, 0)

UI["d"] = Instance.new("UICorner", UI["c"])


UI["e"] = Instance.new("UIStroke", UI["c"])
UI["e"]["Enabled"] = false
UI["e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["e"]["Thickness"] = 2.4
UI["e"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["f"] = Instance.new("UIPadding", UI["c"])
UI["f"]["PaddingTop"] = UDim.new(0.3, 0)
UI["f"]["PaddingRight"] = UDim.new(0.5, 0)
UI["f"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["f"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["10"] = Instance.new("TextButton", UI["a"])
UI["10"]["TextWrapped"] = true
UI["10"]["BorderSizePixel"] = 0
UI["10"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["10"]["TextSize"] = 14
UI["10"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["10"]["TextScaled"] = true
UI["10"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["10"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["10"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["10"]["Name"] = [[PromoCodeScout]]
UI["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["10"]["Text"] = [[Scout promo codes (W.I.P)]]
UI["10"]["Position"] = UDim2.new(0.00938, 0, 0.09016, 0)

UI["11"] = Instance.new("UICorner", UI["10"])


UI["12"] = Instance.new("UIStroke", UI["10"])
UI["12"]["Enabled"] = false
UI["12"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["12"]["Thickness"] = 2.4
UI["12"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["13"] = Instance.new("UIPadding", UI["10"])
UI["13"]["PaddingTop"] = UDim.new(0.3, 0)
UI["13"]["PaddingRight"] = UDim.new(0.5, 0)
UI["13"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["13"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["14"] = Instance.new("TextButton", UI["a"])
UI["14"]["TextWrapped"] = true
UI["14"]["BorderSizePixel"] = 0
UI["14"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["14"]["TextSize"] = 14
UI["14"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["14"]["TextScaled"] = true
UI["14"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["14"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["14"]["Name"] = [[TeleportTo]]
UI["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["14"]["Text"] = [[Teleport To Player]]
UI["14"]["Position"] = UDim2.new(0.00938, 0, 0.09016, 0)

UI["15"] = Instance.new("UICorner", UI["14"])


UI["16"] = Instance.new("UIStroke", UI["14"])
UI["16"]["Enabled"] = false
UI["16"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["16"]["Thickness"] = 2.4
UI["16"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["17"] = Instance.new("UIPadding", UI["14"])
UI["17"]["PaddingTop"] = UDim.new(0.3, 0)
UI["17"]["PaddingRight"] = UDim.new(0.5, 0)
UI["17"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["17"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["18"] = Instance.new("TextBox", UI["14"])
UI["18"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["18"]["BorderSizePixel"] = 0
UI["18"]["TextWrapped"] = true
UI["18"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["18"]["TextSize"] = 14
UI["18"]["TextScaled"] = true
UI["18"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["18"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["18"]["PlaceholderText"] = [[Playername]]
UI["18"]["Size"] = UDim2.new(0.60548, 0, 2.45222, 0)
UI["18"]["Position"] = UDim2.new(1.45834, 0, -0.77142, 0)
UI["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["18"]["Text"] = [[]]
UI["18"]["BackgroundTransparency"] = 1

UI["19"] = Instance.new("UICorner", UI["18"])


UI["1a"] = Instance.new("UIStroke", UI["18"])
UI["1a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["1a"]["Thickness"] = 1.6
UI["1a"]["Color"] = Color3.fromRGB(255, 255, 255)

UI["1b"] = Instance.new("TextLabel", UI["14"])
UI["1b"]["TextWrapped"] = true
UI["1b"]["ZIndex"] = 3
UI["1b"]["BorderSizePixel"] = 0
UI["1b"]["TextScaled"] = true
UI["1b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["1b"]["TextSize"] = 50
UI["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["1b"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["1b"]["BackgroundTransparency"] = 1
UI["1b"]["Size"] = UDim2.new(0.23448, 0, 1.09026, 0)
UI["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1b"]["Text"] = [[Display Name]]
UI["1b"]["Position"] = UDim2.new(1.14107, 0, 0.65974, 0)

UI["1c"] = Instance.new("TextButton", UI["14"])
UI["1c"]["TextWrapped"] = true
UI["1c"]["BorderSizePixel"] = 0
UI["1c"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["1c"]["TextSize"] = 14
UI["1c"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["1c"]["TextScaled"] = true
UI["1c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["1c"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["1c"]["ZIndex"] = 3
UI["1c"]["Size"] = UDim2.new(0.17042, 0, 1.22893, 0)
UI["1c"]["BackgroundTransparency"] = 1
UI["1c"]["Name"] = [[DisplayName]]
UI["1c"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["1c"]["Text"] = [[]]
UI["1c"]["Position"] = UDim2.new(1.17419, 0, -0.53627, 0)

UI["1d"] = Instance.new("UICorner", UI["1c"])


UI["1e"] = Instance.new("UIStroke", UI["1c"])
UI["1e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["1e"]["Thickness"] = 1.6
UI["1e"]["Color"] = Color3.fromRGB(255, 255, 255)

UI["1f"] = Instance.new("TextButton", UI["a"])
UI["1f"]["TextWrapped"] = true
UI["1f"]["BorderSizePixel"] = 0
UI["1f"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["1f"]["TextSize"] = 14
UI["1f"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["1f"]["TextScaled"] = true
UI["1f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["1f"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["1f"]["Name"] = [[ChatSpy]]
UI["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1f"]["Text"] = [[Chat Spy]]
UI["1f"]["Position"] = UDim2.new(0.00938, 0, 0.09016, 0)

UI["20"] = Instance.new("UICorner", UI["1f"])


UI["21"] = Instance.new("UIStroke", UI["1f"])
UI["21"]["Enabled"] = false
UI["21"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["21"]["Thickness"] = 2.4
UI["21"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["22"] = Instance.new("UIPadding", UI["1f"])
UI["22"]["PaddingTop"] = UDim.new(0.3, 0)
UI["22"]["PaddingRight"] = UDim.new(0.5, 0)
UI["22"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["22"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["23"] = Instance.new("TextButton", UI["a"])
UI["23"]["TextWrapped"] = true
UI["23"]["BorderSizePixel"] = 0
UI["23"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["23"]["TextSize"] = 14
UI["23"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["23"]["TextScaled"] = true
UI["23"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["23"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["23"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["23"]["Name"] = [[Retreat]]
UI["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["23"]["Text"] = [[Retreat at]]
UI["23"]["Visible"] = false
UI["23"]["Position"] = UDim2.new(0.00938, 0, 0.09016, 0)

UI["24"] = Instance.new("UICorner", UI["23"])


UI["25"] = Instance.new("UIStroke", UI["23"])
UI["25"]["Enabled"] = false
UI["25"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["25"]["Thickness"] = 2.4
UI["25"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["26"] = Instance.new("UIPadding", UI["23"])
UI["26"]["PaddingTop"] = UDim.new(0.3, 0)
UI["26"]["PaddingRight"] = UDim.new(0.5, 0)
UI["26"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["26"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["27"] = Instance.new("TextBox", UI["23"])
UI["27"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["27"]["BorderSizePixel"] = 0
UI["27"]["TextWrapped"] = true
UI["27"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["27"]["TextSize"] = 14
UI["27"]["TextScaled"] = true
UI["27"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["27"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["27"]["PlaceholderText"] = [[Health %]]
UI["27"]["Size"] = UDim2.new(0.60548, 0, 2.45222, 0)
UI["27"]["Position"] = UDim2.new(1.45834, 0, -0.77142, 0)
UI["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["27"]["Text"] = [[]]
UI["27"]["BackgroundTransparency"] = 1

UI["28"] = Instance.new("UICorner", UI["27"])


UI["29"] = Instance.new("UIStroke", UI["27"])
UI["29"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["29"]["Thickness"] = 1.6
UI["29"]["Color"] = Color3.fromRGB(255, 255, 255)

UI["2a"] = Instance.new("UIPadding", UI["a"])
UI["2a"]["PaddingTop"] = UDim.new(0.01, 0)
UI["2a"]["PaddingLeft"] = UDim.new(0.01, 0)

UI["2b"] = Instance.new("Folder", UI["3"])
UI["2b"]["Name"] = [[MainButtonsFolder]]

UI["2c"] = Instance.new("Frame", UI["2b"])
UI["2c"]["BorderSizePixel"] = 0
UI["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["2c"]["Size"] = UDim2.new(0.29965, 0, 0.82235, 0)
UI["2c"]["Position"] = UDim2.new(0.01178, 0, 0.17765, 0)
UI["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["2c"]["BackgroundTransparency"] = 1

UI["2d"] = Instance.new("UIListLayout", UI["2c"])
UI["2d"]["Padding"] = UDim.new(0.04, 0)
UI["2d"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["2e"] = Instance.new("TextButton", UI["2c"])
UI["2e"]["TextWrapped"] = true
UI["2e"]["BorderSizePixel"] = 0
UI["2e"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["2e"]["TextSize"] = 14
UI["2e"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["2e"]["TextScaled"] = true
UI["2e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["2e"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["2e"]["ZIndex"] = 2
UI["2e"]["Size"] = UDim2.new(0.95767, 0, 0.12984, 0)
UI["2e"]["Name"] = [[Actions]]
UI["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["2e"]["Text"] = [[Actions]]

UI["2f"] = Instance.new("UICorner", UI["2e"])


UI["30"] = Instance.new("UIStroke", UI["2e"])
UI["30"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["30"]["Thickness"] = 2.4
UI["30"]["Color"] = Color3.fromRGB(171, 35, 37)

UI["31"] = Instance.new("UIPadding", UI["2e"])
UI["31"]["PaddingTop"] = UDim.new(0.3, 0)
UI["31"]["PaddingRight"] = UDim.new(0.5, 0)
UI["31"]["PaddingLeft"] = UDim.new(0.04, 0)
UI["31"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["32"] = Instance.new("TextButton", UI["2c"])
UI["32"]["TextWrapped"] = true
UI["32"]["BorderSizePixel"] = 0
UI["32"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["32"]["TextSize"] = 14
UI["32"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["32"]["TextScaled"] = true
UI["32"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["32"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["32"]["ZIndex"] = 2
UI["32"]["Size"] = UDim2.new(0.96155, 0, 0.13179, 0)
UI["32"]["Name"] = [[Tools]]
UI["32"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["32"]["Text"] = [[Tools]]
UI["32"]["Position"] = UDim2.new(0, 0, 0.34163, 0)

UI["33"] = Instance.new("UICorner", UI["32"])


UI["34"] = Instance.new("UIStroke", UI["32"])
UI["34"]["Enabled"] = false
UI["34"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["34"]["Thickness"] = 2.4
UI["34"]["Color"] = Color3.fromRGB(171, 35, 37)

UI["35"] = Instance.new("UIPadding", UI["32"])
UI["35"]["PaddingTop"] = UDim.new(0.3, 0)
UI["35"]["PaddingRight"] = UDim.new(0.5, 0)
UI["35"]["PaddingLeft"] = UDim.new(0.04, 0)
UI["35"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["36"] = Instance.new("TextButton", UI["2c"])
UI["36"]["TextWrapped"] = true
UI["36"]["BorderSizePixel"] = 0
UI["36"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["36"]["TextSize"] = 14
UI["36"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["36"]["TextScaled"] = true
UI["36"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["36"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["36"]["ZIndex"] = 2
UI["36"]["Size"] = UDim2.new(0.96155, 0, 0.13179, 0)
UI["36"]["Name"] = [[Teleports]]
UI["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["36"]["Text"] = [[Teleports]]
UI["36"]["Position"] = UDim2.new(0, 0, 0.16984, 0)

UI["37"] = Instance.new("UICorner", UI["36"])


UI["38"] = Instance.new("UIStroke", UI["36"])
UI["38"]["Enabled"] = false
UI["38"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["38"]["Thickness"] = 2.4
UI["38"]["Color"] = Color3.fromRGB(171, 35, 37)

UI["39"] = Instance.new("UIPadding", UI["36"])
UI["39"]["PaddingTop"] = UDim.new(0.3, 0)
UI["39"]["PaddingRight"] = UDim.new(0.5, 0)
UI["39"]["PaddingLeft"] = UDim.new(0.04, 0)
UI["39"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["3a"] = Instance.new("TextButton", UI["2c"])
UI["3a"]["TextWrapped"] = true
UI["3a"]["BorderSizePixel"] = 0
UI["3a"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["3a"]["TextSize"] = 14
UI["3a"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["3a"]["TextScaled"] = true
UI["3a"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["3a"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["3a"]["ZIndex"] = 2
UI["3a"]["Size"] = UDim2.new(0.96155, 0, 0.13179, 0)
UI["3a"]["Name"] = [[Esp]]
UI["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["3a"]["Text"] = [[Esp]]
UI["3a"]["Position"] = UDim2.new(0, 0, 0.16984, 0)

UI["3b"] = Instance.new("UICorner", UI["3a"])


UI["3c"] = Instance.new("UIStroke", UI["3a"])
UI["3c"]["Enabled"] = false
UI["3c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["3c"]["Thickness"] = 2.4
UI["3c"]["Color"] = Color3.fromRGB(171, 35, 37)

UI["3d"] = Instance.new("UIPadding", UI["3a"])
UI["3d"]["PaddingTop"] = UDim.new(0.3, 0)
UI["3d"]["PaddingRight"] = UDim.new(0.5, 0)
UI["3d"]["PaddingLeft"] = UDim.new(0.04, 0)
UI["3d"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["3e"] = Instance.new("TextButton", UI["2c"])
UI["3e"]["TextWrapped"] = true
UI["3e"]["BorderSizePixel"] = 0
UI["3e"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["3e"]["TextSize"] = 14
UI["3e"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["3e"]["TextScaled"] = true
UI["3e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["3e"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["3e"]["ZIndex"] = 2
UI["3e"]["Size"] = UDim2.new(0.96155, 0, 0.13179, 0)
UI["3e"]["Name"] = [[Combat]]
UI["3e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["3e"]["Text"] = [[Combat]]
UI["3e"]["Position"] = UDim2.new(0, 0, 0.16984, 0)

UI["3f"] = Instance.new("UICorner", UI["3e"])


UI["40"] = Instance.new("UIStroke", UI["3e"])
UI["40"]["Enabled"] = false
UI["40"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["40"]["Thickness"] = 2.4
UI["40"]["Color"] = Color3.fromRGB(171, 35, 37)

UI["41"] = Instance.new("UIPadding", UI["3e"])
UI["41"]["PaddingTop"] = UDim.new(0.3, 0)
UI["41"]["PaddingRight"] = UDim.new(0.5, 0)
UI["41"]["PaddingLeft"] = UDim.new(0.04, 0)
UI["41"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["42"] = Instance.new("Folder", UI["3"])
UI["42"]["Name"] = [[Teleports]]

UI["43"] = Instance.new("ScrollingFrame", UI["42"])
UI["43"]["Visible"] = false
UI["43"]["Active"] = true
UI["43"]["BorderSizePixel"] = 0
UI["43"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["43"]["Name"] = [[Scroll]]
UI["43"]["Size"] = UDim2.new(0.62524, 0, 0.8018, 0)
UI["43"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
UI["43"]["Position"] = UDim2.new(0.331, 0, 0.174, 0)
UI["43"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["43"]["BackgroundTransparency"] = 1

UI["44"] = Instance.new("UIListLayout", UI["43"])
UI["44"]["Padding"] = UDim.new(0.015, 0)
UI["44"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["45"] = Instance.new("TextButton", UI["43"])
UI["45"]["TextWrapped"] = true
UI["45"]["BorderSizePixel"] = 0
UI["45"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["45"]["TextSize"] = 14
UI["45"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["45"]["TextScaled"] = true
UI["45"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["45"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["45"]["ZIndex"] = 2
UI["45"]["Size"] = UDim2.new(0.935, 0, 0.056, 0)
UI["45"]["Name"] = [[Workshop]]
UI["45"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["45"]["Text"] = [[Workshop]]
UI["45"]["Position"] = UDim2.new(0.009, 0, 0.09, 0)

UI["46"] = Instance.new("UICorner", UI["45"])


UI["47"] = Instance.new("UITextSizeConstraint", UI["45"])
UI["47"]["MaxTextSize"] = 20

UI["48"] = Instance.new("UIStroke", UI["45"])
UI["48"]["Enabled"] = false
UI["48"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["48"]["Thickness"] = 2.4
UI["48"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["49"] = Instance.new("UIPadding", UI["45"])
UI["49"]["PaddingTop"] = UDim.new(0.3, 0)
UI["49"]["PaddingRight"] = UDim.new(0.5, 0)
UI["49"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["49"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["4a"] = Instance.new("TextButton", UI["43"])
UI["4a"]["TextWrapped"] = true
UI["4a"]["BorderSizePixel"] = 0
UI["4a"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["4a"]["TextSize"] = 14
UI["4a"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["4a"]["TextScaled"] = true
UI["4a"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["4a"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["4a"]["ZIndex"] = 2
UI["4a"]["Size"] = UDim2.new(0.935, 0, 0.056, 0)
UI["4a"]["Name"] = [[SafeZone]]
UI["4a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["4a"]["Text"] = [[Safe Zone]]
UI["4a"]["Position"] = UDim2.new(0.009, 0, 0.09, 0)

UI["4b"] = Instance.new("UICorner", UI["4a"])


UI["4c"] = Instance.new("UITextSizeConstraint", UI["4a"])
UI["4c"]["MaxTextSize"] = 20

UI["4d"] = Instance.new("UIStroke", UI["4a"])
UI["4d"]["Enabled"] = false
UI["4d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["4d"]["Thickness"] = 2.4
UI["4d"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["4e"] = Instance.new("UIPadding", UI["4a"])
UI["4e"]["PaddingTop"] = UDim.new(0.3, 0)
UI["4e"]["PaddingRight"] = UDim.new(0.5, 0)
UI["4e"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["4e"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["4f"] = Instance.new("TextButton", UI["43"])
UI["4f"]["TextWrapped"] = true
UI["4f"]["BorderSizePixel"] = 0
UI["4f"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["4f"]["TextSize"] = 14
UI["4f"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["4f"]["TextScaled"] = true
UI["4f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["4f"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["4f"]["ZIndex"] = 2
UI["4f"]["Size"] = UDim2.new(0.935, 0, 0.056, 0)
UI["4f"]["Name"] = [[CriminalBase]]
UI["4f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["4f"]["Text"] = [[Criminal Base]]
UI["4f"]["Position"] = UDim2.new(0.00886, 0, 0.31848, 0)

UI["50"] = Instance.new("UICorner", UI["4f"])


UI["51"] = Instance.new("UITextSizeConstraint", UI["4f"])
UI["51"]["MaxTextSize"] = 20

UI["52"] = Instance.new("UIStroke", UI["4f"])
UI["52"]["Enabled"] = false
UI["52"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["52"]["Thickness"] = 2.4
UI["52"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["53"] = Instance.new("UIPadding", UI["4f"])
UI["53"]["PaddingTop"] = UDim.new(0.3, 0)
UI["53"]["PaddingRight"] = UDim.new(0.5, 0)
UI["53"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["53"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["54"] = Instance.new("TextButton", UI["43"])
UI["54"]["TextWrapped"] = true
UI["54"]["BorderSizePixel"] = 0
UI["54"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["54"]["TextSize"] = 14
UI["54"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["54"]["TextScaled"] = true
UI["54"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["54"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["54"]["ZIndex"] = 2
UI["54"]["Size"] = UDim2.new(0.935, 0, 0.056, 0)
UI["54"]["Name"] = [[GunStore]]
UI["54"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["54"]["Text"] = [[Gun Store]]
UI["54"]["Position"] = UDim2.new(0.011, 0, 0.013, 0)

UI["55"] = Instance.new("UICorner", UI["54"])


UI["56"] = Instance.new("UITextSizeConstraint", UI["54"])
UI["56"]["MaxTextSize"] = 20

UI["57"] = Instance.new("UIStroke", UI["54"])
UI["57"]["Enabled"] = false
UI["57"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["57"]["Thickness"] = 2.4
UI["57"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["58"] = Instance.new("UIPadding", UI["54"])
UI["58"]["PaddingTop"] = UDim.new(0.3, 0)
UI["58"]["PaddingRight"] = UDim.new(0.5, 0)
UI["58"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["58"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["59"] = Instance.new("TextButton", UI["43"])
UI["59"]["TextWrapped"] = true
UI["59"]["BorderSizePixel"] = 0
UI["59"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["59"]["TextSize"] = 14
UI["59"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["59"]["TextScaled"] = true
UI["59"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["59"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["59"]["ZIndex"] = 2
UI["59"]["Size"] = UDim2.new(0.935, 0, 0.056, 0)
UI["59"]["Name"] = [[Laundry]]
UI["59"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["59"]["Text"] = [[Laundry]]
UI["59"]["Position"] = UDim2.new(0.009, 0, 0.165, 0)

UI["5a"] = Instance.new("UICorner", UI["59"])


UI["5b"] = Instance.new("UITextSizeConstraint", UI["59"])
UI["5b"]["MaxTextSize"] = 20

UI["5c"] = Instance.new("UIStroke", UI["59"])
UI["5c"]["Enabled"] = false
UI["5c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["5c"]["Thickness"] = 2.4
UI["5c"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["5d"] = Instance.new("UIPadding", UI["59"])
UI["5d"]["PaddingTop"] = UDim.new(0.3, 0)
UI["5d"]["PaddingRight"] = UDim.new(0.5, 0)
UI["5d"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["5d"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["5e"] = Instance.new("TextButton", UI["43"])
UI["5e"]["TextWrapped"] = true
UI["5e"]["BorderSizePixel"] = 0
UI["5e"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["5e"]["TextSize"] = 14
UI["5e"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["5e"]["TextScaled"] = true
UI["5e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["5e"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["5e"]["ZIndex"] = 2
UI["5e"]["Size"] = UDim2.new(0.935, 0, 0.056, 0)
UI["5e"]["Name"] = [[LockedRoom]]
UI["5e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["5e"]["Text"] = [[Locked Room]]
UI["5e"]["Position"] = UDim2.new(0.009, 0, 0.09, 0)

UI["5f"] = Instance.new("UICorner", UI["5e"])


UI["60"] = Instance.new("UITextSizeConstraint", UI["5e"])
UI["60"]["MaxTextSize"] = 20

UI["61"] = Instance.new("UIStroke", UI["5e"])
UI["61"]["Enabled"] = false
UI["61"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["61"]["Thickness"] = 2.4
UI["61"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["62"] = Instance.new("UIPadding", UI["5e"])
UI["62"]["PaddingTop"] = UDim.new(0.3, 0)
UI["62"]["PaddingRight"] = UDim.new(0.5, 0)
UI["62"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["62"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["63"] = Instance.new("TextButton", UI["43"])
UI["63"]["TextWrapped"] = true
UI["63"]["BorderSizePixel"] = 0
UI["63"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["63"]["TextSize"] = 14
UI["63"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["63"]["TextScaled"] = true
UI["63"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["63"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["63"]["ZIndex"] = 2
UI["63"]["Size"] = UDim2.new(0.935, 0, 0.056, 0)
UI["63"]["Name"] = [[Mines]]
UI["63"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["63"]["Text"] = [[Mines]]
UI["63"]["Position"] = UDim2.new(0.00886, 0, 0.24271, 0)

UI["64"] = Instance.new("UICorner", UI["63"])


UI["65"] = Instance.new("UITextSizeConstraint", UI["63"])
UI["65"]["MaxTextSize"] = 20

UI["66"] = Instance.new("UIStroke", UI["63"])
UI["66"]["Enabled"] = false
UI["66"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["66"]["Thickness"] = 2.4
UI["66"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["67"] = Instance.new("UIPadding", UI["63"])
UI["67"]["PaddingTop"] = UDim.new(0.3, 0)
UI["67"]["PaddingRight"] = UDim.new(0.5, 0)
UI["67"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["67"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["68"] = Instance.new("TextButton", UI["43"])
UI["68"]["TextWrapped"] = true
UI["68"]["BorderSizePixel"] = 0
UI["68"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["68"]["TextSize"] = 14
UI["68"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["68"]["TextScaled"] = true
UI["68"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["68"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["68"]["ZIndex"] = 2
UI["68"]["Size"] = UDim2.new(0.935, 0, 0.056, 0)
UI["68"]["Name"] = [[Sewers]]
UI["68"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["68"]["Text"] = [[Sewers]]
UI["68"]["Position"] = UDim2.new(-0.00222, 0, 0.70932, 0)

UI["69"] = Instance.new("UICorner", UI["68"])


UI["6a"] = Instance.new("UITextSizeConstraint", UI["68"])
UI["6a"]["MaxTextSize"] = 20

UI["6b"] = Instance.new("UIStroke", UI["68"])
UI["6b"]["Enabled"] = false
UI["6b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["6b"]["Thickness"] = 2.4
UI["6b"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["6c"] = Instance.new("UIPadding", UI["68"])
UI["6c"]["PaddingTop"] = UDim.new(0.3, 0)
UI["6c"]["PaddingRight"] = UDim.new(0.5, 0)
UI["6c"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["6c"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["6d"] = Instance.new("TextButton", UI["43"])
UI["6d"]["TextWrapped"] = true
UI["6d"]["BorderSizePixel"] = 0
UI["6d"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["6d"]["TextSize"] = 14
UI["6d"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["6d"]["TextScaled"] = true
UI["6d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["6d"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["6d"]["ZIndex"] = 2
UI["6d"]["Size"] = UDim2.new(0.935, 0, 0.056, 0)
UI["6d"]["Name"] = [[Showers]]
UI["6d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6d"]["Text"] = [[Showers]]
UI["6d"]["Position"] = UDim2.new(0.00886, 0, 0.38896, 0)

UI["6e"] = Instance.new("UICorner", UI["6d"])


UI["6f"] = Instance.new("UITextSizeConstraint", UI["6d"])
UI["6f"]["MaxTextSize"] = 20

UI["70"] = Instance.new("UIStroke", UI["6d"])
UI["70"]["Enabled"] = false
UI["70"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["70"]["Thickness"] = 2.4
UI["70"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["71"] = Instance.new("UIPadding", UI["6d"])
UI["71"]["PaddingTop"] = UDim.new(0.3, 0)
UI["71"]["PaddingRight"] = UDim.new(0.5, 0)
UI["71"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["71"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["72"] = Instance.new("TextButton", UI["43"])
UI["72"]["TextWrapped"] = true
UI["72"]["BorderSizePixel"] = 0
UI["72"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["72"]["TextSize"] = 14
UI["72"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["72"]["TextScaled"] = true
UI["72"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["72"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["72"]["ZIndex"] = 2
UI["72"]["Size"] = UDim2.new(0.935, 0, 0.056, 0)
UI["72"]["Name"] = [[StorageRoom]]
UI["72"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["72"]["Text"] = [[Storage Room]]
UI["72"]["Position"] = UDim2.new(0.00886, 0, 0.38896, 0)

UI["73"] = Instance.new("UICorner", UI["72"])


UI["74"] = Instance.new("UITextSizeConstraint", UI["72"])
UI["74"]["MaxTextSize"] = 20

UI["75"] = Instance.new("UIStroke", UI["72"])
UI["75"]["Enabled"] = false
UI["75"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["75"]["Thickness"] = 2.4
UI["75"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["76"] = Instance.new("UIPadding", UI["72"])
UI["76"]["PaddingTop"] = UDim.new(0.3, 0)
UI["76"]["PaddingRight"] = UDim.new(0.5, 0)
UI["76"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["76"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["77"] = Instance.new("TextButton", UI["43"])
UI["77"]["TextWrapped"] = true
UI["77"]["BorderSizePixel"] = 0
UI["77"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["77"]["TextSize"] = 14
UI["77"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["77"]["TextScaled"] = true
UI["77"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["77"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["77"]["ZIndex"] = 2
UI["77"]["Size"] = UDim2.new(0.935, 0, 0.056, 0)
UI["77"]["Name"] = [[Bounty]]
UI["77"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["77"]["Text"] = [[Bounty]]
UI["77"]["Position"] = UDim2.new(0.011, 0, 0.013, 0)

UI["78"] = Instance.new("UICorner", UI["77"])


UI["79"] = Instance.new("UITextSizeConstraint", UI["77"])
UI["79"]["MaxTextSize"] = 20

UI["7a"] = Instance.new("UIStroke", UI["77"])
UI["7a"]["Enabled"] = false
UI["7a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["7a"]["Thickness"] = 2.4
UI["7a"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["7b"] = Instance.new("UIPadding", UI["77"])
UI["7b"]["PaddingTop"] = UDim.new(0.3, 0)
UI["7b"]["PaddingRight"] = UDim.new(0.5, 0)
UI["7b"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["7b"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["7c"] = Instance.new("UIPadding", UI["43"])
UI["7c"]["PaddingTop"] = UDim.new(0.01, 0)
UI["7c"]["PaddingLeft"] = UDim.new(0.01, 0)

UI["7d"] = Instance.new("Folder", UI["3"])
UI["7d"]["Name"] = [[Actions]]

UI["7e"] = Instance.new("ScrollingFrame", UI["7d"])
UI["7e"]["Active"] = true
UI["7e"]["BorderSizePixel"] = 0
UI["7e"]["ScrollingEnabled"] = false
UI["7e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["7e"]["Name"] = [[Scroll]]
UI["7e"]["ScrollBarImageTransparency"] = 1
UI["7e"]["Size"] = UDim2.new(0.625, 0, 0.802, 0)
UI["7e"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
UI["7e"]["Position"] = UDim2.new(0.331, 0, 0.174, 0)
UI["7e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["7e"]["BackgroundTransparency"] = 1

UI["7f"] = Instance.new("UIListLayout", UI["7e"])
UI["7f"]["Padding"] = UDim.new(0.015, 0)
UI["7f"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["80"] = Instance.new("TextButton", UI["7e"])
UI["80"]["TextWrapped"] = true
UI["80"]["BorderSizePixel"] = 0
UI["80"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["80"]["TextSize"] = 14
UI["80"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["80"]["TextScaled"] = true
UI["80"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["80"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["80"]["ZIndex"] = 3
UI["80"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["80"]["Name"] = [[AutoCollect]]
UI["80"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["80"]["Text"] = [[Auto Collect]]
UI["80"]["Position"] = UDim2.new(0.17575, 0, 0.00412, 0)

UI["81"] = Instance.new("UICorner", UI["80"])


UI["82"] = Instance.new("TextButton", UI["80"])
UI["82"]["TextWrapped"] = true
UI["82"]["BorderSizePixel"] = 0
UI["82"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["82"]["TextSize"] = 14
UI["82"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["82"]["TextScaled"] = true
UI["82"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["82"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["82"]["ZIndex"] = 3
UI["82"]["Size"] = UDim2.new(0.60094, 0, 2.32435, 0)
UI["82"]["Name"] = [[CurrentSelection]]
UI["82"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["82"]["Text"] = [[ All ▼]]
UI["82"]["Position"] = UDim2.new(1.45834, 0, -0.66887, 0)

UI["83"] = Instance.new("UICorner", UI["82"])


UI["84"] = Instance.new("UITextSizeConstraint", UI["82"])
UI["84"]["MaxTextSize"] = 25

UI["85"] = Instance.new("UIStroke", UI["82"])
UI["85"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["85"]["Thickness"] = 1.6
UI["85"]["Color"] = Color3.fromRGB(255, 255, 255)

UI["86"] = Instance.new("Frame", UI["82"])
UI["86"]["Visible"] = false
UI["86"]["ZIndex"] = 4
UI["86"]["BorderSizePixel"] = 0
UI["86"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["86"]["Size"] = UDim2.new(1, 0, 3.2692, 0)
UI["86"]["Position"] = UDim2.new(0, 0, 1.02551, 0)
UI["86"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["86"]["Name"] = [[DropdownFrame]]

UI["87"] = Instance.new("TextButton", UI["86"])
UI["87"]["TextWrapped"] = true
UI["87"]["BorderSizePixel"] = 0
UI["87"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["87"]["TextSize"] = 14
UI["87"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["87"]["TextScaled"] = true
UI["87"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["87"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["87"]["ZIndex"] = 5
UI["87"]["Size"] = UDim2.new(1, 0, 0.27763, 0)
UI["87"]["Name"] = [[Option1]]
UI["87"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["87"]["Text"] = [[ Blades]]
UI["87"]["Position"] = UDim2.new(-0.00972, 0, -0.00092, 0)

UI["88"] = Instance.new("UITextSizeConstraint", UI["87"])
UI["88"]["MaxTextSize"] = 25

UI["89"] = Instance.new("TextButton", UI["86"])
UI["89"]["TextWrapped"] = true
UI["89"]["BorderSizePixel"] = 0
UI["89"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["89"]["TextSize"] = 14
UI["89"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["89"]["TextScaled"] = true
UI["89"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["89"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["89"]["ZIndex"] = 5
UI["89"]["Size"] = UDim2.new(1, 0, 0.27763, 0)
UI["89"]["Name"] = [[Option2]]
UI["89"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["89"]["Text"] = [[ Springs]]
UI["89"]["Position"] = UDim2.new(0, 0, 0.27145, 0)

UI["8a"] = Instance.new("UITextSizeConstraint", UI["89"])
UI["8a"]["MaxTextSize"] = 25

UI["8b"] = Instance.new("TextButton", UI["86"])
UI["8b"]["TextWrapped"] = true
UI["8b"]["BorderSizePixel"] = 0
UI["8b"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["8b"]["TextSize"] = 14
UI["8b"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["8b"]["TextScaled"] = true
UI["8b"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["8b"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["8b"]["ZIndex"] = 5
UI["8b"]["Size"] = UDim2.new(1, 0, 0.27763, 0)
UI["8b"]["Name"] = [[Option3]]
UI["8b"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["8b"]["Text"] = [[ Gears]]
UI["8b"]["Position"] = UDim2.new(0, 0, 0.9, 0)

UI["8c"] = Instance.new("UITextSizeConstraint", UI["8b"])
UI["8c"]["MaxTextSize"] = 25

UI["8d"] = Instance.new("UIListLayout", UI["86"])
UI["8d"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["8e"] = Instance.new("UIStroke", UI["80"])
UI["8e"]["Enabled"] = false
UI["8e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["8e"]["Thickness"] = 2.4
UI["8e"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["8f"] = Instance.new("TextButton", UI["80"])
UI["8f"]["TextWrapped"] = true
UI["8f"]["BorderSizePixel"] = 0
UI["8f"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["8f"]["TextSize"] = 14
UI["8f"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["8f"]["TextScaled"] = true
UI["8f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["8f"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["8f"]["ZIndex"] = 3
UI["8f"]["Size"] = UDim2.new(0.17042, 0, 1.22893, 0)
UI["8f"]["BackgroundTransparency"] = 1
UI["8f"]["Name"] = [[SafeZone]]
UI["8f"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["8f"]["Text"] = [[]]
UI["8f"]["Position"] = UDim2.new(0.90335, 0, -0.53627, 0)

UI["90"] = Instance.new("UICorner", UI["8f"])


UI["91"] = Instance.new("UIStroke", UI["8f"])
UI["91"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["91"]["Thickness"] = 1.6
UI["91"]["Color"] = Color3.fromRGB(255, 255, 255)

UI["92"] = Instance.new("TextLabel", UI["80"])
UI["92"]["TextWrapped"] = true
UI["92"]["ZIndex"] = 3
UI["92"]["BorderSizePixel"] = 0
UI["92"]["TextScaled"] = true
UI["92"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["92"]["TextSize"] = 50
UI["92"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["92"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["92"]["BackgroundTransparency"] = 1
UI["92"]["Size"] = UDim2.new(0.23448, 0, 1.09026, 0)
UI["92"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["92"]["Text"] = [[SafeZone]]
UI["92"]["Position"] = UDim2.new(0.8712, 0, 0.65974, 0)

UI["93"] = Instance.new("TextButton", UI["80"])
UI["93"]["TextWrapped"] = true
UI["93"]["BorderSizePixel"] = 0
UI["93"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["93"]["TextSize"] = 14
UI["93"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["93"]["TextScaled"] = true
UI["93"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["93"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["93"]["ZIndex"] = 3
UI["93"]["Size"] = UDim2.new(0.17042, 0, 1.22893, 0)
UI["93"]["BackgroundTransparency"] = 1
UI["93"]["Name"] = [[AutoPick]]
UI["93"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["93"]["Text"] = [[]]
UI["93"]["Position"] = UDim2.new(1.17419, 0, -0.53627, 0)

UI["94"] = Instance.new("UICorner", UI["93"])


UI["95"] = Instance.new("UIStroke", UI["93"])
UI["95"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["95"]["Thickness"] = 1.6
UI["95"]["Color"] = Color3.fromRGB(255, 255, 255)

UI["96"] = Instance.new("TextLabel", UI["80"])
UI["96"]["TextWrapped"] = true
UI["96"]["ZIndex"] = 3
UI["96"]["BorderSizePixel"] = 0
UI["96"]["TextScaled"] = true
UI["96"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["96"]["TextSize"] = 50
UI["96"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["96"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["96"]["BackgroundTransparency"] = 1
UI["96"]["Size"] = UDim2.new(0.23448, 0, 1.09026, 0)
UI["96"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["96"]["Text"] = [[AutoPick]]
UI["96"]["Position"] = UDim2.new(1.14107, 0, 0.65974, 0)

UI["97"] = Instance.new("UIPadding", UI["80"])
UI["97"]["PaddingTop"] = UDim.new(0.3, 0)
UI["97"]["PaddingRight"] = UDim.new(0.5, 0)
UI["97"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["97"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["98"] = Instance.new("TextButton", UI["7e"])
UI["98"]["TextWrapped"] = true
UI["98"]["BorderSizePixel"] = 0
UI["98"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["98"]["TextSize"] = 14
UI["98"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["98"]["TextScaled"] = true
UI["98"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["98"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["98"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["98"]["Name"] = [[AutoDropCash]]
UI["98"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["98"]["Text"] = [[Auto Drop $]]
UI["98"]["Position"] = UDim2.new(0.0408, 0, 0.17756, 0)

UI["99"] = Instance.new("UICorner", UI["98"])


UI["9a"] = Instance.new("UIStroke", UI["98"])
UI["9a"]["Enabled"] = false
UI["9a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["9a"]["Thickness"] = 2.4
UI["9a"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["9b"] = Instance.new("TextBox", UI["98"])
UI["9b"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["9b"]["BorderSizePixel"] = 0
UI["9b"]["TextWrapped"] = true
UI["9b"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["9b"]["TextSize"] = 14
UI["9b"]["TextScaled"] = true
UI["9b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["9b"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["9b"]["PlaceholderText"] = [[35-5000]]
UI["9b"]["Size"] = UDim2.new(0.60548, 0, 2.45222, 0)
UI["9b"]["Position"] = UDim2.new(1.45834, 0, -0.77142, 0)
UI["9b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["9b"]["Text"] = [[]]
UI["9b"]["BackgroundTransparency"] = 1

UI["9c"] = Instance.new("UICorner", UI["9b"])


UI["9d"] = Instance.new("UIStroke", UI["9b"])
UI["9d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["9d"]["Thickness"] = 1.6
UI["9d"]["Color"] = Color3.fromRGB(255, 255, 255)

UI["9e"] = Instance.new("UIPadding", UI["98"])
UI["9e"]["PaddingTop"] = UDim.new(0.3, 0)
UI["9e"]["PaddingRight"] = UDim.new(0.5, 0)
UI["9e"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["9e"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["9f"] = Instance.new("TextButton", UI["7e"])
UI["9f"]["TextWrapped"] = true
UI["9f"]["BorderSizePixel"] = 0
UI["9f"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["9f"]["TextSize"] = 14
UI["9f"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["9f"]["TextScaled"] = true
UI["9f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["9f"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["9f"]["ZIndex"] = 2
UI["9f"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["9f"]["Name"] = [[AutoDropParts]]
UI["9f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["9f"]["Text"] = [[Auto Drop Parts]]
UI["9f"]["Position"] = UDim2.new(0.14594, 0, 0.34894, 0)

UI["a0"] = Instance.new("UICorner", UI["9f"])


UI["a1"] = Instance.new("UIStroke", UI["9f"])
UI["a1"]["Enabled"] = false
UI["a1"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["a1"]["Thickness"] = 2.4
UI["a1"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["a2"] = Instance.new("TextButton", UI["9f"])
UI["a2"]["TextWrapped"] = true
UI["a2"]["BorderSizePixel"] = 0
UI["a2"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["a2"]["TextSize"] = 14
UI["a2"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["a2"]["TextScaled"] = true
UI["a2"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["a2"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["a2"]["ZIndex"] = 3
UI["a2"]["Size"] = UDim2.new(0.59984, 0, 2.45223, 0)
UI["a2"]["Name"] = [[CurrentSelection]]
UI["a2"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["a2"]["Text"] = [[ All ▼]]
UI["a2"]["Position"] = UDim2.new(1.45834, 0, -0.70223, 0)

UI["a3"] = Instance.new("UICorner", UI["a2"])


UI["a4"] = Instance.new("UITextSizeConstraint", UI["a2"])
UI["a4"]["MaxTextSize"] = 25

UI["a5"] = Instance.new("UIStroke", UI["a2"])
UI["a5"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["a5"]["Thickness"] = 1.6
UI["a5"]["Color"] = Color3.fromRGB(255, 255, 255)

UI["a6"] = Instance.new("Frame", UI["a2"])
UI["a6"]["Visible"] = false
UI["a6"]["ZIndex"] = 4
UI["a6"]["BorderSizePixel"] = 0
UI["a6"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["a6"]["Size"] = UDim2.new(1, 0, 3.2692, 0)
UI["a6"]["Position"] = UDim2.new(0, 0, 1.02551, 0)
UI["a6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["a6"]["Name"] = [[DropdownFrame]]

UI["a7"] = Instance.new("TextButton", UI["a6"])
UI["a7"]["TextWrapped"] = true
UI["a7"]["BorderSizePixel"] = 0
UI["a7"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["a7"]["TextSize"] = 14
UI["a7"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["a7"]["TextScaled"] = true
UI["a7"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["a7"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["a7"]["ZIndex"] = 5
UI["a7"]["Size"] = UDim2.new(1, 0, 0.27763, 0)
UI["a7"]["Name"] = [[Option1]]
UI["a7"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["a7"]["Text"] = [[ Blades]]
UI["a7"]["Position"] = UDim2.new(-0.00972, 0, -0.00092, 0)

UI["a8"] = Instance.new("UITextSizeConstraint", UI["a7"])
UI["a8"]["MaxTextSize"] = 25

UI["a9"] = Instance.new("TextButton", UI["a6"])
UI["a9"]["TextWrapped"] = true
UI["a9"]["BorderSizePixel"] = 0
UI["a9"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["a9"]["TextSize"] = 14
UI["a9"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["a9"]["TextScaled"] = true
UI["a9"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["a9"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["a9"]["ZIndex"] = 5
UI["a9"]["Size"] = UDim2.new(1, 0, 0.27763, 0)
UI["a9"]["Name"] = [[Option2]]
UI["a9"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["a9"]["Text"] = [[ Springs]]
UI["a9"]["Position"] = UDim2.new(0, 0, 0.27145, 0)

UI["aa"] = Instance.new("UITextSizeConstraint", UI["a9"])
UI["aa"]["MaxTextSize"] = 25

UI["ab"] = Instance.new("TextButton", UI["a6"])
UI["ab"]["TextWrapped"] = true
UI["ab"]["BorderSizePixel"] = 0
UI["ab"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["ab"]["TextSize"] = 14
UI["ab"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["ab"]["TextScaled"] = true
UI["ab"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["ab"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["ab"]["ZIndex"] = 5
UI["ab"]["Size"] = UDim2.new(1, 0, 0.27763, 0)
UI["ab"]["Name"] = [[Option3]]
UI["ab"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["ab"]["Text"] = [[ Gears]]
UI["ab"]["Position"] = UDim2.new(0, 0, 0.54382, 0)

UI["ac"] = Instance.new("UITextSizeConstraint", UI["ab"])
UI["ac"]["MaxTextSize"] = 25

UI["ad"] = Instance.new("UIListLayout", UI["a6"])
UI["ad"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["ae"] = Instance.new("UIPadding", UI["9f"])
UI["ae"]["PaddingTop"] = UDim.new(0.3, 0)
UI["ae"]["PaddingRight"] = UDim.new(0.5, 0)
UI["ae"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["ae"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["af"] = Instance.new("TextButton", UI["7e"])
UI["af"]["TextWrapped"] = true
UI["af"]["BorderSizePixel"] = 0
UI["af"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["af"]["TextSize"] = 14
UI["af"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["af"]["TextScaled"] = true
UI["af"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["af"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["af"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["af"]["Name"] = [[CrateFarm]]
UI["af"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["af"]["Text"] = [[OP $$ Autofarm (JOIN DC)]]
UI["af"]["Position"] = UDim2.new(0.00938, 0, 0.09016, 0)

UI["b0"] = Instance.new("UICorner", UI["af"])


UI["b1"] = Instance.new("UIStroke", UI["af"])
UI["b1"]["Enabled"] = false
UI["b1"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["b1"]["Thickness"] = 2.4
UI["b1"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["b2"] = Instance.new("UIPadding", UI["af"])
UI["b2"]["PaddingTop"] = UDim.new(0.3, 0)
UI["b2"]["PaddingRight"] = UDim.new(0.5, 0)
UI["b2"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["b2"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["b3"] = Instance.new("TextButton", UI["af"])
UI["b3"]["TextWrapped"] = true
UI["b3"]["BorderSizePixel"] = 0
UI["b3"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["b3"]["TextSize"] = 14
UI["b3"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["b3"]["TextScaled"] = true
UI["b3"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["b3"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["b3"]["ZIndex"] = 3
UI["b3"]["Size"] = UDim2.new(0.60094, 0, 2.32435, 0)
UI["b3"]["Name"] = [[CurrentSelection]]
UI["b3"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["b3"]["Text"] = [[ Crates  ▼]]
UI["b3"]["Position"] = UDim2.new(1.45834, 0, -0.66887, 0)

UI["b4"] = Instance.new("UICorner", UI["b3"])


UI["b5"] = Instance.new("UIStroke", UI["b3"])
UI["b5"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["b5"]["Thickness"] = 1.6
UI["b5"]["Color"] = Color3.fromRGB(255, 255, 255)

UI["b6"] = Instance.new("UITextSizeConstraint", UI["b3"])
UI["b6"]["MaxTextSize"] = 25

UI["b7"] = Instance.new("Frame", UI["b3"])
UI["b7"]["Visible"] = false
UI["b7"]["ZIndex"] = 4
UI["b7"]["BorderSizePixel"] = 0
UI["b7"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["b7"]["Size"] = UDim2.new(1, 0, 3.2692, 0)
UI["b7"]["Position"] = UDim2.new(0, 0, 1.02551, 0)
UI["b7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["b7"]["Name"] = [[DropdownFrame]]
UI["b7"]["Rotation"] = 0.001
UI["b7"]["BackgroundTransparency"] = 1

UI["b8"] = Instance.new("UIListLayout", UI["b7"])
UI["b8"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["b9"] = Instance.new("TextButton", UI["b7"])
UI["b9"]["TextWrapped"] = true
UI["b9"]["BorderSizePixel"] = 0
UI["b9"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["b9"]["TextSize"] = 14
UI["b9"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["b9"]["TextScaled"] = true
UI["b9"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["b9"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["b9"]["ZIndex"] = 5
UI["b9"]["Size"] = UDim2.new(1, 0, 0.27763, 0)
UI["b9"]["Name"] = [[Option1]]
UI["b9"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["b9"]["Text"] = [[ Cameras]]
UI["b9"]["Position"] = UDim2.new(-0.00972, 0, -0.00092, 0)

UI["ba"] = Instance.new("UITextSizeConstraint", UI["b9"])
UI["ba"]["MaxTextSize"] = 25

UI["bb"] = Instance.new("TextButton", UI["7e"])
UI["bb"]["TextWrapped"] = true
UI["bb"]["BorderSizePixel"] = 0
UI["bb"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["bb"]["TextSize"] = 14
UI["bb"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["bb"]["TextScaled"] = true
UI["bb"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["bb"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["bb"]["ZIndex"] = 3
UI["bb"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["bb"]["Name"] = [[AutoTrain]]
UI["bb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["bb"]["Text"] = [[Auto Train (W.I.P)]]
UI["bb"]["Position"] = UDim2.new(0.17575, 0, 0.00412, 0)

UI["bc"] = Instance.new("UICorner", UI["bb"])


UI["bd"] = Instance.new("TextButton", UI["bb"])
UI["bd"]["TextWrapped"] = true
UI["bd"]["BorderSizePixel"] = 0
UI["bd"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["bd"]["TextSize"] = 14
UI["bd"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["bd"]["TextScaled"] = true
UI["bd"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["bd"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["bd"]["ZIndex"] = 3
UI["bd"]["Size"] = UDim2.new(0.60094, 0, 2.32435, 0)
UI["bd"]["Name"] = [[CurrentSelection]]
UI["bd"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["bd"]["Text"] = [[ Dumbbell  ▼]]
UI["bd"]["Position"] = UDim2.new(1.45834, 0, -0.66887, 0)

UI["be"] = Instance.new("UICorner", UI["bd"])


UI["bf"] = Instance.new("UIStroke", UI["bd"])
UI["bf"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["bf"]["Thickness"] = 1.6
UI["bf"]["Color"] = Color3.fromRGB(255, 255, 255)

UI["c0"] = Instance.new("UITextSizeConstraint", UI["bd"])
UI["c0"]["MaxTextSize"] = 25

UI["c1"] = Instance.new("Frame", UI["bd"])
UI["c1"]["Visible"] = false
UI["c1"]["ZIndex"] = 4
UI["c1"]["BorderSizePixel"] = 0
UI["c1"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["c1"]["Size"] = UDim2.new(1, 0, 3.2692, 0)
UI["c1"]["Position"] = UDim2.new(0, 0, 1.02551, 0)
UI["c1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["c1"]["Name"] = [[DropdownFrame]]
UI["c1"]["Rotation"] = 0.001
UI["c1"]["BackgroundTransparency"] = 1

UI["c2"] = Instance.new("UIListLayout", UI["c1"])
UI["c2"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["c3"] = Instance.new("TextButton", UI["c1"])
UI["c3"]["TextWrapped"] = true
UI["c3"]["BorderSizePixel"] = 0
UI["c3"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["c3"]["TextSize"] = 14
UI["c3"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["c3"]["TextScaled"] = true
UI["c3"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["c3"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["c3"]["ZIndex"] = 5
UI["c3"]["Size"] = UDim2.new(1, 0, 0.27763, 0)
UI["c3"]["Name"] = [[Option1]]
UI["c3"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["c3"]["Text"] = [[ Pullup ]]
UI["c3"]["Position"] = UDim2.new(-0.00972, 0, -0.00092, 0)

UI["c4"] = Instance.new("UITextSizeConstraint", UI["c3"])
UI["c4"]["MaxTextSize"] = 25

UI["c5"] = Instance.new("TextButton", UI["c1"])
UI["c5"]["TextWrapped"] = true
UI["c5"]["BorderSizePixel"] = 0
UI["c5"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["c5"]["TextSize"] = 14
UI["c5"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["c5"]["TextScaled"] = true
UI["c5"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["c5"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["c5"]["ZIndex"] = 5
UI["c5"]["Size"] = UDim2.new(1, 0, 0.27763, 0)
UI["c5"]["Name"] = [[Option2]]
UI["c5"]["BorderColor3"] = Color3.fromRGB(255, 255, 255)
UI["c5"]["Text"] = [[ Dual]]
UI["c5"]["Position"] = UDim2.new(-0.00972, 0, -0.00092, 0)

UI["c6"] = Instance.new("UITextSizeConstraint", UI["c5"])
UI["c6"]["MaxTextSize"] = 25

UI["c7"] = Instance.new("UIStroke", UI["bb"])
UI["c7"]["Enabled"] = false
UI["c7"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["c7"]["Thickness"] = 2.4
UI["c7"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["c8"] = Instance.new("UIPadding", UI["bb"])
UI["c8"]["PaddingTop"] = UDim.new(0.3, 0)
UI["c8"]["PaddingRight"] = UDim.new(0.5, 0)
UI["c8"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["c8"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["c9"] = Instance.new("UIPadding", UI["7e"])
UI["c9"]["PaddingTop"] = UDim.new(0.01, 0)
UI["c9"]["PaddingLeft"] = UDim.new(0.01, 0)

UI["ca"] = Instance.new("Frame", UI["3"])
UI["ca"]["ZIndex"] = 5
UI["ca"]["BorderSizePixel"] = 0
UI["ca"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["ca"]["Size"] = UDim2.new(0.4213, 0, 0.21207, 0)
UI["ca"]["Position"] = UDim2.new(0.28899, 0, 1.1, 0)
UI["ca"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["ca"]["Name"] = [[Notifyframe]]

UI["cb"] = Instance.new("TextLabel", UI["ca"])
UI["cb"]["TextWrapped"] = true
UI["cb"]["ZIndex"] = 5
UI["cb"]["BorderSizePixel"] = 0
UI["cb"]["TextScaled"] = true
UI["cb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["cb"]["TextSize"] = 100
UI["cb"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["cb"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["cb"]["BackgroundTransparency"] = 1
UI["cb"]["Size"] = UDim2.new(1, 0, 1, 0)
UI["cb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["cb"]["Text"] = [[Pick a number bruh]]

UI["cc"] = Instance.new("UITextSizeConstraint", UI["cb"])
UI["cc"]["MaxTextSize"] = 35

UI["cd"] = Instance.new("TextButton", UI["ca"])
UI["cd"]["TextWrapped"] = true
UI["cd"]["BorderSizePixel"] = 0
UI["cd"]["TextSize"] = 14
UI["cd"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["cd"]["TextScaled"] = true
UI["cd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["cd"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["cd"]["ZIndex"] = 5
UI["cd"]["Size"] = UDim2.new(0.08817, 0, 0.34885, 0)
UI["cd"]["BackgroundTransparency"] = 1
UI["cd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["cd"]["Text"] = [[X]]
UI["cd"]["Position"] = UDim2.new(0.91179, 0, -0.00002, 0)

UI["ce"] = Instance.new("UIStroke", UI["ca"])
UI["ce"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["ce"]["Thickness"] = 2.8
UI["ce"]["Color"] = Color3.fromRGB(255, 255, 255)

UI["cf"] = Instance.new("Frame", UI["3"])
UI["cf"]["Visible"] = false
UI["cf"]["ZIndex"] = 5
UI["cf"]["BorderSizePixel"] = 0
UI["cf"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["cf"]["Size"] = UDim2.new(0.44969, 0, 0.3516, 0)
UI["cf"]["Position"] = UDim2.new(0.27387, 0, 0.28093, 0)
UI["cf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["cf"]["Name"] = [[Key]]
UI["cf"]["BackgroundTransparency"] = 0.25

UI["d0"] = Instance.new("TextLabel", UI["cf"])
UI["d0"]["TextWrapped"] = true
UI["d0"]["ZIndex"] = 6
UI["d0"]["BorderSizePixel"] = 0
UI["d0"]["TextScaled"] = true
UI["d0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["d0"]["TextSize"] = 14
UI["d0"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["d0"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["d0"]["BackgroundTransparency"] = 1
UI["d0"]["Size"] = UDim2.new(1, 0, 0.28028, 0)
UI["d0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["d0"]["Text"] = [[Insert Key]]

UI["d1"] = Instance.new("TextBox", UI["cf"])
UI["d1"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["d1"]["ZIndex"] = 6
UI["d1"]["BorderSizePixel"] = 0
UI["d1"]["TextWrapped"] = true
UI["d1"]["TextSize"] = 14
UI["d1"]["TextScaled"] = true
UI["d1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["d1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["d1"]["Size"] = UDim2.new(0.49708, 0, 0.38033, 0)
UI["d1"]["Position"] = UDim2.new(0.09973, 0, 0.44525, 0)
UI["d1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["d1"]["Text"] = [[]]

UI["d2"] = Instance.new("TextButton", UI["cf"])
UI["d2"]["TextWrapped"] = true
UI["d2"]["BorderSizePixel"] = 0
UI["d2"]["TextSize"] = 14
UI["d2"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["d2"]["TextScaled"] = true
UI["d2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["d2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["d2"]["ZIndex"] = 6
UI["d2"]["Size"] = UDim2.new(0.33157, 0, 0.21319, 0)
UI["d2"]["Name"] = [[Confirm]]
UI["d2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["d2"]["Text"] = [[Confirm]]
UI["d2"]["Position"] = UDim2.new(0.63872, 0, 0.56113, 0)

UI["d3"] = Instance.new("TextButton", UI["cf"])
UI["d3"]["TextWrapped"] = true
UI["d3"]["BorderSizePixel"] = 0
UI["d3"]["TextSize"] = 14
UI["d3"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["d3"]["TextScaled"] = true
UI["d3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["d3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["d3"]["ZIndex"] = 6
UI["d3"]["Size"] = UDim2.new(0.13688, 0, 0.26534, 0)
UI["d3"]["BackgroundTransparency"] = 1
UI["d3"]["Name"] = [[Exit]]
UI["d3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["d3"]["Text"] = [[X]]
UI["d3"]["Position"] = UDim2.new(0.85888, 0, 0.0122, 0)

UI["d4"] = Instance.new("Folder", UI["3"])
UI["d4"]["Name"] = [[Esp]]

UI["d5"] = Instance.new("ScrollingFrame", UI["d4"])
UI["d5"]["Visible"] = false
UI["d5"]["Active"] = true
UI["d5"]["BorderSizePixel"] = 0
UI["d5"]["ScrollingEnabled"] = false
UI["d5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["d5"]["Name"] = [[Scroll]]
UI["d5"]["ScrollBarImageTransparency"] = 1
UI["d5"]["Size"] = UDim2.new(0.625, 0, 0.802, 0)
UI["d5"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
UI["d5"]["Position"] = UDim2.new(0.331, 0, 0.174, 0)
UI["d5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["d5"]["BackgroundTransparency"] = 1

UI["d6"] = Instance.new("UIListLayout", UI["d5"])
UI["d6"]["Padding"] = UDim.new(0.015, 0)
UI["d6"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["d7"] = Instance.new("TextButton", UI["d5"])
UI["d7"]["TextWrapped"] = true
UI["d7"]["BorderSizePixel"] = 0
UI["d7"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["d7"]["TextSize"] = 14
UI["d7"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["d7"]["TextScaled"] = true
UI["d7"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["d7"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["d7"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["d7"]["Name"] = [[PlayerEsp]]
UI["d7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["d7"]["Text"] = [[Player Esp]]
UI["d7"]["Position"] = UDim2.new(0.00938, 0, 0.09016, 0)

UI["d8"] = Instance.new("UICorner", UI["d7"])


UI["d9"] = Instance.new("UIStroke", UI["d7"])
UI["d9"]["Enabled"] = false
UI["d9"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["d9"]["Thickness"] = 2.4
UI["d9"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["da"] = Instance.new("UIPadding", UI["d7"])
UI["da"]["PaddingTop"] = UDim.new(0.3, 0)
UI["da"]["PaddingRight"] = UDim.new(0.5, 0)
UI["da"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["da"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["db"] = Instance.new("UIPadding", UI["d5"])
UI["db"]["PaddingTop"] = UDim.new(0.01, 0)
UI["db"]["PaddingLeft"] = UDim.new(0.01, 0)

UI["dc"] = Instance.new("TextButton", UI["d5"])
UI["dc"]["TextWrapped"] = true
UI["dc"]["BorderSizePixel"] = 0
UI["dc"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["dc"]["TextSize"] = 14
UI["dc"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["dc"]["TextScaled"] = true
UI["dc"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["dc"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["dc"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["dc"]["Name"] = [[CraftingEsp]]
UI["dc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["dc"]["Text"] = [[Crafting Parts Esp]]
UI["dc"]["Position"] = UDim2.new(0.00938, 0, 0.09016, 0)

UI["dd"] = Instance.new("UICorner", UI["dc"])


UI["de"] = Instance.new("UIStroke", UI["dc"])
UI["de"]["Enabled"] = false
UI["de"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["de"]["Thickness"] = 2.4
UI["de"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["df"] = Instance.new("UIPadding", UI["dc"])
UI["df"]["PaddingTop"] = UDim.new(0.3, 0)
UI["df"]["PaddingRight"] = UDim.new(0.5, 0)
UI["df"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["df"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["e0"] = Instance.new("Folder", UI["3"])
UI["e0"]["Name"] = [[Combat]]

UI["e1"] = Instance.new("ScrollingFrame", UI["e0"])
UI["e1"]["Visible"] = false
UI["e1"]["Active"] = true
UI["e1"]["BorderSizePixel"] = 0
UI["e1"]["ScrollingEnabled"] = false
UI["e1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["e1"]["Name"] = [[Scroll]]
UI["e1"]["ScrollBarImageTransparency"] = 1
UI["e1"]["Size"] = UDim2.new(0.625, 0, 0.802, 0)
UI["e1"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
UI["e1"]["Position"] = UDim2.new(0.331, 0, 0.174, 0)
UI["e1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["e1"]["BackgroundTransparency"] = 1

UI["e2"] = Instance.new("UIListLayout", UI["e1"])
UI["e2"]["Padding"] = UDim.new(0.015, 0)
UI["e2"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["e3"] = Instance.new("TextButton", UI["e1"])
UI["e3"]["TextWrapped"] = true
UI["e3"]["BorderSizePixel"] = 0
UI["e3"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["e3"]["TextSize"] = 14
UI["e3"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["e3"]["TextScaled"] = true
UI["e3"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["e3"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["e3"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["e3"]["Name"] = [[otherplateholder(xd)]]
UI["e3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["e3"]["Text"] = [[Silent Aim]]
UI["e3"]["Position"] = UDim2.new(0.00938, 0, 0.09016, 0)

UI["e4"] = Instance.new("UICorner", UI["e3"])


UI["e5"] = Instance.new("UIStroke", UI["e3"])
UI["e5"]["Enabled"] = false
UI["e5"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["e5"]["Thickness"] = 2.4
UI["e5"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["e6"] = Instance.new("UIPadding", UI["e3"])
UI["e6"]["PaddingTop"] = UDim.new(0.3, 0)
UI["e6"]["PaddingRight"] = UDim.new(0.5, 0)
UI["e6"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["e6"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["e7"] = Instance.new("UIPadding", UI["e1"])
UI["e7"]["PaddingTop"] = UDim.new(0.01, 0)
UI["e7"]["PaddingLeft"] = UDim.new(0.01, 0)

UI["e8"] = Instance.new("TextButton", UI["e1"])
UI["e8"]["TextWrapped"] = true
UI["e8"]["BorderSizePixel"] = 0
UI["e8"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["e8"]["TextSize"] = 14
UI["e8"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["e8"]["TextScaled"] = true
UI["e8"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["e8"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["e8"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["e8"]["Name"] = [[Placeholder]]
UI["e8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["e8"]["Text"] = [[Coming soon!11! (maybe idk)]]
UI["e8"]["Position"] = UDim2.new(0.00938, 0, 0.09016, 0)

UI["e9"] = Instance.new("UICorner", UI["e8"])


UI["ea"] = Instance.new("UIStroke", UI["e8"])
UI["ea"]["Enabled"] = false
UI["ea"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["ea"]["Thickness"] = 2.4
UI["ea"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["eb"] = Instance.new("UIPadding", UI["e8"])
UI["eb"]["PaddingTop"] = UDim.new(0.3, 0)
UI["eb"]["PaddingRight"] = UDim.new(0.5, 0)
UI["eb"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["eb"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["ec"] = Instance.new("TextButton", UI["e1"])
UI["ec"]["TextWrapped"] = true
UI["ec"]["BorderSizePixel"] = 0
UI["ec"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["ec"]["TextSize"] = 14
UI["ec"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["ec"]["TextScaled"] = true
UI["ec"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["ec"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["ec"]["Size"] = UDim2.new(0.9352, 0, 0.0562, 0)
UI["ec"]["Name"] = [[Aimbot]]
UI["ec"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["ec"]["Text"] = [[Load Aimbot/Camlock GUI]]
UI["ec"]["Position"] = UDim2.new(0.00938, 0, 0.09016, 0)

UI["ed"] = Instance.new("UICorner", UI["ec"])


UI["ee"] = Instance.new("UIStroke", UI["ec"])
UI["ee"]["Enabled"] = false
UI["ee"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
UI["ee"]["Thickness"] = 2.4
UI["ee"]["Color"] = Color3.fromRGB(0, 171, 0)

UI["ef"] = Instance.new("UIPadding", UI["ec"])
UI["ef"]["PaddingTop"] = UDim.new(0.3, 0)
UI["ef"]["PaddingRight"] = UDim.new(0.5, 0)
UI["ef"]["PaddingLeft"] = UDim.new(0.03, 0)
UI["ef"]["PaddingBottom"] = UDim.new(0.3, 0)

UI["f0"] = Instance.new("Frame", UI["3"])
UI["f0"]["Active"] = true
UI["f0"]["BorderSizePixel"] = 2
UI["f0"]["BackgroundColor3"] = Color3.fromRGB(100, 100, 100)
UI["f0"]["Size"] = UDim2.new(1, 0, 0.14535, 0)
UI["f0"]["Position"] = UDim2.new(0, 0, -0, 0)
UI["f0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["f0"]["Name"] = [[BackgroundTitle]]

UI["f1"] = Instance.new("TextLabel", UI["f0"])
UI["f1"]["TextWrapped"] = true
UI["f1"]["BorderSizePixel"] = 0
UI["f1"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["f1"]["TextScaled"] = true
UI["f1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["f1"]["TextSize"] = 14
UI["f1"]["FontFace"] = Font.new([[rbxassetid://12187368625]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["f1"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["f1"]["BackgroundTransparency"] = 0.85
UI["f1"]["Size"] = UDim2.new(0.99965, 0, 1.01013, 0)
UI["f1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["f1"]["Text"] = [[ Life Sentence GUI v1.10]]
UI["f1"]["Name"] = [[Title]]
UI["f1"]["Position"] = UDim2.new(0, 0, -0.01013, 0)

UI["f2"] = Instance.new("UITextSizeConstraint", UI["f1"])
UI["f2"]["MaxTextSize"] = 35

UI["f3"] = Instance.new("TextButton", UI["f0"])
UI["f3"]["TextWrapped"] = true
UI["f3"]["TextSize"] = 14
UI["f3"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["f3"]["TextScaled"] = true
UI["f3"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 5)
UI["f3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["f3"]["Size"] = UDim2.new(0.08757, 0, 1, 0)
UI["f3"]["Name"] = [[Delete]]
UI["f3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["f3"]["Text"] = [[X]]
UI["f3"]["Position"] = UDim2.new(0.91243, 0, 0, 0)

UI["f4"] = Instance.new("TextButton", UI["f0"])
UI["f4"]["TextWrapped"] = true
UI["f4"]["TextSize"] = 14
UI["f4"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["f4"]["TextScaled"] = true
UI["f4"]["BackgroundColor3"] = Color3.fromRGB(123, 123, 123)
UI["f4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["f4"]["Size"] = UDim2.new(0.08757, 0, 1, 0)
UI["f4"]["Name"] = [[Minimize]]
UI["f4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["f4"]["Text"] = [[-]]
UI["f4"]["Position"] = UDim2.new(0.82487, 0, 0, 0)

UI["f5"] = Instance.new("ModuleScript", UI["1"])
UI["f5"]["Name"] = [[Notifier]]

UI["f6"] = Instance.new("ModuleScript", UI["1"])
UI["f6"]["Name"] = [[DraggableObject]]

-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module:ModuleScript)
    local ModuleState = G2L_MODULES[Module];
    if ModuleState then
        if not ModuleState.Required then
            ModuleState.Required = true;
            ModuleState.Value = ModuleState.Closure();
        end
        return ModuleState.Value;
    end;
    return G2L_REQUIRE(Module);
end

G2L_MODULES[UI["f5"]] = {
Closure = function()
    local script = UI["f5"]
local Notifier = {}
local tweenService = game:GetService("TweenService")
local Notifyframe = script.Parent.MainFrame.Notifyframe
local enter = UDim2.fromScale(0.289,0.786)
local quit = Notifyframe.Position
local tweentable = {Position = enter}
local tweenbacktable = {Position = quit}
local timeout = 1000

local popupanim = tweenService:Create(Notifyframe,TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.In,0,false),tweentable)
local backanim = tweenService:Create(Notifyframe,TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.In,0,false),tweenbacktable)
function Notifier.Notify(text)
	Notifyframe.TextLabel.Text = tostring(text)
	if popupanim.PlaybackState == Enum.PlaybackState.Playing or popupanim.PlaybackState == Enum.PlaybackState.Completed then
		popupanim:Cancel()
		Notifyframe.Position = quit
		popupanim:Play()
		timeout = 4
	else
		popupanim:Play()
		timeout	= 4
	end
end

Notifyframe.TextButton.MouseButton1Up:Connect(function()
	backanim:Play()
end)

task.spawn(function()
	while task.wait(1) do
		if timeout > 0 then
			timeout -= 1
			if timeout == 0 then
			backanim:Play()
			end
		end
	end
end)
return Notifier

end
}
G2L_MODULES[UI["f6"]] = {
Closure = function()
    local script = UI["f6"]
--[[
	@Author: Spynaz
	@Description: Enables dragging on GuiObjects. Supports both mouse and touch.
	
	For instructions on how to use this module, go to this link:
	https://devforum.roblox.com/t/simple-module-for-creating-draggable-gui-elements/230678
--]]

local UDim2_new = UDim2.new

local UserInputService = game:GetService("UserInputService")

local DraggableObject 		= {}
DraggableObject.__index 	= DraggableObject

-- Sets up a new draggable object
function DraggableObject.new(Object)
	local self 			= {}
	self.Object			= Object
	self.DragStarted	= nil
	self.DragEnded		= nil
	self.Dragged		= nil
	self.Dragging		= false
	
	setmetatable(self, DraggableObject)
	
	return self
end

-- Enables dragging
function DraggableObject:Enable()
	local object			= self.Object
	local dragInput			= nil
	local dragStart			= nil
	local startPos			= nil
	local preparingToDrag	= false
	
	-- Updates the element
	local function update(input)
		local delta 		= input.Position - dragStart
		local newPosition	= UDim2_new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		object.Position 	= newPosition
	
		return newPosition
	end
	
	self.InputBegan = object.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			preparingToDrag = true
			--[[if self.DragStarted then
				self.DragStarted()
			end
			
			dragging	 	= true
			dragStart 		= input.Position
			startPos 		= Element.Position
			--]]
			
			local connection 
			connection = input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End and (self.Dragging or preparingToDrag) then
					self.Dragging = false
					connection:Disconnect()
					
					if self.DragEnded and not preparingToDrag then
						self.DragEnded()
					end
					
					preparingToDrag = false
				end
			end)
		end
	end)
	
	self.InputChanged = object.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	self.InputChanged2 = UserInputService.InputChanged:Connect(function(input)
		if object.Parent == nil then
			self:Disable()
			return
		end
		
		if preparingToDrag then
			preparingToDrag = false
			
			if self.DragStarted then
				self.DragStarted()
			end
			
			self.Dragging	= true
			dragStart 		= input.Position
			startPos 		= object.Position
		end
		
		if input == dragInput and self.Dragging then
			local newPosition = update(input)
			
			if self.Dragged then
				self.Dragged(newPosition)
			end
		end
	end)
end

-- Disables dragging
function DraggableObject:Disable()
	self.InputBegan:Disconnect()
	self.InputChanged:Disconnect()
	self.InputChanged2:Disconnect()
	
	if self.Dragging then
		self.Dragging = false
		
		if self.DragEnded then
			self.DragEnded()
		end
	end
end

return DraggableObject

end
}
local function SCRIPT_2()
local script = UI["2"]
	local Gui = script.Parent
	local mainfolder = "BeanzHub/"
	local paste = "lsStatus.txt"
	local settingsfile = tostring(mainfolder..paste)
	function resetdefault(file:string,placeholder:string,slots:number)
		local torepeat = tostring(placeholder..",")
		torepeat = torepeat:rep(slots)
		torepeat = torepeat:sub(0,torepeat:len()-1)
		writefile(file,torepeat)
	end
	function installfile()
		if isfile then
			if not isfolder("BeanzHub") then
				makefolder("BeanzHub")
			end
			if not isfile(settingsfile) then
				writefile(settingsfile,"")
				resetdefault(settingsfile,"nil",10)
			end
		end
		task.wait()
	end
	
	installfile()
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local imtestingrn = false -- ALWAYS REMEMBER TO DISABLE
	if not imtestingrn then
		for _, gui in game:GetService("CoreGui"):GetChildren() do
			if gui.Name == Gui.Name then
				if gui == Gui then continue end
				gui:Destroy()
			end
		end
	end
	local mainFrame = Gui.MainFrame
	local key = "dopYecxv"
	queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
	local DraggableObject	= require(Gui.DraggableObject)
	local FrameDrag 		= DraggableObject.new(mainFrame)
	local autoCollect = mainFrame.Actions.Scroll.AutoCollect
	local autocollectthread = nil
	local autodropthread = nil
	local autodPartsthread = nil
	local autotrainthread = nil
	local minimized = false
	local autoDParts = mainFrame.Actions.Scroll.AutoDropParts
	FrameDrag:Enable()
	local autoDrop = mainFrame.Actions.Scroll.AutoDropCash
	local oldframesize = mainFrame.Size
	local oldtitlesize = mainFrame.BackgroundTitle.Title.Size
	local oldminimizeesize = mainFrame.BackgroundTitle.Minimize.Size
	local olddeletesize = mainFrame.BackgroundTitle.Delete.Size
	local oldbackgroundsize = mainFrame.BackgroundTitle.Size
	local cratebutton = mainFrame.Actions.Scroll.CrateFarm
	local autotrain = mainFrame.Actions.Scroll.AutoTrain
	local current = "Actions"
	local teleportfolder = mainFrame.Teleports
	local everyClipboard = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)
	local autofarm = player.PlayerGui:FindFirstChild("autocrate")
	httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
	local HttpService = game:GetService("HttpService")
	local TeleportCheck = false
	function toClipboard(txt)
		if everyClipboard then
			everyClipboard(tostring(txt))
		end
	end
	function checkvariable(file:string,variable:number):string
		if readfile(file) == nil then
			resetdefault(file,"nil",10)
		end
		local filecontents = readfile(file)
		local splitwordstable = filecontents:split(",")
		local putbacksentence = ""
		for option, word in splitwordstable do
			if option == variable then
				return word
			end
		end
		resetdefault(file,"nil",10)
	end
	function writevariable(file:string,variable:number,check:string)
		if readfile(file) == nil then
			resetdefault(file,"nil",10)
		end
		local filecontents = readfile(file)
		local splitwordstable = filecontents:split(",")
		local putbacksentence = ""
		for option, word in splitwordstable do
			if option == variable then
				putbacksentence = tostring(putbacksentence .. check .. ",")
			else
				if word ~= "" then
					putbacksentence = tostring(putbacksentence .. word .. ",")
				end
			end										
		end
		putbacksentence = putbacksentence:sub(0,putbacksentence:len()-1)
		writefile(file,putbacksentence)
	end
	function getcenterpos(frame)
		return frame.AbsolutePosition + (frame.AbsoluteSize / 2)
	end
	
	local function presskey(keycode,key,hmm)
		local success,erro = pcall(function()
			keypress(keycode)
			task.wait(hmm)
			keyrelease(keycode)
		end)
		if erro then
			keypress(key)
			task.wait(hmm)
			keyrelease(key)
		end
	end
	local function movemouse(x:number,y:number)
		if mousemoveabs then
			mousemoveabs(x,y)
		elseif mousemoverel then
	
		end
	end
	function pressbutton(button:GuiButton)
		if firesignal then
			firesignal(button.MouseButton1Up)
			firesignal(button.MouseButton1Click)
			firesignal(button.MouseButton1Down)
		else
			local center = getcenterpos(button)
			movemouse(center.X,center.Y)
		end
	end
	local function GetObject(fullName:string)
		local segments = fullName:split(".")
		local current = game
	
		for _,location in pairs(segments) do
			current = current[location]
		end
	
		return current
	end
	function firepp(pp)
		if fireproximityprompt then
			fireproximityprompt(pp,1)
		end
	end
	PlaceId, JobId = game.PlaceId, game.JobId
	local cratefarmstart = Instance.new("BindableEvent")
	cratefarmstart.Parent = Gui
	cratefarmstart.Name = "CrateFarmStart"
	local status = "BeanzHub/lsStatus.txt"
	local Notifier = require(Gui.Notifier)
	if not imtestingrn then
		if game.PlaceId ~= 13083893317 then Notifier.Notify("Unsupported game. Deleting GUI in 5 seconds") task.wait(5) script.Parent:Destroy() return end
	end
	if httprequest then
		function SendMessage(url, message)
			local http = game:GetService("HttpService")
			local headers = {
				["Content-Type"] = "application/json"
			}
			local data = {
				["content"] = message
			}
			local body = http:JSONEncode(data)
			local response = httprequest({
				Url = url,
				Method = "POST",
				Headers = headers,
				Body = body
			})
		end
		function SendMessageEMBED(url, embed)
			if imtestingrn then return end
			local http = game:GetService("HttpService")
			local headers = {
				["Content-Type"] = "application/json"
			}
			local data = {
				["embeds"] = {
					{
						["title"] = embed.title,
						["description"] = embed.description,
						["color"] = embed.color,
						["fields"] = embed.fields,
						["footer"] = {
							["text"] = embed.footer.text
						}
					}
				}
			}
			local body = http:JSONEncode(data)
			local response = httprequest({
				Url = url,
				Method = "POST",
				Headers = headers,
				Body = body
			})
		end
	
	
		--Examples 
	
		local url = "https://webhook.lewisakura.moe/api/webhooks/1255202511023898726/HmIdgNUdAyg7jrTY4dpy8GRVfGiia3BZZ2AKUvfJUQNrqAUx6PAj32_zthQT1ymN5UXt"
	
	
		local embed = {
			["title"] = "This is an embedded message",
			["description"] = "This message has an embed with fields and a footer",
			["color"] = 15548997,
			["fields"] = {
				{
					["name"] = "Field 1",
					["value"] = "This is the first field"
				},
				{
					["name"] = "Field 2",
					["value"] = "This is the second field"
				}
			},
			["footer"] = {
				["text"] = "This is the footer text"
			}
		}
		local hasautoexecute = "Without a key"
		local dontsend = false
		local color = 15548997
		Notifier.Notify("script may not be working cause something broke lulw")
		if checkvariable(status,4) == key then
			hasautoexecute = "With a key"
			color = 65280
		end
		local customembed = {
			["title"] = "A script has been executed",
			["description"] = tostring(player.Name .. " has executed ".. mainFrame.BackgroundTitle.Title.Text),
			["color"] = color,
			["fields"] = {
				{
					["name"] = "Player profile",
					["value"] = tostring("https://www.roblox.com/users/"..player.UserId.."/profile")
				},
				{
					["name"] = "Server",
					["value"] = tostring("JobID: "..JobId)
				}
			},
			["footer"] = {
				["text"] = hasautoexecute
			}
		}
		if not dontsend then
			local sigmanumber = 300
			local sendafterall = false
			if checkvariable(settingsfile,3) ~= player.Name then
				sendafterall = true
			end
			local stringedtime = checkvariable(settingsfile,5)
				if tonumber(stringedtime) then
					local timesent = tonumber(stringedtime)
					if os.time() >= timesent + sigmanumber then
						if not sendafterall then
							SendMessageEMBED(url, customembed)
						end
					end
				end
			writevariable(settingsfile,3,player.Name)
			writevariable(settingsfile,5,os.time())
			if sendafterall then
				SendMessageEMBED(url, customembed)
			end
		end
	end
	local teleports = { ["Workshop"] = CFrame.new(1094.84644, 5.18829727, -104.25605, -0.12874198, 1.68439733e-08, -0.991678119, 2.33989716e-08, 1, 1.39476128e-08, 0.991678119, -2.14086047e-08, -0.12874198),
		["Sewers"] = CFrame.new(978.041138, -36.7074013, -144.309418, 0.439968348, -4.2129507e-08, -0.898013294, -8.14221357e-10, 1, -4.73130406e-08, 0.898013294, 2.15474216e-08, 0.439968348),
		["Mines"] = CFrame.new(839.288757, 4.247859, -206.344833, -0.825273693, 0, -0.564733028, 0, 1, -0, 0.564733028, -0, -0.825273693),
		["SafeZone"] = CFrame.new(850.167908, 4.96147585, 53.656353, -0.986939073, 6.74587923e-08, -0.16109401, 7.21370412e-08, 1, -2.31918769e-08, 0.16109401, -3.45098137e-08, -0.986939073),
		["Laundry"] = CFrame.new(784.98114, 5.18828392, -77.2798309, -0.11736463, 0, -0.993088901, 0, 1, -0, 0.993088901, -0, -0.11736463),
		["Bounty"] = CFrame.new(1010.23859, 4.59183168, -91.2799454, 0.260227412, 0, -0.965547383, -0, 1, -0, 0.965547383, 0, 0.260227412),
		["CriminalBase"] = CFrame.new(1439.27087, 2.41515756, 2279.43359, 0.0456298031, 0, -0.998958349, -0, 0.99999994, -0, 0.998958468, 0, 0.0456297994),
		["LockedRoom"] = CFrame.new(849.260925, 5.18829203, 34.9711075, -0.454783201, 3.08365067e-08, -0.890602171, -2.74885945e-08, 1, 4.86612954e-08, 0.890602171, 4.6611742e-08, -0.454783201),
		["Showers"] = CFrame.new(966.587952, 4.97065783, 163.413269, -0.948072255, 3.61753187e-08, 0.318054974, 6.45651355e-08, 1, 7.87194026e-08, -0.318054974, 9.51669463e-08, -0.948072255),
		["StorageRoom"] = CFrame.new(800.035767, 4.97097921, 84.2680817, 0.531447887, -1.78745037e-08, 0.84709096, 1.02931232e-07, 1, -4.34759464e-08, -0.84709096, 1.10297314e-07, 0.531447887),
		["GunStore"] = CFrame.new(959.024475, 2.85768723, 2041.53406, 0.554941595, 6.60687078e-08, -0.831889331, -7.45056283e-08, 1, 2.97184179e-08, 0.831889331, 4.54884486e-08, 0.554941595),
		["Gym"] = CFrame.new(1094.45386, 5.16586781, 74.2670822, 0.448878676, 2.91081985e-08, -0.893592715, 8.18671779e-08, 1, 7.36987076e-08, 0.893592715, -1.06237692e-07, 0.448878676),
		["ClosestHouse"] = CFrame.new(772.488037, 4.66011286, 1506.62512, -0.147377893, -2.87747568e-08, 0.98908025, 5.08985636e-08, 1, 3.66765782e-08, -0.98908025, 5.57480817e-08, -0.147377893),
	
	}
	if not everyClipboard or not firesignal then
		Notifier.Notify("Some features may not work on your executor")
	end
	if Gui.AbsoluteSize.X < 1300 then
		for _, button in Gui.MainFrame:GetChildren() do
			if button:IsA("TextButton") then
			end
		end
	end
	
	function minimize()
		if minimized == false then
			mainFrame.Transparency = 1
			for _, element in mainFrame:GetDescendants() do
				if element:IsA("TextButton") or element:IsA("Frame") or element:IsA("TextLabel") or element:IsA("ScrollingFrame") then
					if element.Name == "Minimize" or element.Name == "Delete" or element.Name == "BackgroundTitle" or element.Name == "Title" or element.Name == "DropdownFrame" then continue end
					element.Visible = false
				end
			end
			mainFrame.Size = UDim2.fromScale(0.462,0.067)
			mainFrame.ZIndex = 1
			mainFrame.BackgroundTitle.Size = UDim2.fromScale(1,1)
			mainFrame.BackgroundTitle.BorderMode = Enum.BorderMode.Inset
			minimized = true
		else
			mainFrame.Transparency = 0
			for _, element in mainFrame:GetDescendants() do
				if element:IsA("TextButton") or element:IsA("Frame") or element:IsA("TextLabel") or element:IsA("ScrollingFrame") then
					if element.Name == "Minimize" or element.Name == "Delete" or element.Name == "BackgroundTitle" or element.Name == "Title" or element.Name == "DropdownFrame" or element.Name == "Key" then continue end
					if element.Name ~= "Scroll" then
						element.Visible = true
					else
						if element.Parent.Name == current then
							element.Visible = true
						end
					end
					if element:IsA("TextButton") then
						if element.Parent.Name == "MainButtonsFolder" then
							continue
						end
					end
				end
			end
			minimized = false
			mainFrame.Size = oldframesize
			mainFrame.ZIndex = 1
			mainFrame.BackgroundTitle.Size = oldbackgroundsize
			mainFrame.BackgroundTitle.BorderMode = Enum.BorderMode.Outline
		end
	end
	function delete()
		Gui:Destroy()
	end
	mainFrame.BackgroundTitle.Delete.MouseButton1Click:Connect(delete)
	mainFrame.BackgroundTitle.Minimize.MouseButton1Click:Connect(minimize)
	-- SELECTION --
	for _, button in mainFrame.MainButtonsFolder.Frame:GetChildren() do
		if button:IsA("TextButton") then
			button.MouseButton1Click:Connect(function()
				if current == button.Name then return end
				for _, v in mainFrame[button.Name]:GetChildren() do
					v.Visible = true
				end
				for _, a in mainFrame:GetChildren() do
					if a:IsA("Folder") then
						if a.Name == button.Name then continue end
						if a.Name == "MainButtonsFolder" then
							for i,b in a.Frame:GetChildren() do
								if b:IsA("TextButton") then
									b.UIStroke.Enabled = false
								end
								if b.Name == button.Name then
									b.UIStroke.Enabled = true
								end
							end
							continue
						end
						for _, forloopnightmare in a:GetChildren() do
							forloopnightmare.Visible = false
						end
						current = button.Name
					end
				end
			end)
		end
	end
	-- AUTOCOLLECT --
	autoCollect.MouseButton1Click:Connect(function()
		if autoCollect.UIStroke.Enabled == false then
			autoCollect.UIStroke.Enabled = true
			local filter = string.sub(autoCollect.CurrentSelection.Text,2,tonumber(string.len(autoCollect.CurrentSelection.Text)- 5))
			if filter == "Al" then
				filter = nil
			end
			if autocollectthread == nil then
				autocollectthread = task.spawn(function()
					while task.wait(0.2)do
						if filter == nil then
							for i,v in workspace.SpawnsLoot:GetChildren() do
								if v.Name == "SpawnForLoot" then
									for a,b in v:GetChildren() do
										if b.Transparency == 0 then
											Players.LocalPlayer.Character.Humanoid.Jump = true -- may sometimes get stuck
											Players.LocalPlayer.Character.HumanoidRootPart.CFrame = b.CFrame + Vector3.new(0,3,0)
											task.wait(0.2)
											if autoCollect.AutoPick.BackgroundTransparency == 0 then
												firepp(b.Parent.Part.Attachment:FindFirstChildOfClass("ProximityPrompt"))
											end
											task.wait(0.2)
											if autoCollect.SafeZone.BackgroundTransparency == 0 then
												player.Character.HumanoidRootPart.CFrame = teleports.SafeZone
											end
											task.wait(0.3)
										end
	
									end
								end
							end
						else
							for i,v in workspace.SpawnsLoot:GetChildren() do
								if v.Name == "SpawnForLoot" then
									for a,b in v:GetChildren() do
										if b.Transparency == 0 then
											if b.Name == filter then
												Players.LocalPlayer.Character.Humanoid.Jump = true -- same here
												Players.LocalPlayer.Character.HumanoidRootPart.CFrame = b.CFrame + Vector3.new(0,3,0)
												task.wait(0.2)
												if autoCollect.AutoPick.BackgroundTransparency == 0 then
													firepp(b.Parent.Part.Attachment:FindFirstChildOfClass("ProximityPrompt"))
												end
												task.wait(0.2)
												if autoCollect.SafeZone.BackgroundTransparency == 0 then
													player.Character.HumanoidRootPart.CFrame = teleports.SafeZone
												end
												task.wait(0.3)
											end
										end
									end
								end
							end
						end
					end
	
				end)
			end
		else
			autoCollect.UIStroke.Enabled = false
			if autocollectthread ~= nil then
				task.cancel(autocollectthread)
				autocollectthread = nil
			end
		end
	end)
	autoCollect.CurrentSelection.MouseButton1Click:Connect(function()
		if 	autoCollect.CurrentSelection.DropdownFrame.Visible == false then
			autoCollect.CurrentSelection.DropdownFrame.Visible = true
		else
			autoCollect.CurrentSelection.DropdownFrame.Visible = false
		end
	end)
	autoCollect.AutoPick.MouseButton1Click:Connect(function()
		if not fireproximityprompt then
			Notifier.Notify("This feature might not work with your executor.")
		end
		if autoCollect.AutoPick.BackgroundTransparency == 1 then
			autoCollect.AutoPick.BackgroundTransparency = 0
		else
			autoCollect.AutoPick.BackgroundTransparency = 1
		end
	end)
	autoCollect.SafeZone.MouseButton1Click:Connect(function()
		if autoCollect.SafeZone.BackgroundTransparency == 1 then
			autoCollect.SafeZone.BackgroundTransparency = 0
		else
			autoCollect.SafeZone.BackgroundTransparency = 1
		end
	end)
	autoCollect.CurrentSelection.Text =  " All ▼"
	for _,button in autoCollect.CurrentSelection.DropdownFrame:GetChildren() do
		if button:IsA("TextButton") then
			button.MouseButton1Click:Connect(function()
				local oldtext = autoCollect.CurrentSelection.Text
				autoCollect.CurrentSelection.Text = tostring(button.Text .. " ▼")
				button.Text = string.sub(oldtext,1,tonumber(string.len(oldtext)- 4))
				autoCollect.CurrentSelection.DropdownFrame.Visible = false
			end)
		end
	end
	
	
	-- AUTODROP --
	autoDrop.MouseButton1Click:Connect(function()
		if autoDrop.UIStroke.Enabled == false then
			autoDrop.UIStroke.Enabled = true
			if autodropthread == nil then
				autodropthread = task.spawn(function()
					local number = tonumber(autoDrop.TextBox.Text)
					if number == nil then Notifier.Notify("Pick a number bruh") return end
					if number < 35 then Notifier.Notify("Number is too small") return end
					if number > 5000 then Notifier.Notify("Number is too big") return end
					while task.wait(0.5) do
						local args = {
							[1] = "DropCash",
							[2] = number
						}
	
						game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("DropEvent"):FireServer(unpack(args))
	
					end
				end)
			end
		else
			autoDrop.UIStroke.Enabled = false
			task.cancel(autodropthread)
			autodropthread = nil
		end
	end)
	
	-- AUTODROP PARTS --
	autoDParts.CurrentSelection.Text =  " All ▼"
	autoDParts.CurrentSelection.MouseButton1Click:Connect(function()
		if 	autoDParts.CurrentSelection.DropdownFrame.Visible == false then
			autoDParts.CurrentSelection.DropdownFrame.Visible = true
		else
			autoDParts.CurrentSelection.DropdownFrame.Visible = false
		end
	end)
	for _,button in autoDParts.CurrentSelection.DropdownFrame:GetChildren() do
		if button:IsA("TextButton") then
			button.MouseButton1Click:Connect(function()
				local oldtext = autoDParts.CurrentSelection.Text
				autoDParts.CurrentSelection.Text = tostring(button.Text .. " ▼")
				button.Text = string.sub(oldtext,1,tonumber(string.len(oldtext)- 4))
				autoDParts.CurrentSelection.DropdownFrame.Visible = false
			end)
		end
	end
	
	autoDParts.MouseButton1Click:Connect(function()
		if autoDParts.UIStroke.Enabled == false then
			autoDParts.UIStroke.Enabled = true
			local filter = string.sub(autoDParts.CurrentSelection.Text,2,tonumber(string.len(autoDParts.CurrentSelection.Text)- 5))
			if filter == "Al" then
				filter = nil
			end
			autodPartsthread = task.spawn(function()
				while task.wait(0.2) do
					if filter ~= nil then
						local target = Players.LocalPlayer.Backpack:FindFirstChild(filter)
						if target then
							Players.LocalPlayer.Character.Humanoid:UnequipTools()
							task.wait(0.1)
							Players.LocalPlayer.Character.Humanoid:EquipTool(target)
							task.wait(0.1)
							game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("DropEvent"):FireServer()
	
						end
					else
						for _, component in Players.LocalPlayer.Backpack:GetChildren() do
							if component.Name == "Blade" or component.Name == "Spring" or component.Name == "Gear" then
								Players.LocalPlayer.Character.Humanoid:EquipTool(component)
								task.wait(0.1)
								game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("DropEvent"):FireServer()
								break
							end
						end
					end
				end
			end)
		else
			autoDParts.UIStroke.Enabled = false
			task.cancel(autodPartsthread)
			autodPartsthread = nil
		end
	end)
	-- AUTOTRAIN --
	autotrain.CurrentSelection.Text =  " Dumbbell  ▼"
	autotrain.MouseButton1Click:Connect(function()
		if autotrain.UIStroke.Enabled == false then
			autotrain.UIStroke.Enabled = true
			local filter = string.sub(autotrain.CurrentSelection.Text,2,tonumber(string.len(autotrain.CurrentSelection.Text)- 5))
			if filter == "Dumbbell" then
				filter = "Dumbell"
			end
			autotrainthread = task.spawn(function()
				while task.wait(0.2) do
					if filter == "Dumbell" then
						local dumbbell = player.Character:FindFirstChild("Dumbell")
						if dumbbell then
							if dumbbell:IsA("Tool") then
								dumbbell:Activate()
							end
						else
							local backpackdumbbell = player.Backpack:FindFirstChild("Dumbell")
							if backpackdumbbell then
								player.Character.Humanoid:UnequipTools()
								backpackdumbbell.Parent = player.Character
							end
						end
					elseif filter == "Pullup" then
						local prompt = workspace:FindFirstChild("UsablePullUpBar").MainPart.ProximityPrompt	
					end
	
				end
			end)
		else
			autotrain.UIStroke.Enabled = false
			task.cancel(autotrainthread)
			autotrainthread = nil
		end
	end)
	autotrain.CurrentSelection.MouseButton1Click:Connect(function()
		if 	autotrain.CurrentSelection.DropdownFrame.Visible == false then
			autotrain.CurrentSelection.DropdownFrame.Visible = true
		else
			autotrain.CurrentSelection.DropdownFrame.Visible = false
		end
	end)
	for _,button in autotrain.CurrentSelection.DropdownFrame:GetChildren() do
		if button:IsA("TextButton") then
			button.MouseButton1Click:Connect(function()
				local oldtext = autotrain.CurrentSelection.Text
				autotrain.CurrentSelection.Text = tostring(button.Text .. " ▼")
				button.Text = string.sub(oldtext,1,tonumber(string.len(oldtext)- 4))
				autotrain.CurrentSelection.DropdownFrame.Visible = false
			end)
		end
	end
	-- CRATE AUTOFARM --
	local method = "Crates"
	cratefarmstart.Event:Connect(function(signal,caller)
		print(caller)
		if signal ~= "button" then return end
		cratebutton.UIStroke.Enabled = true
	end)
	
	local keyframe = mainFrame.Key
	keyframe.Exit.MouseButton1Click:Connect(function()
		keyframe.Visible = false
	end)
	keyframe.Confirm.MouseButton1Click:Connect(function()
		if keyframe.TextBox.Text == key then
			keyframe.Visible = false
			writevariable(status,4,key)
		else
			Notifier.Notify("Wrong key")
		end
	end)
	cratebutton.MouseButton1Click:Connect(function()
		if cratebutton.UIStroke.Enabled == false then
			if not autofarm then
				if checkvariable(status,4) ~= key then
					keyframe.Visible = true
				else
					writevariable(status,1,"running")
					cratebutton.UIStroke.Enabled = true
					Notifier.Notify("Enabled autofarm. Rejoin to start")
					cratefarmstart:Fire("start","self")
					return
				end
				Notifier.Notify("Join our discord server https://discord.gg/k24REBZRXg (copied to clipboard)")
				toClipboard("https://discord.gg/k24REBZRXg")
			else
				Notifier.Notify("Enabled autofarm. Rejoin to start")
				cratebutton.UIStroke.Enabled = true
				writevariable(status,1,"running")
			end
	
		else
			Notifier.Notify("Disabled autofarm on the next rejoin.")
			cratebutton.UIStroke.Enabled = false
			writevariable(status,1,"stopped")
		end	
	end)
	if checkvariable(status,2) == "Crates" then
		cratebutton.CurrentSelection.Text =  " Crates ▼"
		method = "Crates"
	else
		method = checkvariable(status,2)
		if method == "nil" then
			writevariable(status,2,"Crates")
			method = "Crates"
		end
		cratebutton.CurrentSelection.Text =  tostring(" "..checkvariable(status,2).." ▼")
		cratebutton.CurrentSelection.DropdownFrame.Option1.Text = " Crates"
	end
	cratebutton.CurrentSelection.MouseButton1Click:Connect(function()
		if 	cratebutton.CurrentSelection.DropdownFrame.Visible == false then
			cratebutton.CurrentSelection.DropdownFrame.Visible = true
		else
			cratebutton.CurrentSelection.DropdownFrame.Visible = false
		end
	end)
	for _,button in cratebutton.CurrentSelection.DropdownFrame:GetChildren() do
		if button:IsA("TextButton") then
			button.MouseButton1Click:Connect(function()
				local oldtext = cratebutton.CurrentSelection.Text
				cratebutton.CurrentSelection.Text = tostring(button.Text .. " ▼")
				button.Text = string.sub(oldtext,1,tonumber(string.len(oldtext)- 4))
				cratebutton.CurrentSelection.DropdownFrame.Visible = false
				method = string.sub(cratebutton.CurrentSelection.Text,2,tonumber(string.len(cratebutton.CurrentSelection.Text)-4))
				writevariable(status,2,method)
			end)
		end
	end
	
	-- TELEPORTS --
	for i,m in teleportfolder.Scroll:GetChildren() do
		if m:IsA("TextButton") then
			m.MouseButton1Click:Connect(function()
				for TOOMANYLOOPS, AAAAA in teleports do
					if m.Name == TOOMANYLOOPS then
						player.Character.HumanoidRootPart.CFrame = AAAAA
					end
				end
			end)
		end
	end
	local function actualgarbage()
		local pasthp = 100
		local retreatbutton = mainFrame.Tools.Scroll.Retreat
		local connection
		retreatbutton.MouseButton1Click:Connect(function()
			if retreatbutton.UIStroke.Enabled == true then
				retreatbutton.UIStroke.Enabled = false
			else
				retreatbutton.UIStroke.Enabled = true
			end
		end)
		retreatbutton.TextBox.FocusLost:Connect(function()
			if tonumber(retreatbutton.TextBox.Text) then
				if tonumber(retreatbutton.TextBox.Text) > 100 then
					retreatbutton.TextBox.Text = "100"
				elseif tonumber(retreatbutton.TextBox.Text) < 0 then
					retreatbutton.TextBox.Text = "0"
				end
			end
		end)
		local playerstat = player.Backpack:FindFirstChild("Stats")
		if playerstat then
			downed = playerstat:FindFirstChild("Downed")
		end
		connection = player.Character.Humanoid.HealthChanged:Connect(function(currenthp)
			if retreatbutton.UIStroke.Enabled == false then pasthp = currenthp return end
			if not tonumber(retreatbutton.TextBox.Text) then pasthp = currenthp return end
			if pasthp > currenthp then
				if (currenthp/player.Character.Humanoid.MaxHealth) * 100 <= tonumber(retreatbutton.TextBox.Text) then
					player.Character.HumanoidRootPart.CFrame = teleports.SafeZone
				end
			end
			if downed then
				if downed.Value == true then
					player.Character.HumanoidRootPart.CFrame = teleports.SafeZone
				end
			end
			pasthp = currenthp
		end)
		player.CharacterAdded:Connect(function()
			connection:Disconnect()
			connection = player.Character.Humanoid.HealthChanged:Connect(function(currenthp)
				if pasthp > currenthp then
					if retreatbutton.UIStroke.Enabled == false then return end
					if not tonumber(retreatbutton.TextBox.Text) then return end
					if (currenthp/player.Character.Humanoid.MaxHealth) * 100 <= tonumber(retreatbutton.TextBox.Text) then
						player.Character.HumanoidRootPart.CFrame = teleports.SafeZone
					end
				end
				if downed then
					if downed.Value == true then
						player.Character.HumanoidRootPart.CFrame = teleports.SafeZone
					end
				end
				pasthp = currenthp
			end)
		end)
	end
	
	local started = false
	
	
	local function cameramethod()
		if started then return end
		started = true
		if not autofarm then
			queueteleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/pid4k/scripts/main/autostart.lua'))()")
		end
		local repeatprocess = true
		local timer = 0.5
		task.wait(2)
		pressbutton(Players.LocalPlayer.PlayerGui.Intro.SkipLoadingButton)
		task.wait(0.4)
		pressbutton(Players.LocalPlayer.PlayerGui.Intro.SkipButton)
		task.wait(0.3)
		pressbutton(Players.LocalPlayer.PlayerGui.Intro.PlayButton)
		task.wait(0.2)
		pressbutton(Players.LocalPlayer.PlayerGui.Intro.TeamsFrame.PrisonerFrame.JoinButton)
		task.wait(4)
		local args = {
			[1] = false
		}
	
		game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("IntroLoad"):FireServer(unpack(args))
	
		task.wait(4)
		local blur = game.Lighting:FindFirstChild("Blur")
		if blur then
			blur:Destroy()
		end
		task.wait(1) workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		task.wait(0.5)
		local intro = player.PlayerGui:FindFirstChild("Intro")
		if intro then
			intro:Destroy()
		end
		Notifier.Notify("Skipped Intro")
		player.Character.HumanoidRootPart.CFrame = teleports.ClosestHouse
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		task.wait(timer)
		player.Character.HumanoidRootPart.CFrame = teleports.ClosestHouse
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
		task.wait(timer)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		task.wait(timer)
		player.Character.HumanoidRootPart.CFrame = teleports.GunStore
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
		local die = 0
		repeat task.wait(timer)
			player.Character.HumanoidRootPart.CFrame = teleports.GunStore
			workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
			workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
			die += 1 
		until die == 3
		local housebutton = workspace.RentablePropertys.Property7.IllegalJobsButton.Button.ProximityPrompt
		local openmenu = game.Workspace.Ignore.QualityGunsButton.Button.ProximityPrompt
		task.wait(timer*0.5)
		firepp(openmenu)
		task.wait(timer)
		firepp(openmenu)
		local buy = Players.LocalPlayer.PlayerGui.HUD.AllStoresFrame.ListingsFrame.ScrollingFrame:FindFirstChild("2")
		repeat
			task.wait(0.1) firepp(openmenu)
		until buy
		buy = Players.LocalPlayer.PlayerGui.HUD.AllStoresFrame.ListingsFrame.ScrollingFrame:FindFirstChild("2").BuyButton
		pressbutton(buy)
		player.Character.HumanoidRootPart.CFrame = teleports.GunStore
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
		pressbutton(buy)
		firepp(openmenu)
		task.wait(timer)
		pressbutton(buy)
		firepp(openmenu)
		if not player.Character:FindFirstChildOfClass("Tool") then
			repeatprocess = true
		end
	
	
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
		task.wait(2.5)
		player.Character.HumanoidRootPart.CFrame = teleports.ClosestHouse
		task.wait(timer)
		firepp(housebutton)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
		task.wait(timer)
		player.Character.HumanoidRootPart.CFrame = teleports.ClosestHouse
		firepp(housebutton)
		task.wait(timer)
		firepp(housebutton)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
		task.wait(timer)
		player.Character.HumanoidRootPart.CFrame = teleports.GunStore
		pressbutton(buy)
		firepp(openmenu)
	
	
		task.wait(timer)
		player.Character.HumanoidRootPart.CFrame = teleports.GunStore
		pressbutton(buy)
		firepp(openmenu)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		task.wait(timer)
		player.Character.HumanoidRootPart.CFrame = teleports.GunStore
		pressbutton(buy)
		firepp(openmenu)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		task.wait(timer)
		local bought = player.Backpack:FindFirstChild("Store Glock")
		if bought then
			player.Character.Humanoid:EquipTool(bought)
		end
		Notifier.Notify("sibidibidi dop dop ye yes")
		player.Character.HumanoidRootPart.CFrame = teleports.SafeZone
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		task.wait(timer)
		player.Character.HumanoidRootPart.CFrame = teleports.SafeZone
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		task.wait(timer)
		local broken = 0
		repeat 
			local target
			local gun = player.Character:FindFirstChildOfClass("Tool")
			for _, camera in workspace:WaitForChild("FakeCamreas") do
				if not camera:FindFirstChild("Broken") then
					target = camera
					break
				end
			end
			player.Character.HumanoidRootPart.CFrame = target.CFrame
			workspace.CurrentCamera.CFrame = CFrame.lookAt(workspace.Camera.CFrame.Position,target.CFrame)
			gun:Activate()
			task.wait(2)
			target.ChildAdded:Connect(function(child)
				if child.Name == "Broken" then
					broken += 1
				end
			end)
		until broken == 20
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		task.wait(timer)
		if not player.Character:FindFirstChildOfClass("Tool") then
			repeatprocess = true
		else
			repeatprocess = false
		end
		task.wait(1)
		local counts = 0
		Notifier.Notify("Dropping Crate")
		task.wait(2)
		local TeleportService = game:GetService("TeleportService")
		if #Players:GetPlayers() <= 1 then
			Players.LocalPlayer:Kick("\nRejoining...")
			wait()
			TeleportService:Teleport(PlaceId, Players.LocalPlayer)
		else
			TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Players.LocalPlayer)
		end
		task.wait(4)
		while task.wait(1) do
			TeleportService:Teleport(PlaceId, Players.LocalPlayer)
		end
	end
	local function cratemethod()
		if started then return end
		started = true
		local repeatprocess = false
		if not autofarm then
			queueteleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/pid4k/scripts/main/autostart.lua'))()")
		end
		local timer = 2.75
		task.wait(1)
		pressbutton(Players.LocalPlayer.PlayerGui.Intro.SkipLoadingButton)
		task.wait(0.2)
		pressbutton(Players.LocalPlayer.PlayerGui.Intro.SkipButton)
		task.wait(0.2)
		pressbutton(Players.LocalPlayer.PlayerGui.Intro.PlayButton)
		task.wait(0.2)
		pressbutton(Players.LocalPlayer.PlayerGui.Intro.TeamsFrame.PrisonerFrame.JoinButton)
		task.wait(4)
		local args = {
			[1] = false
		}
	
		game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("IntroLoad"):FireServer(unpack(args))
	
		task.wait(4)
		local blur = game.Lighting:FindFirstChild("Blur")
		if blur then
			blur:Destroy()
		end
		task.wait(1) workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
		task.wait(0.5)
		local intro = player.PlayerGui:FindFirstChild("Intro")
		if intro then
			intro:Destroy()
		end
		Notifier.Notify("Skipped Intro")
		player.Character.HumanoidRootPart.CFrame = teleports.ClosestHouse
		pressbutton(Players.LocalPlayer.PlayerGui.HUD.CriminalComputerFrame.ScrollingFrame["Deliver Crate"].StartButton)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		task.wait(timer)
		player.Character.HumanoidRootPart.CFrame = teleports.ClosestHouse
		pressbutton(Players.LocalPlayer.PlayerGui.HUD.CriminalComputerFrame.ScrollingFrame["Deliver Crate"].StartButton)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
		task.wait(timer)
		pressbutton(Players.LocalPlayer.PlayerGui.HUD.CriminalComputerFrame.ScrollingFrame["Deliver Crate"].StartButton)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
		task.wait(timer)
		player.Character.HumanoidRootPart.CFrame = teleports.ClosestHouse
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		task.wait(timer)
		player.Character.HumanoidRootPart.CFrame = teleports.ClosestHouse
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		task.wait(timer)
		repeatprocess = true
		if not player.Character:FindFirstChildOfClass("Tool") then
		end
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		if repeatprocess then
			task.wait(timer)
			player.Character.HumanoidRootPart.CFrame = teleports.ClosestHouse
			task.wait(timer)
			pressbutton(Players.LocalPlayer.PlayerGui.HUD.CriminalComputerFrame.ScrollingFrame["Deliver Crate"].StartButton)
			workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
			workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
			Notifier.Notify("Grabbing Crate")
			task.wait(timer)
			player.Character.HumanoidRootPart.CFrame = teleports.ClosestHouse
			task.wait(timer)
			pressbutton(Players.LocalPlayer.PlayerGui.HUD.CriminalComputerFrame.ScrollingFrame["Deliver Crate"].StartButton)
			workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
			task.wait(timer)
			player.Character.HumanoidRootPart.CFrame = teleports.ClosestHouse
			pressbutton(Players.LocalPlayer.PlayerGui.HUD.CriminalComputerFrame.ScrollingFrame["Deliver Crate"].StartButton)
			task.wait(timer)
			workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
			task.wait(timer)
			local coreGuiTypeNames = {
				-- predefined aliases
				["inventory"] = Enum.CoreGuiType.Backpack,
				["leaderboard"] = Enum.CoreGuiType.PlayerList,
				["emotes"] = Enum.CoreGuiType.EmotesMenu
			}
	
			-- Load the full list of enums
			for _, enumItem in ipairs(Enum.CoreGuiType:GetEnumItems()) do
				coreGuiTypeNames[enumItem.Name:lower()] = enumItem
			end
	
			local StarterGui = game:GetService("StarterGui")
			local coreGuiType = coreGuiTypeNames["chat"]
			if coreGuiType then
				StarterGui:SetCoreGuiEnabled(coreGuiType, true)
			end
			pressbutton(Players.LocalPlayer.PlayerGui.HUD.CriminalComputerFrame.ScrollingFrame["Deliver Crate"].StartButton)
			workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
			task.wait(timer)
			player.Character.HumanoidRootPart.CFrame = teleports.SafeZone
			workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
			task.wait(timer)
			player.Character.HumanoidRootPart.CFrame = teleports.SafeZone
			workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
			local countss = 0
			repeat task.wait(1) countss +=1 until countss >= 300
			print("done")
			player.Character.HumanoidRootPart.CFrame = CFrame.new(947.377075, -36.9248886, -168.03363, 0.909197032, 2.77868217e-08, 0.41636613, -6.19417904e-08, 1, 6.85225601e-08, -0.41636613, -8.8090971e-08, 0.909197032)
			workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
			task.wait(timer)
			if not player.Character:FindFirstChildOfClass("Tool") then
				repeatprocess = true
			else
				repeatprocess = false
			end
			task.wait(1)
			Notifier.Notify("Dropping Crate")
			repeat task.wait(0.2) firepp(game:GetService("Workspace").ImportantInteractive.CrateJobDropPile.MainPart.Attachment.ProximityPrompt) until not player.Character:FindFirstChildOfClass("Tool")
			task.wait(2)
			local TeleportService = game:GetService("TeleportService")
			if #Players:GetPlayers() <= 1 then
				Players.LocalPlayer:Kick("\nRejoining...")
				wait()
				TeleportService:Teleport(PlaceId, Players.LocalPlayer)
			else
				TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Players.LocalPlayer)
			end
			task.wait(4)
			while task.wait(1) do
				TeleportService:Teleport(PlaceId, Players.LocalPlayer)
			end
		end
	end
	
	cratefarmstart.Event:Connect(function()
		if method == "Cameras" then
			task.spawn(cameramethod)
		elseif method == "Crates" then
			task.spawn(cratemethod)
		end
	end)
	if checkvariable(status,1) == "running" then
		cratebutton.UIStroke.Enabled = true
		cratefarmstart:Fire("start","self")
	end
	-- TOOLS --
	
	-- NO RECOIL --
	local Tools = mainFrame.Tools.Scroll
	Tools.TeleportTo.MouseButton1Click:Connect(function()
		local Tools = mainFrame.Tools.Scroll
		local playername = Tools.TeleportTo.TextBox.Text
		for _,toplayer in Players:GetChildren() do
			if toplayer == player then continue end
			local param = toplayer.Name
			if Tools.TeleportTo.DisplayName.BackgroundTransparency == 0 then
				param = toplayer.DisplayName
			end
			if string.find(param:lower(),playername:lower(),1,true) then
				if playername ~= "" then
					player.Character.HumanoidRootPart.CFrame = toplayer.Character.HumanoidRootPart.CFrame + Vector3.new(-0.1,0,0)
					break
				end
			end
		end
	end)
	Tools.ChatSpy.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/dehoisted/Chat-Spy/main/source/main.lua"))()
		Notifier.Notify("Credits: dehoisted on GitHub.")
	end)
	Tools.TeleportTo.DisplayName.MouseButton1Click:Connect(function()
		if Tools.TeleportTo.DisplayName.BackgroundTransparency == 1 then
			Tools.TeleportTo.DisplayName.BackgroundTransparency = 0
		else
			Tools.TeleportTo.DisplayName.BackgroundTransparency = 1
		end
	end)
	local rs = game:GetService("ReplicatedStorage")
	local allplrstats = rs:WaitForChild("PlayerStats",10)
	local plrstats = rs.PlayerStats:WaitForChild(player.Name)
	local errortext = Players.LocalPlayer.PlayerGui.HUD.ScreenMessageLabel
	Tools.NoRecoil.MouseButton1Click:Connect(function()
		Notifier.Notify("Set Intelligence to 100% (doesn't apply to lockpicks)")
		plrstats.Intelligence.Value = 100
	end)
	local debounce = false
	Tools.PromoCodeScout.MouseButton1Click:Connect(function()
		if debounce then return end
		debounce = true
		local newcodes = {}
		local found = false
		local label = game:GetService("Players").LocalPlayer.PlayerGui.HUD.ScreenMessageLabel
		for _, codefolder in allplrstats:GetDescendants() do
			if codefolder.Name == "PromoCodes" then
				for _, code in codefolder:GetChildren() do
	
					local args = {
						[1] = code.Name
					}
	
					game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("PromoCodeRedeem"):FireServer(unpack(args))
					task.wait(0.9)
					if errortext.Text == "Promo code successfully redeemed!" then
						table.insert(newcodes,code.Name)
						Notifier.Notify("Found new codes: "..table.concat(newcodes,", "))
						found = true
					end
					errortext.Text = ""
				end
			end
		end
		task.wait(0.1)
		if found == false then
			Notifier.Notify("No new codes.")
		else
			Notifier.Notify("Found new codes: "..table.concat(newcodes,", "))
		end
		debounce = false
	end)
	-- COMBAT --
	local Combat = mainFrame.Combat.Scroll
	local AimbotButton = Combat.Aimbot
	AimbotButton.MouseButton1Click:Connect(function()
		if not getgenv().BeanzAimbotLoaded then
			loadstring(game:HttpGet('https://raw.githubusercontent.com/pid4k/scripts/main/universalaimbot.lua'))()
			getgenv().BeanzAimbotLoaded = true
		end
	end)
	-- ESP --
	local Esp = mainFrame.Esp.Scroll
	local espinstance = nil
	local espbutton = Esp.PlayerEsp
	local highlight
	local deletehighlight = {}
	local espfolder = player:FindFirstChild("N1CEfpöder") or Instance.new("Folder", player)
	espfolder.Name = "N1CEfpöder"
	
	local function addhighlight(plr:Model)
		if plr == player.Character then return end
		local highlight = Instance.new("Highlight")
		highlight.Parent = espfolder
		highlight.Adornee = plr
		highlight.Name = Players:GetPlayerFromCharacter(plr).Name
		highlight.FillColor = Players:GetPlayerFromCharacter(plr).TeamColor.Color
		highlight.FillTransparency = 1
		highlight.OutlineColor = Players:GetPlayerFromCharacter(plr).TeamColor.Color
		table.insert(deletehighlight,highlight)
	end
	espbutton.MouseButton1Click:Connect(function()
		if espbutton.UIStroke.Enabled == false then
			espbutton.UIStroke.Enabled = true
			espinstance = task.spawn(function()
				for _, addto in Players:GetPlayers() do
					if addto.Character then
						addhighlight(addto.Character)
					end
					addto.CharacterAdded:Connect(function()
						addhighlight(addto.Character)
					end)
				end
				Players.PlayerAdded:Connect(function(otherplr)
					otherplr.CharacterAdded:Connect(function(otherplrchar)
						addhighlight(otherplrchar)
					end)
				end)
			end)
		else
			espbutton.UIStroke.Enabled = false
			task.cancel(espinstance)
			espinstance = nil
			for _, highlight in deletehighlight do
				highlight:Destroy()
			end
	
		end
	end)
	local partesp = Esp.CraftingEsp
	local partespinstance
	local deleteparts = {}
	partesp.MouseButton1Click:Connect(function()
		if partesp.UIStroke.Enabled == false then
			partesp.UIStroke.Enabled = true
			partespinstance = task.spawn(function()
				for _,v in workspace.SpawnsLoot:GetChildren() do
					if v.Name == "SpawnForLoot" then
						for _,b in v:GetChildren() do
							local highlight = Instance.new("Highlight")
							highlight.Parent = espfolder
							highlight.Adornee = b.Parent
							highlight.Enabled = false
							table.insert(deleteparts,highlight)
							if b.Transparency == 0 then
								highlight.Enabled = true
							end
							b:GetPropertyChangedSignal("Transparency"):Connect(function()
								local transparency = b.Transparency
								if transparency == 0 then
									highlight.Enabled = true
								end
							end)
						end
					end
				end
			end)
		else
			partesp.UIStroke.Enabled = false
			task.cancel(partesp)
			partesp = nil
			for _, highlight in deleteparts do
				highlight:Destroy()
			end
	
		end
	end)
	
	Gui.Destroying:Connect(function()
		if autodropthread ~= nil then
			task.cancel(autodropthread)
			autodropthread = nil
		end
		if autodPartsthread ~= nil then
			task.cancel(autodPartsthread)
			autodPartsthread = nil
		end
		if autocollectthread ~= nil then
			task.cancel(autocollectthread)
			autocollectthread = nil
		end
		if autotrainthread ~= nil then
			task.cancel(autotrainthread)
			autotrainthread = nil
		end
		if espinstance then
			task.cancel(espinstance)
			espinstance = nil
		end
		if partespinstance then
			task.cancel(partespinstance)
			partespinstance = nil
		end
		espfolder:ClearAllChildren()
	end)
end
task.spawn(SCRIPT_2)

return UI["1"], require;
