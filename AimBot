
a=[[
 _______  ______ _______ _______ _     _ _______ ______       ______  __   __      _____ _______ _______ _     _
 |       |_____/ |_____| |       |____/  |______ |     \      |_____]   \_/          |   |______ |______ |     |
 |_____  |    \_ |     | |_____  |    \_ |______ |_____/      |_____]    |         __|__ |       |       |_____|
]]




-- // GUI TO LUA (MODIFIED) \\ --

-- // INSTANCES: 189 | SCRIPTS: 2 | MODULES: 1 \\ --

local UI = {}

UI["1"] = Instance.new("ScreenGui", game:GetService("CoreGui"))
UI["1"]["IgnoreGuiInset"] = true
UI["1"]["DisplayOrder"] = 100
UI["1"]["ScreenInsets"] = Enum.ScreenInsets.DeviceSafeInsets
UI["1"]["Name"] = [[skullissuesifuusethis]]
UI["1"]["ResetOnSpawn"] = false

UI["2"] = Instance.new("Frame", UI["1"])
UI["2"]["BorderSizePixel"] = 0
UI["2"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["2"]["AnchorPoint"] = Vector2.new(0.5, 0.5)
UI["2"]["Size"] = UDim2.new(0.28545, 0, 0.6539, 0)
UI["2"]["Position"] = UDim2.new(0.2, 0, 0.5, 0)
UI["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["2"]["Name"] = [[HubFrame]]
UI["2"]["BackgroundTransparency"] = 0.9

UI["3"] = Instance.new("UIStroke", UI["2"])
UI["3"]["Thickness"] = 2.7
UI["3"]["Color"] = Color3.fromRGB(0, 0, 255)

UI["4"] = Instance.new("TextLabel", UI["2"])
UI["4"]["TextWrapped"] = true
UI["4"]["BorderSizePixel"] = 0
UI["4"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["4"]["TextScaled"] = true
UI["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["4"]["TextSize"] = 14
UI["4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["4"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["4"]["BackgroundTransparency"] = 0.9
UI["4"]["Size"] = UDim2.new(1, 0, 0.08437, 0)
UI["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["4"]["Text"] = [[Beanz Hub]]
UI["4"]["Name"] = [[Title]]
UI["4"]["Position"] = UDim2.new(-0, 0, 0, 0)

UI["5"] = Instance.new("Frame", UI["2"])
UI["5"]["BorderSizePixel"] = 0
UI["5"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["5"]["Size"] = UDim2.new(1, 0, 0.07407, 0)
UI["5"]["Position"] = UDim2.new(0, 0, 0.08279, 0)
UI["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["5"]["Name"] = [[ModeSelect]]
UI["5"]["BackgroundTransparency"] = 0.8

UI["6"] = Instance.new("TextButton", UI["5"])
UI["6"]["TextWrapped"] = true
UI["6"]["BorderSizePixel"] = 0
UI["6"]["TextSize"] = 14
UI["6"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["6"]["TextScaled"] = true
UI["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["6"]["Size"] = UDim2.new(0.513, 0, 0.92312, 0)
UI["6"]["BackgroundTransparency"] = 1
UI["6"]["Name"] = [[AimbotTotal]]
UI["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6"]["Text"] = [[Aimbot]]
UI["6"]["Position"] = UDim2.new(0.0183, 0, 0.07688, 0)

UI["7"] = Instance.new("UIPadding", UI["6"])
UI["7"]["PaddingRight"] = UDim.new(0.6, 0)
UI["7"]["PaddingLeft"] = UDim.new(0.1, 0)

UI["8"] = Instance.new("UIListLayout", UI["5"])
UI["8"]["Padding"] = UDim.new(-0.3, 0)
UI["8"]["SortOrder"] = Enum.SortOrder.LayoutOrder
UI["8"]["FillDirection"] = Enum.FillDirection.Horizontal

UI["9"] = Instance.new("TextButton", UI["5"])
UI["9"]["TextWrapped"] = true
UI["9"]["BorderSizePixel"] = 0
UI["9"]["TextTransparency"] = 0.5
UI["9"]["TextSize"] = 14
UI["9"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["9"]["TextScaled"] = true
UI["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["9"]["Size"] = UDim2.new(0.513, 0, 0.92312, 0)
UI["9"]["BackgroundTransparency"] = 1
UI["9"]["Name"] = [[EspTotal]]
UI["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["9"]["Text"] = [[Esp]]
UI["9"]["Position"] = UDim2.new(0.20389, 0, 0.07688, 0)

UI["a"] = Instance.new("UIPadding", UI["9"])
UI["a"]["PaddingRight"] = UDim.new(0.75, 0)
UI["a"]["PaddingLeft"] = UDim.new(0.1, 0)

UI["b"] = Instance.new("Frame", UI["2"])
UI["b"]["BorderSizePixel"] = 0
UI["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["b"]["Size"] = UDim2.new(1, 0, 1, 0)
UI["b"]["Position"] = UDim2.new(0, 0, 0.02, 0)
UI["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["b"]["Name"] = [[AimbotTotal]]
UI["b"]["BackgroundTransparency"] = 1

UI["c"] = Instance.new("Frame", UI["b"])
UI["c"]["BorderSizePixel"] = 0
UI["c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["c"]["Size"] = UDim2.new(0.9701, 0, 0.81021, 0)
UI["c"]["Position"] = UDim2.new(0.01374, 0, 0.15577, 0)
UI["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["c"]["Name"] = [[AimbotMenu]]
UI["c"]["BackgroundTransparency"] = 0.65

UI["d"] = Instance.new("UICorner", UI["c"])


UI["e"] = Instance.new("UIStroke", UI["c"])
UI["e"]["Thickness"] = 0.6
UI["e"]["Color"] = Color3.fromRGB(255, 255, 255)

UI["f"] = Instance.new("Frame", UI["c"])
UI["f"]["BorderSizePixel"] = 0
UI["f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["f"]["Size"] = UDim2.new(0.4923, 0, 0.84235, 0)
UI["f"]["Position"] = UDim2.new(0.01872, 0, 0.09676, 0)
UI["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["f"]["Name"] = [[Toggles]]
UI["f"]["BackgroundTransparency"] = 1

UI["10"] = Instance.new("UIListLayout", UI["f"])
UI["10"]["Padding"] = UDim.new(0.03, 0)
UI["10"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["11"] = Instance.new("Frame", UI["f"])
UI["11"]["BorderSizePixel"] = 0
UI["11"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["11"]["Size"] = UDim2.new(0.58102, 0, 0.07642, 0)
UI["11"]["Position"] = UDim2.new(-0, 0, -0, 0)
UI["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["11"]["Name"] = [[AimbotToggle]]
UI["11"]["BackgroundTransparency"] = 1

UI["12"] = Instance.new("TextLabel", UI["11"])
UI["12"]["TextWrapped"] = true
UI["12"]["BorderSizePixel"] = 0
UI["12"]["TextScaled"] = true
UI["12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["12"]["TextSize"] = 14
UI["12"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["12"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["12"]["BackgroundTransparency"] = 1
UI["12"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["12"]["Text"] = [[Enable Aimbot]]
UI["12"]["Name"] = [[Text]]
UI["12"]["Position"] = UDim2.new(0.2663, 0, 0.08511, 0)

UI["13"] = Instance.new("TextButton", UI["11"])
UI["13"]["BorderSizePixel"] = 0
UI["13"]["TextSize"] = 14
UI["13"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["13"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 255)
UI["13"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["13"]["Size"] = UDim2.new(0.20548, 0, 0.42553, 0)
UI["13"]["BackgroundTransparency"] = 1
UI["13"]["Name"] = [[Toggle]]
UI["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["13"]["Text"] = [[]]
UI["13"]["Position"] = UDim2.new(0, 0, 0.23404, 0)

UI["14"] = Instance.new("UICorner", UI["13"])


UI["15"] = Instance.new("UIStroke", UI["13"])
UI["15"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["16"] = Instance.new("UIStroke", UI["f"])
UI["16"]["Thickness"] = 1.7
UI["16"]["Color"] = Color3.fromRGB(86, 86, 255)

UI["17"] = Instance.new("UIPadding", UI["f"])
UI["17"]["PaddingTop"] = UDim.new(0.02, 0)
UI["17"]["PaddingLeft"] = UDim.new(0.04, 0)

UI["18"] = Instance.new("Frame", UI["f"])
UI["18"]["BorderSizePixel"] = 0
UI["18"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["18"]["Size"] = UDim2.new(0.58102, 0, 0.07642, 0)
UI["18"]["Position"] = UDim2.new(-0, 0, 0.10249, 0)
UI["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["18"]["Name"] = [[LockBind]]
UI["18"]["BackgroundTransparency"] = 1

UI["19"] = Instance.new("TextLabel", UI["18"])
UI["19"]["TextWrapped"] = true
UI["19"]["BorderSizePixel"] = 0
UI["19"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["19"]["TextScaled"] = true
UI["19"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["19"]["TextSize"] = 14
UI["19"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["19"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["19"]["BackgroundTransparency"] = 1
UI["19"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["19"]["Text"] = [[Lock Bind]]
UI["19"]["Name"] = [[Text]]
UI["19"]["Position"] = UDim2.new(-0.00475, 0, 0.16347, 0)

UI["1a"] = Instance.new("TextBox", UI["18"])
UI["1a"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["1a"]["BorderSizePixel"] = 0
UI["1a"]["TextEditable"] = false
UI["1a"]["TextWrapped"] = true
UI["1a"]["TextSize"] = 14
UI["1a"]["TextScaled"] = true
UI["1a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["1a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["1a"]["PlaceholderText"] = [[Key]]
UI["1a"]["Size"] = UDim2.new(0.71574, 0, 0.78723, 0)
UI["1a"]["Position"] = UDim2.new(0.7417, 0, 0.11754, 0)
UI["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1a"]["Text"] = [[RMB]]
UI["1a"]["BackgroundTransparency"] = 0.55

UI["1b"] = Instance.new("UIStroke", UI["1a"])
UI["1b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["1c"] = Instance.new("UICorner", UI["1a"])


UI["1d"] = Instance.new("UIPadding", UI["1a"])
UI["1d"]["PaddingTop"] = UDim.new(0.1, 0)
UI["1d"]["PaddingRight"] = UDim.new(0.1, 0)
UI["1d"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["1d"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["1e"] = Instance.new("Frame", UI["f"])
UI["1e"]["BorderSizePixel"] = 0
UI["1e"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["1e"]["Size"] = UDim2.new(0.84681, 0, 0.14091, 0)
UI["1e"]["Position"] = UDim2.new(-0, 0, 0.20499, 0)
UI["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1e"]["Name"] = [[Mode]]
UI["1e"]["BackgroundTransparency"] = 1

UI["1f"] = Instance.new("TextLabel", UI["1e"])
UI["1f"]["TextWrapped"] = true
UI["1f"]["BorderSizePixel"] = 0
UI["1f"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["1f"]["TextScaled"] = true
UI["1f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["1f"]["TextSize"] = 14
UI["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["1f"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["1f"]["BackgroundTransparency"] = 1
UI["1f"]["Size"] = UDim2.new(0.56512, 0, 0.38136, 0)
UI["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1f"]["Text"] = [[Mode]]
UI["1f"]["Name"] = [[Text]]
UI["1f"]["Position"] = UDim2.new(-0.00534, 0, 0.16347, 0)

UI["20"] = Instance.new("TextButton", UI["1e"])
UI["20"]["TextWrapped"] = true
UI["20"]["BorderSizePixel"] = 0
UI["20"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["20"]["TextSize"] = 14
UI["20"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["20"]["TextScaled"] = true
UI["20"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["20"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["20"]["ZIndex"] = 2
UI["20"]["Size"] = UDim2.new(1.00663, 0, 0.46241, 0)
UI["20"]["BackgroundTransparency"] = 0.55
UI["20"]["Name"] = [[ChangeToggleMode]]
UI["20"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["20"]["Text"] = [[Hold]]
UI["20"]["Position"] = UDim2.new(-0.00663, 0, 0.65332, 0)

UI["21"] = Instance.new("UICorner", UI["20"])


UI["22"] = Instance.new("UIPadding", UI["20"])
UI["22"]["PaddingTop"] = UDim.new(0.1, 0)
UI["22"]["PaddingRight"] = UDim.new(0.1, 0)
UI["22"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["22"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["23"] = Instance.new("UIStroke", UI["20"])
UI["23"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["24"] = Instance.new("Frame", UI["20"])
UI["24"]["Visible"] = false
UI["24"]["BorderSizePixel"] = 0
UI["24"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["24"]["Size"] = UDim2.new(1.25, 0, 1.25732, 0)
UI["24"]["Position"] = UDim2.new(-0.125, 0, 1.125, 0)
UI["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["24"]["Name"] = [[DropFrame]]
UI["24"]["BackgroundTransparency"] = 1

UI["25"] = Instance.new("TextButton", UI["24"])
UI["25"]["TextWrapped"] = true
UI["25"]["BorderSizePixel"] = 0
UI["25"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["25"]["TextSize"] = 14
UI["25"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["25"]["TextScaled"] = true
UI["25"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["25"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["25"]["Size"] = UDim2.new(1, 0, 1, 0)
UI["25"]["BackgroundTransparency"] = 0.65
UI["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["25"]["Text"] = [[Toggle]]

UI["26"] = Instance.new("UIPadding", UI["25"])
UI["26"]["PaddingTop"] = UDim.new(0.1, 0)
UI["26"]["PaddingRight"] = UDim.new(0.1, 0)
UI["26"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["26"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["27"] = Instance.new("TextLabel", UI["1e"])
UI["27"]["TextWrapped"] = true
UI["27"]["ZIndex"] = 3
UI["27"]["BorderSizePixel"] = 0
UI["27"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["27"]["TextScaled"] = true
UI["27"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["27"]["TextSize"] = 14
UI["27"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["27"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["27"]["BackgroundTransparency"] = 1
UI["27"]["Size"] = UDim2.new(0.10333, 0, 0.5183, 0)
UI["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["27"]["Text"] = [[◣]]
UI["27"]["Rotation"] = -45
UI["27"]["Name"] = [[Arrow]]
UI["27"]["Position"] = UDim2.new(0.83863, 0, 0.50099, 0)

UI["28"] = Instance.new("Frame", UI["f"])
UI["28"]["BorderSizePixel"] = 0
UI["28"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["28"]["Size"] = UDim2.new(0.84681, 0, 0.14091, 0)
UI["28"]["Position"] = UDim2.new(-0, 0, 0.37197, 0)
UI["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["28"]["Name"] = [[Target]]
UI["28"]["BackgroundTransparency"] = 1

UI["29"] = Instance.new("TextLabel", UI["28"])
UI["29"]["TextWrapped"] = true
UI["29"]["BorderSizePixel"] = 0
UI["29"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["29"]["TextScaled"] = true
UI["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["29"]["TextSize"] = 14
UI["29"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["29"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["29"]["BackgroundTransparency"] = 1
UI["29"]["Size"] = UDim2.new(0.56512, 0, 0.38136, 0)
UI["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["29"]["Text"] = [[Target]]
UI["29"]["Name"] = [[Text]]
UI["29"]["Position"] = UDim2.new(-0.00534, 0, 0.16347, 0)

UI["2a"] = Instance.new("TextButton", UI["28"])
UI["2a"]["TextWrapped"] = true
UI["2a"]["BorderSizePixel"] = 0
UI["2a"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["2a"]["TextSize"] = 14
UI["2a"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["2a"]["TextScaled"] = true
UI["2a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["2a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["2a"]["ZIndex"] = 2
UI["2a"]["Size"] = UDim2.new(1.00663, 0, 0.46241, 0)
UI["2a"]["BackgroundTransparency"] = 0.55
UI["2a"]["Name"] = [[ChangeToggleMode]]
UI["2a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["2a"]["Text"] = [[Head]]
UI["2a"]["Position"] = UDim2.new(-0.00663, 0, 0.65332, 0)

UI["2b"] = Instance.new("UICorner", UI["2a"])


UI["2c"] = Instance.new("UIPadding", UI["2a"])
UI["2c"]["PaddingTop"] = UDim.new(0.1, 0)
UI["2c"]["PaddingRight"] = UDim.new(0.1, 0)
UI["2c"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["2c"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["2d"] = Instance.new("UIStroke", UI["2a"])
UI["2d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["2e"] = Instance.new("Frame", UI["2a"])
UI["2e"]["Visible"] = false
UI["2e"]["ZIndex"] = 2
UI["2e"]["BorderSizePixel"] = 0
UI["2e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["2e"]["Size"] = UDim2.new(1.25, 0, 1.25732, 0)
UI["2e"]["Position"] = UDim2.new(-0.125, 0, 1.125, 0)
UI["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["2e"]["Name"] = [[DropFrame]]
UI["2e"]["BackgroundTransparency"] = 1

UI["2f"] = Instance.new("TextButton", UI["2e"])
UI["2f"]["TextWrapped"] = true
UI["2f"]["BorderSizePixel"] = 0
UI["2f"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["2f"]["TextSize"] = 14
UI["2f"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["2f"]["TextScaled"] = true
UI["2f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["2f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["2f"]["Selectable"] = false
UI["2f"]["ZIndex"] = 4
UI["2f"]["Size"] = UDim2.new(1, 0, 1, 0)
UI["2f"]["BackgroundTransparency"] = 0.65
UI["2f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["2f"]["Text"] = [[HumanoidRootPart]]

UI["30"] = Instance.new("UIPadding", UI["2f"])
UI["30"]["PaddingTop"] = UDim.new(0.1, 0)
UI["30"]["PaddingRight"] = UDim.new(0.1, 0)
UI["30"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["30"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["31"] = Instance.new("UIListLayout", UI["2e"])
UI["31"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["32"] = Instance.new("TextButton", UI["2e"])
UI["32"]["TextWrapped"] = true
UI["32"]["BorderSizePixel"] = 0
UI["32"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["32"]["TextSize"] = 14
UI["32"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["32"]["TextScaled"] = true
UI["32"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["32"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["32"]["Selectable"] = false
UI["32"]["ZIndex"] = 4
UI["32"]["Size"] = UDim2.new(1, 0, 1, 0)
UI["32"]["BackgroundTransparency"] = 0.65
UI["32"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["32"]["Text"] = [[Random]]

UI["33"] = Instance.new("UIPadding", UI["32"])
UI["33"]["PaddingTop"] = UDim.new(0.1, 0)
UI["33"]["PaddingRight"] = UDim.new(0.1, 0)
UI["33"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["33"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["34"] = Instance.new("TextLabel", UI["28"])
UI["34"]["TextWrapped"] = true
UI["34"]["ZIndex"] = 3
UI["34"]["BorderSizePixel"] = 0
UI["34"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["34"]["TextScaled"] = true
UI["34"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["34"]["TextSize"] = 14
UI["34"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["34"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["34"]["BackgroundTransparency"] = 1
UI["34"]["Size"] = UDim2.new(0.10333, 0, 0.5183, 0)
UI["34"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["34"]["Text"] = [[◣]]
UI["34"]["Rotation"] = -45
UI["34"]["Name"] = [[Arrow]]
UI["34"]["Position"] = UDim2.new(0.83863, 0, 0.50099, 0)

UI["35"] = Instance.new("Frame", UI["f"])
UI["35"]["Visible"] = false
UI["35"]["BorderSizePixel"] = 0
UI["35"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["35"]["Size"] = UDim2.new(0.84681, 0, 0.14091, 0)
UI["35"]["Position"] = UDim2.new(-0, 0, 0.53896, 0)
UI["35"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["35"]["Name"] = [[LockMode]]
UI["35"]["BackgroundTransparency"] = 1

UI["36"] = Instance.new("TextLabel", UI["35"])
UI["36"]["TextWrapped"] = true
UI["36"]["BorderSizePixel"] = 0
UI["36"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["36"]["TextScaled"] = true
UI["36"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["36"]["TextSize"] = 14
UI["36"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["36"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["36"]["BackgroundTransparency"] = 1
UI["36"]["Size"] = UDim2.new(0.56512, 0, 0.38136, 0)
UI["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["36"]["Text"] = [[Lock Mode]]
UI["36"]["Name"] = [[Text]]
UI["36"]["Position"] = UDim2.new(-0.00534, 0, 0.16347, 0)

UI["37"] = Instance.new("TextButton", UI["35"])
UI["37"]["TextWrapped"] = true
UI["37"]["BorderSizePixel"] = 0
UI["37"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["37"]["TextSize"] = 14
UI["37"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["37"]["TextScaled"] = true
UI["37"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["37"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["37"]["ZIndex"] = 2
UI["37"]["Size"] = UDim2.new(1.00663, 0, 0.46241, 0)
UI["37"]["BackgroundTransparency"] = 0.55
UI["37"]["Name"] = [[ChangeToggleMode]]
UI["37"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["37"]["Text"] = [[Camera]]
UI["37"]["Position"] = UDim2.new(-0.00663, 0, 0.65332, 0)

UI["38"] = Instance.new("UICorner", UI["37"])


UI["39"] = Instance.new("UIPadding", UI["37"])
UI["39"]["PaddingTop"] = UDim.new(0.1, 0)
UI["39"]["PaddingRight"] = UDim.new(0.1, 0)
UI["39"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["39"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["3a"] = Instance.new("UIStroke", UI["37"])
UI["3a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["3b"] = Instance.new("Frame", UI["37"])
UI["3b"]["Visible"] = false
UI["3b"]["ZIndex"] = 2
UI["3b"]["BorderSizePixel"] = 0
UI["3b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["3b"]["Size"] = UDim2.new(1.25, 0, 1.25732, 0)
UI["3b"]["Position"] = UDim2.new(-0.125, 0, 1.125, 0)
UI["3b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["3b"]["Name"] = [[DropFrame]]
UI["3b"]["BackgroundTransparency"] = 1

UI["3c"] = Instance.new("TextButton", UI["3b"])
UI["3c"]["TextWrapped"] = true
UI["3c"]["BorderSizePixel"] = 0
UI["3c"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["3c"]["TextSize"] = 14
UI["3c"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["3c"]["TextScaled"] = true
UI["3c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["3c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["3c"]["Selectable"] = false
UI["3c"]["ZIndex"] = 2
UI["3c"]["Size"] = UDim2.new(1, 0, 1, 0)
UI["3c"]["BackgroundTransparency"] = 0.65
UI["3c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["3c"]["Text"] = [[Mouse]]

UI["3d"] = Instance.new("UIPadding", UI["3c"])
UI["3d"]["PaddingTop"] = UDim.new(0.1, 0)
UI["3d"]["PaddingRight"] = UDim.new(0.1, 0)
UI["3d"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["3d"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["3e"] = Instance.new("TextButton", UI["3b"])
UI["3e"]["TextWrapped"] = true
UI["3e"]["BorderSizePixel"] = 0
UI["3e"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["3e"]["TextSize"] = 14
UI["3e"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["3e"]["TextScaled"] = true
UI["3e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["3e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["3e"]["Selectable"] = false
UI["3e"]["ZIndex"] = 2
UI["3e"]["Size"] = UDim2.new(1, 0, 1, 0)
UI["3e"]["BackgroundTransparency"] = 0.65
UI["3e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["3e"]["Text"] = [[Dynamic]]

UI["3f"] = Instance.new("UIPadding", UI["3e"])
UI["3f"]["PaddingTop"] = UDim.new(0.1, 0)
UI["3f"]["PaddingRight"] = UDim.new(0.1, 0)
UI["3f"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["3f"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["40"] = Instance.new("UIListLayout", UI["3b"])
UI["40"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["41"] = Instance.new("TextLabel", UI["35"])
UI["41"]["TextWrapped"] = true
UI["41"]["ZIndex"] = 3
UI["41"]["BorderSizePixel"] = 0
UI["41"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["41"]["TextScaled"] = true
UI["41"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["41"]["TextSize"] = 14
UI["41"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["41"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["41"]["BackgroundTransparency"] = 1
UI["41"]["Size"] = UDim2.new(0.10333, 0, 0.5183, 0)
UI["41"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["41"]["Text"] = [[◣]]
UI["41"]["Rotation"] = -45
UI["41"]["Name"] = [[Arrow]]
UI["41"]["Position"] = UDim2.new(0.83863, 0, 0.50099, 0)

UI["42"] = Instance.new("Frame", UI["f"])
UI["42"]["Visible"] = false
UI["42"]["BorderSizePixel"] = 0
UI["42"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["42"]["Size"] = UDim2.new(0.58102, 0, 0.07642, 0)
UI["42"]["Position"] = UDim2.new(-0, 0, -0, 0)
UI["42"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["42"]["Name"] = [[Autofire]]
UI["42"]["BackgroundTransparency"] = 1

UI["43"] = Instance.new("TextLabel", UI["42"])
UI["43"]["TextWrapped"] = true
UI["43"]["BorderSizePixel"] = 0
UI["43"]["TextScaled"] = true
UI["43"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["43"]["TextSize"] = 14
UI["43"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["43"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["43"]["BackgroundTransparency"] = 1
UI["43"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["43"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["43"]["Text"] = [[Autofire]]
UI["43"]["Name"] = [[Autofire]]
UI["43"]["Position"] = UDim2.new(0.2663, 0, 0.08511, 0)

UI["44"] = Instance.new("TextButton", UI["42"])
UI["44"]["BorderSizePixel"] = 0
UI["44"]["TextSize"] = 14
UI["44"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["44"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 255)
UI["44"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["44"]["Size"] = UDim2.new(0.20548, 0, 0.42553, 0)
UI["44"]["BackgroundTransparency"] = 1
UI["44"]["Name"] = [[Toggle]]
UI["44"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["44"]["Text"] = [[]]
UI["44"]["Position"] = UDim2.new(0, 0, 0.23404, 0)

UI["45"] = Instance.new("UICorner", UI["44"])


UI["46"] = Instance.new("UIStroke", UI["44"])
UI["46"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["47"] = Instance.new("Frame", UI["f"])
UI["47"]["BorderSizePixel"] = 0
UI["47"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["47"]["Size"] = UDim2.new(0.58274, 0, 0.09445, 0)
UI["47"]["Position"] = UDim2.new(-0, 0, 0.72556, 0)
UI["47"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["47"]["Name"] = [[Smoothing]]
UI["47"]["BackgroundTransparency"] = 1

UI["48"] = Instance.new("TextLabel", UI["47"])
UI["48"]["TextWrapped"] = true
UI["48"]["BorderSizePixel"] = 0
UI["48"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["48"]["TextScaled"] = true
UI["48"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["48"]["TextSize"] = 14
UI["48"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["48"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["48"]["BackgroundTransparency"] = 1
UI["48"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["48"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["48"]["Text"] = [[Smoothness]]
UI["48"]["Name"] = [[Text]]
UI["48"]["Position"] = UDim2.new(-0.00475, 0, 0.16347, 0)

UI["49"] = Instance.new("TextBox", UI["47"])
UI["49"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["49"]["BorderSizePixel"] = 0
UI["49"]["TextWrapped"] = true
UI["49"]["TextSize"] = 14
UI["49"]["TextScaled"] = true
UI["49"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["49"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["49"]["ClearTextOnFocus"] = false
UI["49"]["PlaceholderText"] = [[0-1]]
UI["49"]["Size"] = UDim2.new(0.56783, 0, 0.78723, 0)
UI["49"]["Position"] = UDim2.new(0.88531, 0, 0.11754, 0)
UI["49"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["49"]["Text"] = [[0]]
UI["49"]["BackgroundTransparency"] = 0.55

UI["4a"] = Instance.new("UIStroke", UI["49"])
UI["4a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["4b"] = Instance.new("UICorner", UI["49"])


UI["4c"] = Instance.new("UIPadding", UI["49"])
UI["4c"]["PaddingTop"] = UDim.new(0.1, 0)
UI["4c"]["PaddingRight"] = UDim.new(0.1, 0)
UI["4c"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["4c"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["4d"] = Instance.new("Frame", UI["f"])
UI["4d"]["BorderSizePixel"] = 0
UI["4d"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["4d"]["Size"] = UDim2.new(0.58102, 0, 0.07642, 0)
UI["4d"]["Position"] = UDim2.new(-0, 0, 0.10249, 0)
UI["4d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["4d"]["Name"] = [[HideUi]]
UI["4d"]["BackgroundTransparency"] = 1

UI["4e"] = Instance.new("TextLabel", UI["4d"])
UI["4e"]["TextWrapped"] = true
UI["4e"]["BorderSizePixel"] = 0
UI["4e"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["4e"]["TextScaled"] = true
UI["4e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["4e"]["TextSize"] = 14
UI["4e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["4e"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["4e"]["BackgroundTransparency"] = 1
UI["4e"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["4e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["4e"]["Text"] = [[Hide UI]]
UI["4e"]["Name"] = [[Text]]
UI["4e"]["Position"] = UDim2.new(-0.00475, 0, 0.16347, 0)

UI["4f"] = Instance.new("TextBox", UI["4d"])
UI["4f"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["4f"]["BorderSizePixel"] = 0
UI["4f"]["TextEditable"] = false
UI["4f"]["TextWrapped"] = true
UI["4f"]["TextSize"] = 14
UI["4f"]["TextScaled"] = true
UI["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["4f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["4f"]["PlaceholderText"] = [[Key]]
UI["4f"]["Size"] = UDim2.new(0.71574, 0, 0.78723, 0)
UI["4f"]["Position"] = UDim2.new(0.7417, 0, 0.11754, 0)
UI["4f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["4f"]["Text"] = [[P]]
UI["4f"]["BackgroundTransparency"] = 0.55

UI["50"] = Instance.new("UIStroke", UI["4f"])
UI["50"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["51"] = Instance.new("UICorner", UI["4f"])


UI["52"] = Instance.new("UIPadding", UI["4f"])
UI["52"]["PaddingTop"] = UDim.new(0.1, 0)
UI["52"]["PaddingRight"] = UDim.new(0.1, 0)
UI["52"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["52"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["53"] = Instance.new("Frame", UI["f"])
UI["53"]["BorderSizePixel"] = 0
UI["53"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["53"]["Size"] = UDim2.new(0.84681, 0, 0.14091, 0)
UI["53"]["Position"] = UDim2.new(-0, 0, 0.53896, 0)
UI["53"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["53"]["Name"] = [[MobileMode]]
UI["53"]["BackgroundTransparency"] = 1

UI["54"] = Instance.new("TextLabel", UI["53"])
UI["54"]["TextWrapped"] = true
UI["54"]["BorderSizePixel"] = 0
UI["54"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["54"]["TextScaled"] = true
UI["54"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["54"]["TextSize"] = 14
UI["54"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["54"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["54"]["BackgroundTransparency"] = 1
UI["54"]["Size"] = UDim2.new(0.56512, 0, 0.38136, 0)
UI["54"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["54"]["Text"] = [[Lock Button]]
UI["54"]["Name"] = [[Text]]
UI["54"]["Position"] = UDim2.new(-0.00534, 0, 0.16347, 0)

UI["55"] = Instance.new("TextButton", UI["53"])
UI["55"]["TextWrapped"] = true
UI["55"]["BorderSizePixel"] = 0
UI["55"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["55"]["TextSize"] = 14
UI["55"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["55"]["TextScaled"] = true
UI["55"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["55"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["55"]["ZIndex"] = 2
UI["55"]["Size"] = UDim2.new(0.56898, 0, 0.46241, 0)
UI["55"]["BackgroundTransparency"] = 0.55
UI["55"]["Name"] = [[ChangeToggleMode]]
UI["55"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["55"]["Text"] = [[Normal]]
UI["55"]["Position"] = UDim2.new(-0.00663, 0, 0.65332, 0)

UI["56"] = Instance.new("UICorner", UI["55"])


UI["57"] = Instance.new("UIPadding", UI["55"])
UI["57"]["PaddingTop"] = UDim.new(0.1, 0)
UI["57"]["PaddingRight"] = UDim.new(0.1, 0)
UI["57"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["57"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["58"] = Instance.new("UIStroke", UI["55"])
UI["58"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["59"] = Instance.new("Frame", UI["55"])
UI["59"]["Visible"] = false
UI["59"]["ZIndex"] = 2
UI["59"]["BorderSizePixel"] = 0
UI["59"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["59"]["Size"] = UDim2.new(1.25, 0, 1.25732, 0)
UI["59"]["Position"] = UDim2.new(-0.125, 0, 1.125, 0)
UI["59"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["59"]["Name"] = [[DropFrame]]
UI["59"]["BackgroundTransparency"] = 1

UI["5a"] = Instance.new("TextButton", UI["59"])
UI["5a"]["TextWrapped"] = true
UI["5a"]["BorderSizePixel"] = 0
UI["5a"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["5a"]["TextSize"] = 14
UI["5a"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["5a"]["TextScaled"] = true
UI["5a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["5a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["5a"]["Selectable"] = false
UI["5a"]["ZIndex"] = 2
UI["5a"]["Size"] = UDim2.new(1, 0, 1, 0)
UI["5a"]["BackgroundTransparency"] = 0.65
UI["5a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["5a"]["Text"] = [[Custom]]

UI["5b"] = Instance.new("UIPadding", UI["5a"])
UI["5b"]["PaddingTop"] = UDim.new(0.1, 0)
UI["5b"]["PaddingRight"] = UDim.new(0.1, 0)
UI["5b"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["5b"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["5c"] = Instance.new("UIListLayout", UI["59"])
UI["5c"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["5d"] = Instance.new("TextLabel", UI["53"])
UI["5d"]["TextWrapped"] = true
UI["5d"]["ZIndex"] = 3
UI["5d"]["BorderSizePixel"] = 0
UI["5d"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["5d"]["TextScaled"] = true
UI["5d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["5d"]["TextSize"] = 14
UI["5d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["5d"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["5d"]["BackgroundTransparency"] = 1
UI["5d"]["Size"] = UDim2.new(0.10333, 0, 0.5183, 0)
UI["5d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["5d"]["Text"] = [[◣]]
UI["5d"]["Rotation"] = -45
UI["5d"]["Name"] = [[Arrow]]
UI["5d"]["Position"] = UDim2.new(0.40408, 0, 0.53387, 0)

UI["5e"] = Instance.new("TextButton", UI["53"])
UI["5e"]["TextWrapped"] = true
UI["5e"]["BorderSizePixel"] = 0
UI["5e"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["5e"]["TextSize"] = 14
UI["5e"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["5e"]["TextScaled"] = true
UI["5e"]["BackgroundColor3"] = Color3.fromRGB(94, 132, 255)
UI["5e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["5e"]["ZIndex"] = 2
UI["5e"]["Size"] = UDim2.new(0.2878, 0, 0.46241, 0)
UI["5e"]["Name"] = [[ModeSelection]]
UI["5e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["5e"]["Text"] = [[Move]]
UI["5e"]["Position"] = UDim2.new(0.65287, 0, 0.65332, 0)

UI["5f"] = Instance.new("UICorner", UI["5e"])


UI["60"] = Instance.new("UIPadding", UI["5e"])
UI["60"]["PaddingTop"] = UDim.new(0.1, 0)
UI["60"]["PaddingRight"] = UDim.new(0.1, 0)
UI["60"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["60"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["61"] = Instance.new("UIStroke", UI["5e"])
UI["61"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["62"] = Instance.new("Frame", UI["c"])
UI["62"]["BorderSizePixel"] = 0
UI["62"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["62"]["Size"] = UDim2.new(0.43333, 0, 0.33342, 0)
UI["62"]["Position"] = UDim2.new(0.55, 0, 0.60991, 0)
UI["62"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["62"]["Name"] = [[Sigma]]
UI["62"]["BackgroundTransparency"] = 1

UI["63"] = Instance.new("UIListLayout", UI["62"])
UI["63"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["64"] = Instance.new("Frame", UI["62"])
UI["64"]["Visible"] = false
UI["64"]["BorderSizePixel"] = 0
UI["64"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["64"]["Size"] = UDim2.new(0.58274, 0, 0.24039, 0)
UI["64"]["Position"] = UDim2.new(0, 0, 0, 0)
UI["64"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["64"]["Name"] = [[HpAmount]]
UI["64"]["BackgroundTransparency"] = 1

UI["65"] = Instance.new("TextLabel", UI["64"])
UI["65"]["TextWrapped"] = true
UI["65"]["BorderSizePixel"] = 0
UI["65"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["65"]["TextScaled"] = true
UI["65"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["65"]["TextSize"] = 14
UI["65"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["65"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["65"]["BackgroundTransparency"] = 1
UI["65"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["65"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["65"]["Text"] = [[HP]]
UI["65"]["Name"] = [[Text]]
UI["65"]["Position"] = UDim2.new(-0.00475, 0, 0.16347, 0)

UI["66"] = Instance.new("TextBox", UI["64"])
UI["66"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["66"]["BorderSizePixel"] = 0
UI["66"]["TextWrapped"] = true
UI["66"]["TextSize"] = 14
UI["66"]["TextScaled"] = true
UI["66"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["66"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["66"]["PlaceholderText"] = [[Health %]]
UI["66"]["Size"] = UDim2.new(0.64887, 0, 0.78723, 0)
UI["66"]["Position"] = UDim2.new(0.35113, 0, 0.11754, 0)
UI["66"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["66"]["Text"] = [[]]
UI["66"]["BackgroundTransparency"] = 0.55

UI["67"] = Instance.new("UIStroke", UI["66"])
UI["67"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["68"] = Instance.new("UICorner", UI["66"])


UI["69"] = Instance.new("UIPadding", UI["66"])
UI["69"]["PaddingTop"] = UDim.new(0.1, 0)
UI["69"]["PaddingRight"] = UDim.new(0.1, 0)
UI["69"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["69"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["6a"] = Instance.new("Frame", UI["62"])
UI["6a"]["BorderSizePixel"] = 0
UI["6a"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["6a"]["Size"] = UDim2.new(0.58274, 0, 0.24039, 0)
UI["6a"]["Position"] = UDim2.new(0, 0, 0.24039, 0)
UI["6a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6a"]["Name"] = [[FovVisibility]]
UI["6a"]["BackgroundTransparency"] = 1

UI["6b"] = Instance.new("TextLabel", UI["6a"])
UI["6b"]["TextWrapped"] = true
UI["6b"]["BorderSizePixel"] = 0
UI["6b"]["TextScaled"] = true
UI["6b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["6b"]["TextSize"] = 14
UI["6b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["6b"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["6b"]["BackgroundTransparency"] = 1
UI["6b"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["6b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6b"]["Text"] = [[FOV Visible]]
UI["6b"]["Name"] = [[Text]]
UI["6b"]["Position"] = UDim2.new(0.2663, 0, 0.08511, 0)

UI["6c"] = Instance.new("TextButton", UI["6a"])
UI["6c"]["BorderSizePixel"] = 0
UI["6c"]["TextSize"] = 14
UI["6c"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["6c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 255)
UI["6c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["6c"]["Size"] = UDim2.new(0.20548, 0, 0.42553, 0)
UI["6c"]["Name"] = [[Toggle]]
UI["6c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6c"]["Text"] = [[]]
UI["6c"]["Position"] = UDim2.new(0, 0, 0.23404, 0)

UI["6d"] = Instance.new("UICorner", UI["6c"])


UI["6e"] = Instance.new("UIStroke", UI["6c"])
UI["6e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["6f"] = Instance.new("UIStroke", UI["62"])
UI["6f"]["Thickness"] = 1.7
UI["6f"]["Color"] = Color3.fromRGB(86, 86, 255)

UI["70"] = Instance.new("UIPadding", UI["62"])
UI["70"]["PaddingTop"] = UDim.new(0.1, 0)
UI["70"]["PaddingLeft"] = UDim.new(0.04, 0)

UI["71"] = Instance.new("Frame", UI["62"])
UI["71"]["Visible"] = false
UI["71"]["BorderSizePixel"] = 0
UI["71"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["71"]["Size"] = UDim2.new(0.58274, 0, 0.24039, 0)
UI["71"]["Position"] = UDim2.new(0, 0, 0.24039, 0)
UI["71"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["71"]["Name"] = [[TeamCheck]]
UI["71"]["BackgroundTransparency"] = 1

UI["72"] = Instance.new("TextLabel", UI["71"])
UI["72"]["TextWrapped"] = true
UI["72"]["BorderSizePixel"] = 0
UI["72"]["TextScaled"] = true
UI["72"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["72"]["TextSize"] = 14
UI["72"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["72"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["72"]["BackgroundTransparency"] = 1
UI["72"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["72"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["72"]["Text"] = [[Team Check (not working rn)]]
UI["72"]["Name"] = [[Text]]
UI["72"]["Position"] = UDim2.new(0.2663, 0, 0.08511, 0)

UI["73"] = Instance.new("TextButton", UI["71"])
UI["73"]["BorderSizePixel"] = 0
UI["73"]["TextSize"] = 14
UI["73"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["73"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 255)
UI["73"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["73"]["Size"] = UDim2.new(0.20548, 0, 0.42553, 0)
UI["73"]["BackgroundTransparency"] = 1
UI["73"]["Name"] = [[Toggle]]
UI["73"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["73"]["Text"] = [[]]
UI["73"]["Position"] = UDim2.new(0, 0, 0.23404, 0)

UI["74"] = Instance.new("UICorner", UI["73"])


UI["75"] = Instance.new("UIStroke", UI["73"])
UI["75"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["76"] = Instance.new("Frame", UI["62"])
UI["76"]["BorderSizePixel"] = 0
UI["76"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["76"]["Size"] = UDim2.new(0.58274, 0, 0.24039, 0)
UI["76"]["Position"] = UDim2.new(0, 0, 0, 0)
UI["76"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["76"]["Name"] = [[FovSize]]
UI["76"]["BackgroundTransparency"] = 1

UI["77"] = Instance.new("TextLabel", UI["76"])
UI["77"]["TextWrapped"] = true
UI["77"]["BorderSizePixel"] = 0
UI["77"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["77"]["TextScaled"] = true
UI["77"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["77"]["TextSize"] = 14
UI["77"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["77"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["77"]["BackgroundTransparency"] = 1
UI["77"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["77"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["77"]["Text"] = [[FOV Size]]
UI["77"]["Name"] = [[Text]]
UI["77"]["Position"] = UDim2.new(-0.00475, 0, 0.16347, 0)

UI["78"] = Instance.new("TextBox", UI["76"])
UI["78"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["78"]["BorderSizePixel"] = 0
UI["78"]["TextWrapped"] = true
UI["78"]["TextSize"] = 14
UI["78"]["TextScaled"] = true
UI["78"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["78"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["78"]["ClearTextOnFocus"] = false
UI["78"]["PlaceholderText"] = [[0-1]]
UI["78"]["Size"] = UDim2.new(0.64887, 0, 0.78723, 0)
UI["78"]["Position"] = UDim2.new(0.88531, 0, 0.11754, 0)
UI["78"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["78"]["Text"] = [[2]]
UI["78"]["BackgroundTransparency"] = 0.55

UI["79"] = Instance.new("UIStroke", UI["78"])
UI["79"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["7a"] = Instance.new("UICorner", UI["78"])


UI["7b"] = Instance.new("UIPadding", UI["78"])
UI["7b"]["PaddingTop"] = UDim.new(0.1, 0)
UI["7b"]["PaddingRight"] = UDim.new(0.1, 0)
UI["7b"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["7b"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["7c"] = Instance.new("TextLabel", UI["c"])
UI["7c"]["TextWrapped"] = true
UI["7c"]["BorderSizePixel"] = 0
UI["7c"]["TextScaled"] = true
UI["7c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["7c"]["TextSize"] = 14
UI["7c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["7c"]["TextColor3"] = Color3.fromRGB(107, 147, 255)
UI["7c"]["BackgroundTransparency"] = 1
UI["7c"]["Size"] = UDim2.new(0.24225, 0, 0.06852, 0)
UI["7c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["7c"]["Text"] = [[Checks]]
UI["7c"]["Position"] = UDim2.new(0.52354, 0, 0.03814, 0)

UI["7d"] = Instance.new("TextLabel", UI["c"])
UI["7d"]["TextWrapped"] = true
UI["7d"]["BorderSizePixel"] = 0
UI["7d"]["TextScaled"] = true
UI["7d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["7d"]["TextSize"] = 14
UI["7d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["7d"]["TextColor3"] = Color3.fromRGB(107, 147, 255)
UI["7d"]["BackgroundTransparency"] = 1
UI["7d"]["Size"] = UDim2.new(0.242, 0, 0.069, 0)
UI["7d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["7d"]["Text"] = [[Values]]
UI["7d"]["Position"] = UDim2.new(0, 0, 0.03814, 0)

UI["7e"] = Instance.new("Frame", UI["c"])
UI["7e"]["BorderSizePixel"] = 0
UI["7e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["7e"]["Size"] = UDim2.new(0.43333, 0, 0.44775, 0)
UI["7e"]["Position"] = UDim2.new(0.54998, 0, 0.10121, 0)
UI["7e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["7e"]["Name"] = [[Checks]]
UI["7e"]["BackgroundTransparency"] = 1

UI["7f"] = Instance.new("UIListLayout", UI["7e"])
UI["7f"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["80"] = Instance.new("Frame", UI["7e"])
UI["80"]["Visible"] = false
UI["80"]["BorderSizePixel"] = 0
UI["80"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["80"]["Size"] = UDim2.new(0.58274, 0, 0.1961, 0)
UI["80"]["Position"] = UDim2.new(-0, 0, -0, 0)
UI["80"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["80"]["Name"] = [[HpAmount]]
UI["80"]["BackgroundTransparency"] = 1

UI["81"] = Instance.new("TextLabel", UI["80"])
UI["81"]["TextWrapped"] = true
UI["81"]["BorderSizePixel"] = 0
UI["81"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["81"]["TextScaled"] = true
UI["81"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["81"]["TextSize"] = 14
UI["81"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["81"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["81"]["BackgroundTransparency"] = 1
UI["81"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["81"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["81"]["Text"] = [[HP]]
UI["81"]["Name"] = [[Text]]
UI["81"]["Position"] = UDim2.new(-0.00475, 0, 0.16347, 0)

UI["82"] = Instance.new("TextBox", UI["80"])
UI["82"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["82"]["BorderSizePixel"] = 0
UI["82"]["TextWrapped"] = true
UI["82"]["TextSize"] = 14
UI["82"]["TextScaled"] = true
UI["82"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["82"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["82"]["PlaceholderText"] = [[Health %]]
UI["82"]["Size"] = UDim2.new(0.64887, 0, 0.78723, 0)
UI["82"]["Position"] = UDim2.new(0.35113, 0, 0.11754, 0)
UI["82"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["82"]["Text"] = [[]]
UI["82"]["BackgroundTransparency"] = 0.55

UI["83"] = Instance.new("UIStroke", UI["82"])
UI["83"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["84"] = Instance.new("UICorner", UI["82"])


UI["85"] = Instance.new("UIPadding", UI["82"])
UI["85"]["PaddingTop"] = UDim.new(0.1, 0)
UI["85"]["PaddingRight"] = UDim.new(0.1, 0)
UI["85"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["85"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["86"] = Instance.new("Frame", UI["7e"])
UI["86"]["BorderSizePixel"] = 0
UI["86"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["86"]["Size"] = UDim2.new(0.63421, 0, 0.1961, 0)
UI["86"]["Position"] = UDim2.new(-0, 0, 0, 0)
UI["86"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["86"]["Name"] = [[TargetBots]]
UI["86"]["BackgroundTransparency"] = 1

UI["87"] = Instance.new("TextLabel", UI["86"])
UI["87"]["TextWrapped"] = true
UI["87"]["BorderSizePixel"] = 0
UI["87"]["TextScaled"] = true
UI["87"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["87"]["TextSize"] = 14
UI["87"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["87"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["87"]["BackgroundTransparency"] = 1
UI["87"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["87"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["87"]["Text"] = [[Wall Check]]
UI["87"]["Name"] = [[Text]]
UI["87"]["Position"] = UDim2.new(0.2663, 0, 0.08511, 0)

UI["88"] = Instance.new("TextButton", UI["86"])
UI["88"]["BorderSizePixel"] = 0
UI["88"]["TextSize"] = 14
UI["88"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["88"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 255)
UI["88"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["88"]["Size"] = UDim2.new(0.20548, 0, 0.42553, 0)
UI["88"]["BackgroundTransparency"] = 1
UI["88"]["Name"] = [[Toggle]]
UI["88"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["88"]["Text"] = [[]]
UI["88"]["Position"] = UDim2.new(0, 0, 0.23404, 0)

UI["89"] = Instance.new("UICorner", UI["88"])


UI["8a"] = Instance.new("UIStroke", UI["88"])
UI["8a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["8b"] = Instance.new("UIStroke", UI["7e"])
UI["8b"]["Thickness"] = 1.7
UI["8b"]["Color"] = Color3.fromRGB(86, 86, 255)

UI["8c"] = Instance.new("UIPadding", UI["7e"])
UI["8c"]["PaddingTop"] = UDim.new(0.1, 0)
UI["8c"]["PaddingLeft"] = UDim.new(0.04, 0)

UI["8d"] = Instance.new("Frame", UI["7e"])
UI["8d"]["BorderSizePixel"] = 0
UI["8d"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["8d"]["Size"] = UDim2.new(0.58274, 0, 0.1961, 0)
UI["8d"]["Position"] = UDim2.new(-0, 0, 0.3922, 0)
UI["8d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["8d"]["Name"] = [[TeamCheck]]
UI["8d"]["BackgroundTransparency"] = 1

UI["8e"] = Instance.new("TextLabel", UI["8d"])
UI["8e"]["TextWrapped"] = true
UI["8e"]["BorderSizePixel"] = 0
UI["8e"]["TextScaled"] = true
UI["8e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["8e"]["TextSize"] = 14
UI["8e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["8e"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["8e"]["BackgroundTransparency"] = 1
UI["8e"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["8e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["8e"]["Text"] = [[Team Check]]
UI["8e"]["Name"] = [[Text]]
UI["8e"]["Position"] = UDim2.new(0.2663, 0, 0.08511, 0)

UI["8f"] = Instance.new("TextButton", UI["8d"])
UI["8f"]["BorderSizePixel"] = 0
UI["8f"]["TextSize"] = 14
UI["8f"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["8f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 255)
UI["8f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["8f"]["Size"] = UDim2.new(0.20548, 0, 0.42553, 0)
UI["8f"]["BackgroundTransparency"] = 1
UI["8f"]["Name"] = [[Toggle]]
UI["8f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["8f"]["Text"] = [[]]
UI["8f"]["Position"] = UDim2.new(0, 0, 0.23404, 0)

UI["90"] = Instance.new("UICorner", UI["8f"])


UI["91"] = Instance.new("UIStroke", UI["8f"])
UI["91"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["92"] = Instance.new("Frame", UI["7e"])
UI["92"]["BorderSizePixel"] = 0
UI["92"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["92"]["Size"] = UDim2.new(0.58274, 0, 0.1961, 0)
UI["92"]["Position"] = UDim2.new(-0, 0, 0.5883, 0)
UI["92"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["92"]["Name"] = [[Prediction]]
UI["92"]["BackgroundTransparency"] = 1

UI["93"] = Instance.new("TextLabel", UI["92"])
UI["93"]["TextWrapped"] = true
UI["93"]["BorderSizePixel"] = 0
UI["93"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["93"]["TextScaled"] = true
UI["93"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["93"]["TextSize"] = 14
UI["93"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["93"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["93"]["BackgroundTransparency"] = 1
UI["93"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["93"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["93"]["Text"] = [[Prediction]]
UI["93"]["Name"] = [[Text]]
UI["93"]["Position"] = UDim2.new(-0.00475, 0, 0.16347, 0)

UI["94"] = Instance.new("TextBox", UI["92"])
UI["94"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["94"]["BorderSizePixel"] = 0
UI["94"]["TextWrapped"] = true
UI["94"]["TextSize"] = 14
UI["94"]["TextScaled"] = true
UI["94"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["94"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["94"]["ClearTextOnFocus"] = false
UI["94"]["PlaceholderText"] = [[0-1]]
UI["94"]["Size"] = UDim2.new(0.64887, 0, 0.78723, 0)
UI["94"]["Position"] = UDim2.new(0.88531, 0, 0.11754, 0)
UI["94"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["94"]["Text"] = [[0]]
UI["94"]["BackgroundTransparency"] = 0.55

UI["95"] = Instance.new("UIStroke", UI["94"])
UI["95"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["96"] = Instance.new("UICorner", UI["94"])


UI["97"] = Instance.new("UIPadding", UI["94"])
UI["97"]["PaddingTop"] = UDim.new(0.1, 0)
UI["97"]["PaddingRight"] = UDim.new(0.1, 0)
UI["97"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["97"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["98"] = Instance.new("Frame", UI["7e"])
UI["98"]["BorderSizePixel"] = 0
UI["98"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["98"]["Size"] = UDim2.new(0.73521, 0, 0.1961, 0)
UI["98"]["Position"] = UDim2.new(-0, 0, 0.5883, 0)
UI["98"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["98"]["Name"] = [[Lockforever]]
UI["98"]["BackgroundTransparency"] = 1

UI["99"] = Instance.new("TextLabel", UI["98"])
UI["99"]["TextWrapped"] = true
UI["99"]["BorderSizePixel"] = 0
UI["99"]["TextScaled"] = true
UI["99"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["99"]["TextSize"] = 14
UI["99"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["99"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["99"]["BackgroundTransparency"] = 1
UI["99"]["Size"] = UDim2.new(0.86649, 0, 0.70213, 0)
UI["99"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["99"]["Text"] = [[Sticky Aim]]
UI["99"]["Name"] = [[Text]]
UI["99"]["Position"] = UDim2.new(0.2663, 0, 0.08511, 0)

UI["9a"] = Instance.new("TextButton", UI["98"])
UI["9a"]["BorderSizePixel"] = 0
UI["9a"]["TextSize"] = 14
UI["9a"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["9a"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 255)
UI["9a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["9a"]["Size"] = UDim2.new(0.20548, 0, 0.42553, 0)
UI["9a"]["BackgroundTransparency"] = 1
UI["9a"]["Name"] = [[Toggle]]
UI["9a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["9a"]["Text"] = [[]]
UI["9a"]["Position"] = UDim2.new(0, 0, 0.23404, 0)

UI["9b"] = Instance.new("UICorner", UI["9a"])


UI["9c"] = Instance.new("UIStroke", UI["9a"])
UI["9c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["9d"] = Instance.new("TextLabel", UI["c"])
UI["9d"]["TextWrapped"] = true
UI["9d"]["BorderSizePixel"] = 0
UI["9d"]["TextScaled"] = true
UI["9d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["9d"]["TextSize"] = 14
UI["9d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["9d"]["TextColor3"] = Color3.fromRGB(107, 147, 255)
UI["9d"]["BackgroundTransparency"] = 1
UI["9d"]["Size"] = UDim2.new(0.24225, 0, 0.06852, 0)
UI["9d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["9d"]["Text"] = [[FOV]]
UI["9d"]["Position"] = UDim2.new(0.49065, 0, 0.5411, 0)

UI["9e"] = Instance.new("Frame", UI["2"])
UI["9e"]["Visible"] = false
UI["9e"]["BorderSizePixel"] = 0
UI["9e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["9e"]["Size"] = UDim2.new(1, 0, 1, 0)
UI["9e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["9e"]["Name"] = [[EspTotal]]
UI["9e"]["BackgroundTransparency"] = 1

UI["9f"] = Instance.new("Frame", UI["9e"])
UI["9f"]["BorderSizePixel"] = 0
UI["9f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["9f"]["Size"] = UDim2.new(0.49883, 0, 0.55437, 0)
UI["9f"]["Position"] = UDim2.new(0.01726, 0, 0.17328, 0)
UI["9f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["9f"]["Name"] = [[EspMenu]]
UI["9f"]["BackgroundTransparency"] = 0.65

UI["a0"] = Instance.new("UICorner", UI["9f"])


UI["a1"] = Instance.new("UIStroke", UI["9f"])
UI["a1"]["Thickness"] = 0.6
UI["a1"]["Color"] = Color3.fromRGB(255, 255, 255)

UI["a2"] = Instance.new("Frame", UI["9f"])
UI["a2"]["BorderSizePixel"] = 0
UI["a2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["a2"]["Size"] = UDim2.new(0.68224, 0, 0.53698, 0)
UI["a2"]["Position"] = UDim2.new(0.09346, 0, 0.14791, 0)
UI["a2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["a2"]["Name"] = [[Toggles]]
UI["a2"]["BackgroundTransparency"] = 1

UI["a3"] = Instance.new("UIListLayout", UI["a2"])
UI["a3"]["SortOrder"] = Enum.SortOrder.LayoutOrder

UI["a4"] = Instance.new("Frame", UI["a2"])
UI["a4"]["BorderSizePixel"] = 0
UI["a4"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["a4"]["Size"] = UDim2.new(1, 0, 0.28144, 0)
UI["a4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["a4"]["Name"] = [[EnableEsp]]
UI["a4"]["BackgroundTransparency"] = 1

UI["a5"] = Instance.new("TextLabel", UI["a4"])
UI["a5"]["TextWrapped"] = true
UI["a5"]["BorderSizePixel"] = 0
UI["a5"]["TextScaled"] = true
UI["a5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["a5"]["TextSize"] = 14
UI["a5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["a5"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["a5"]["BackgroundTransparency"] = 1
UI["a5"]["Size"] = UDim2.new(0.7337, 0, 0.70213, 0)
UI["a5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["a5"]["Text"] = [[Enable Esp]]
UI["a5"]["Name"] = [[Text]]
UI["a5"]["Position"] = UDim2.new(0.2663, 0, 0.08511, 0)

UI["a6"] = Instance.new("TextButton", UI["a4"])
UI["a6"]["BorderSizePixel"] = 0
UI["a6"]["TextSize"] = 14
UI["a6"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["a6"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 255)
UI["a6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["a6"]["Size"] = UDim2.new(0.20548, 0, 0.42553, 0)
UI["a6"]["BackgroundTransparency"] = 1
UI["a6"]["Name"] = [[Toggle]]
UI["a6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["a6"]["Text"] = [[]]
UI["a6"]["Position"] = UDim2.new(0, 0, 0.23404, 0)

UI["a7"] = Instance.new("UICorner", UI["a6"])


UI["a8"] = Instance.new("UIStroke", UI["a6"])
UI["a8"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["a9"] = Instance.new("Frame", UI["a2"])
UI["a9"]["Visible"] = false
UI["a9"]["BorderSizePixel"] = 0
UI["a9"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["a9"]["Size"] = UDim2.new(1, 0, 0.28144, 0)
UI["a9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["a9"]["Name"] = [[ShowName]]
UI["a9"]["BackgroundTransparency"] = 1

UI["aa"] = Instance.new("TextLabel", UI["a9"])
UI["aa"]["TextWrapped"] = true
UI["aa"]["BorderSizePixel"] = 0
UI["aa"]["TextScaled"] = true
UI["aa"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["aa"]["TextSize"] = 14
UI["aa"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["aa"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["aa"]["BackgroundTransparency"] = 1
UI["aa"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["aa"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["aa"]["Text"] = [[Show Names]]
UI["aa"]["Name"] = [[Text]]
UI["aa"]["Position"] = UDim2.new(0.2663, 0, 0.08511, 0)

UI["ab"] = Instance.new("TextButton", UI["a9"])
UI["ab"]["BorderSizePixel"] = 0
UI["ab"]["TextSize"] = 14
UI["ab"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["ab"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 255)
UI["ab"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["ab"]["Size"] = UDim2.new(0.20548, 0, 0.42553, 0)
UI["ab"]["Name"] = [[Toggle]]
UI["ab"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["ab"]["Text"] = [[]]
UI["ab"]["Position"] = UDim2.new(0, 0, 0.23404, 0)

UI["ac"] = Instance.new("UICorner", UI["ab"])


UI["ad"] = Instance.new("UIStroke", UI["ab"])
UI["ad"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["ae"] = Instance.new("Frame", UI["a2"])
UI["ae"]["Visible"] = false
UI["ae"]["BorderSizePixel"] = 0
UI["ae"]["BackgroundColor3"] = Color3.fromRGB(85, 85, 85)
UI["ae"]["Size"] = UDim2.new(1, 0, 0.28144, 0)
UI["ae"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["ae"]["Name"] = [[HpAmount]]
UI["ae"]["BackgroundTransparency"] = 1

UI["af"] = Instance.new("TextLabel", UI["ae"])
UI["af"]["TextWrapped"] = true
UI["af"]["BorderSizePixel"] = 0
UI["af"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["af"]["TextScaled"] = true
UI["af"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["af"]["TextSize"] = 14
UI["af"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["af"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["af"]["BackgroundTransparency"] = 1
UI["af"]["Size"] = UDim2.new(0.82192, 0, 0.70213, 0)
UI["af"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["af"]["Text"] = [[HP]]
UI["af"]["Name"] = [[Text]]
UI["af"]["Position"] = UDim2.new(-0.00475, 0, 0.16347, 0)

UI["b0"] = Instance.new("TextBox", UI["ae"])
UI["b0"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["b0"]["BorderSizePixel"] = 0
UI["b0"]["TextWrapped"] = true
UI["b0"]["TextSize"] = 14
UI["b0"]["TextScaled"] = true
UI["b0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["b0"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["b0"]["PlaceholderText"] = [[Health %]]
UI["b0"]["Size"] = UDim2.new(0.64887, 0, 0.78723, 0)
UI["b0"]["Position"] = UDim2.new(0.35113, 0, 0.11754, 0)
UI["b0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["b0"]["Text"] = [[]]
UI["b0"]["BackgroundTransparency"] = 0.55

UI["b1"] = Instance.new("UIStroke", UI["b0"])
UI["b1"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border

UI["b2"] = Instance.new("UICorner", UI["b0"])


UI["b3"] = Instance.new("UIPadding", UI["b0"])
UI["b3"]["PaddingTop"] = UDim.new(0.1, 0)
UI["b3"]["PaddingRight"] = UDim.new(0.1, 0)
UI["b3"]["PaddingLeft"] = UDim.new(0.1, 0)
UI["b3"]["PaddingBottom"] = UDim.new(0.1, 0)

UI["b4"] = Instance.new("ModuleScript", UI["1"])
UI["b4"]["Name"] = [[DraggableObject]]

UI["b5"] = Instance.new("Frame", UI["1"])
UI["b5"]["BorderSizePixel"] = 0
UI["b5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["b5"]["AnchorPoint"] = Vector2.new(0.5, 0.5)
UI["b5"]["Size"] = UDim2.new(0.12126, 0, 0.20886, 0)
UI["b5"]["Position"] = UDim2.new(0.49959, 0, 0.49972, 0)
UI["b5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["b5"]["Name"] = [[MouseFrame]]
UI["b5"]["BackgroundTransparency"] = 1

UI["b6"] = Instance.new("UICorner", UI["b5"])
UI["b6"]["CornerRadius"] = UDim.new(1, 0)

UI["b7"] = Instance.new("UIStroke", UI["b5"])
UI["b7"]["Thickness"] = 0.55

UI["b8"] = Instance.new("UIAspectRatioConstraint", UI["b5"])


UI["b9"] = Instance.new("LocalScript", UI["1"])
UI["b9"]["Enabled"] = false
UI["b9"]["Disabled"] = true

UI["ba"] = Instance.new("LocalScript", UI["1"])
UI["ba"]["Name"] = [[MAmamama]]

UI["bb"] = Instance.new("TextButton", UI["1"])
UI["bb"]["TextWrapped"] = true
UI["bb"]["BorderSizePixel"] = 0
UI["bb"]["TextSize"] = 14
UI["bb"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["bb"]["TextScaled"] = true
UI["bb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["bb"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["bb"]["Size"] = UDim2.new(0.05, 0, 0.08961, 0)
UI["bb"]["Name"] = [[MobileLock]]
UI["bb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["bb"]["Text"] = [[Lock]]
UI["bb"]["Position"] = UDim2.new(0.66912, 0, 0.67579, 0)

UI["bc"] = Instance.new("UICorner", UI["bb"])
UI["bc"]["CornerRadius"] = UDim.new(1, 0)

UI["bd"] = Instance.new("UIAspectRatioConstraint", UI["bb"])
UI["bd"]["AspectRatio"] = 0.99777

-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module:ModuleScript)
    local ModuleState = G2L_MODULES[Module];
    if ModuleState then
        if not ModuleState.Required then
            ModuleState.Required = true;
            ModuleState.Value = ModuleState.Closure();
        end
        return ModuleState.Value;
    end;
    return G2L_REQUIRE(Module);
end

G2L_MODULES[UI["b4"]] = {
Closure = function()
    local script = UI["b4"]
--[[
	@Author: Spynaz
	@Description: Enables dragging on GuiObjects. Supports both mouse and touch.
	
	For instructions on how to use this module, go to this link:
	https://devforum.roblox.com/t/simple-module-for-creating-draggable-gui-elements/230678
--]]

local UDim2_new = UDim2.new

local UserInputService = game:GetService("UserInputService")

local DraggableObject 		= {}
DraggableObject.__index 	= DraggableObject

-- Sets up a new draggable object
function DraggableObject.new(Object)
	local self 			= {}
	self.Object			= Object
	self.DragStarted	= nil
	self.DragEnded		= nil
	self.Dragged		= nil
	self.Dragging		= false
	
	setmetatable(self, DraggableObject)
	
	return self
end

-- Enables dragging
function DraggableObject:Enable()
	local object			= self.Object
	local dragInput			= nil
	local dragStart			= nil
	local startPos			= nil
	local preparingToDrag	= false
	
	-- Updates the element
	local function update(input)
		local delta 		= input.Position - dragStart
		local newPosition	= UDim2_new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		object.Position 	= newPosition
	
		return newPosition
	end
	
	self.InputBegan = object.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			preparingToDrag = true
			--[[if self.DragStarted then
				self.DragStarted()
			end
			
			dragging	 	= true
			dragStart 		= input.Position
			startPos 		= Element.Position
			--]]
			
			local connection 
			connection = input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End and (self.Dragging or preparingToDrag) then
					self.Dragging = false
					connection:Disconnect()
					
					if self.DragEnded and not preparingToDrag then
						self.DragEnded()
					end
					
					preparingToDrag = false
				end
			end)
		end
	end)
	
	self.InputChanged = object.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	self.InputChanged2 = UserInputService.InputChanged:Connect(function(input)
		if object.Parent == nil then
			self:Disable()
			return
		end
		
		if preparingToDrag then
			preparingToDrag = false
			
			if self.DragStarted then
				self.DragStarted()
			end
			
			self.Dragging	= true
			dragStart 		= input.Position
			startPos 		= object.Position
		end
		
		if input == dragInput and self.Dragging then
			local newPosition = update(input)
			
			if self.Dragged then
				self.Dragged(newPosition)
			end
		end
	end)
end

-- Disables dragging
function DraggableObject:Disable()
	self.InputBegan:Disconnect()
	self.InputChanged:Disconnect()
	self.InputChanged2:Disconnect()
	
	if self.Dragging then
		self.Dragging = false
		
		if self.DragEnded then
			self.DragEnded()
		end
	end
end

return DraggableObject

end
}
local function SCRIPT_ba()
local script = UI["ba"]
	--extremely ugly and unreadable code but nvm :skull:
	local player = game:GetService("Players").LocalPlayer
	local cam = workspace.CurrentCamera
	local gui = script.Parent
	local aimbotframe = gui.MouseFrame
	local mainframe = gui.HubFrame
	local aimbottotal = mainframe.AimbotTotal
	local aimbotmenu = aimbottotal.AimbotMenu
	local toggles = aimbotmenu.Toggles
	local checks = aimbotmenu.Checks
	local Mouse = player:GetMouse()
	local runService = game:GetService("RunService")
	local blacklist = {player.Character}
	local params = RaycastParams.new()
	params.FilterType = Enum.RaycastFilterType.Exclude
	params.FilterDescendantsInstances = blacklist
	local players = game:GetService("Players")
	local locked = false
	local activated = false
	local mode = "Mouse"
	local uis = game:GetService("UserInputService")
	local debugtesting = false
	local dragmodule = require(gui.DraggableObject)
	local minhp = 0
	local minhpamount = aimbotmenu.Checks.HpAmount.TextBox
	local hasmouse = false
	local focused = false
	local togglemode = "Hold"
	local lockmode = "Camera"
	local autofire = false
	local toclose = false
	local toclosemode = "Key"
	local partTarget = nil
	local mobilelockbutton = gui.MobileLock
	local mobilelockoriginalpos = mobilelockbutton.Position
	local function teamcheck(Player,Toggle)
		if Toggle then
			return Player.Team ~= player.Team
		else
			return true
		end
	end
	local function movemouse(x:number,y:number)
		if mousemoveabs then
			mousemoveabs(x,y)
		elseif mousemoverel then
			
		end
	end
	local once = false
	uis.InputBegan:Connect(function(input)
		if focused == true then
			if input.UserInputType == Enum.UserInputType.Keyboard then
				toggles.LockBind.TextBox.Text = input.KeyCode.Name
				focused = false
				mode = "Key"
				toggles.LockBind.TextBox:ReleaseFocus()
			end
			if input.UserInputType == Enum.UserInputType.MouseButton2 then
				if focused == true then
					toggles.LockBind.TextBox.Text = "RMB"
					mode = "Mouse"
					toggles.LockBind.TextBox:ReleaseFocus()
					focused = false
				end
			end
			if input.UserInputType == Enum.UserInputType.MouseButton3 then
				if focused == true then
					toggles.LockBind.TextBox.Text = "MMB"
					mode = "Mouse"
					toggles.LockBind.TextBox:ReleaseFocus()
					focused = false
				end
			end
		end
		if toclose == true then
			if input.UserInputType == Enum.UserInputType.Keyboard then
				toggles.HideUi.TextBox.Text = input.KeyCode.Name
				toclose = false
				toclosemode = "Key"
				toggles.HideUi.TextBox:ReleaseFocus()
			end
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				if toclose == true then
					toggles.HideUi.TextBox.Text = ""
					toggles.HideUi.TextBox:ReleaseFocus()
					toclose = false
				end
			end
		end
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			hasmouse = true
			gui.IgnoreGuiInset = false
			if focused == true then
				toggles.LockBind.TextBox.Text = "LMB"
				mode = "Mouse"
				toggles.LockBind.TextBox:ReleaseFocus()
				focused = false
			end
			toggles.HideUi.Visible = true
			toggles.MobileMode.Visible = false
			toggles.LockMode.Visible = true
			toggles.LockBind.Visible = true
			gui.MobileLock.Visible = false
		end
		if input.UserInputType == Enum.UserInputType.Touch then
			hasmouse = false
			toggles.HideUi.Visible = false
			toggles.MobileMode.Visible = true
			toggles.LockMode.Visible = false
			toggles.LockBind.Visible = false
			if not once then
				gui.MobileLock.Visible = true
				once = true
			end
		end
	end)
	toggles.LockBind.TextBox.Focused:Connect(function()
		task.wait(0.01)
		focused = true
	end)
	toggles.LockBind.TextBox.FocusLost:Connect(function()
		task.wait(0.01)
		focused = false
	end)
	toggles.HideUi.TextBox.Focused:Connect(function()
		task.wait(0.01)
		toclose = true
	end)
	toggles.HideUi.TextBox.FocusLost:Connect(function()
		task.wait(0.01)
		toclose = false
	end)
	local changetoggle = toggles.Mode.ChangeToggleMode
	changetoggle.Parent.Arrow.Text = "◣"
	changetoggle.MouseButton1Click:Connect(function()
		if changetoggle.DropFrame.Visible == true then
			changetoggle.DropFrame.Visible = false
		else
			changetoggle.DropFrame.Visible = true
		end
	end)
	for _, option in changetoggle.DropFrame:GetChildren() do
		if option:IsA("TextButton") then
			option.MouseButton1Click:Connect(function()
				local oldtext = option.Text
				option.Text = changetoggle.Text
				changetoggle.Text = oldtext
				option.Parent.Visible = false
				togglemode = oldtext
			end)
		end
	end
	local changetarget = toggles.Target.ChangeToggleMode
	changetarget.Parent.Arrow.Text = "◣"
	changetarget.MouseButton1Click:Connect(function()
		if changetarget.DropFrame.Visible == true then
			changetarget.DropFrame.Visible = false
		else
			changetarget.DropFrame.Visible = true
		end
	end)
	for _, option in changetarget.DropFrame:GetChildren() do
		if option:IsA("TextButton") then
			option.MouseButton1Click:Connect(function()
				local oldtext = option.Text
				option.Text = changetarget.Text
				changetarget.Text = oldtext
				option.Parent.Visible = false
				togglemode = oldtext
			end)
		end
	end
	
	local Lockmode = toggles.LockMode.ChangeToggleMode
	Lockmode.Parent.Arrow.Text = "◣"
	Lockmode.MouseButton1Click:Connect(function()
		if Lockmode.DropFrame.Visible == true then
			Lockmode.DropFrame.Visible = false
		else
			Lockmode.DropFrame.Visible = true
		end
	end)
	for _, option in Lockmode.DropFrame:GetChildren() do
		if option:IsA("TextButton") then
			option.MouseButton1Click:Connect(function()
				local oldtext = option.Text
				option.Text = Lockmode.Text
				Lockmode.Text = oldtext
				option.Parent.Visible = false
				lockmode = oldtext
			end)
		end
	end
	
	checks.Prediction.TextBox.FocusLost:Connect(function()
		local amount = tonumber(checks.Prediction.TextBox.Text)
		if not amount then
			checks.Prediction.TextBox.Text = "0"
			end
	end)
	for _, button in mainframe.ModeSelect:GetChildren() do
		if button:IsA("TextButton") then
			button.MouseButton1Click:Connect(function()
				for _, frame in mainframe:GetChildren() do
					if frame.Name:match("Total") then
						frame.Visible = false
					end
				end
				mainframe[button.Name].Visible = true
				for _, badbutton in button.Parent:GetChildren() do
					if badbutton:IsA("TextButton") then
						badbutton.TextTransparency = 0.5
					end
				end
				button.TextTransparency = 0
			end)
		end
	end
	local rangescrolldown = false
	local function toScale(frame:GuiBase2d)
		local Viewport_Size = workspace.CurrentCamera.ViewportSize
		local LB_Size = frame.AbsoluteSize
		frame.Size = UDim2.new(LB_Size.X/Viewport_Size.X,0,LB_Size.Y/Viewport_Size.Y, 0)
	end
	local function toOffset(frame:GuiBase2d)
		local LB_Size = frame.AbsoluteSize
		frame.Size = UDim2.new(0, LB_Size.X, 0, LB_Size.Y)
	end
	local function idkwhatthisis(Frame)
	local Camera = workspace.CurrentCamera
	
		--> removing the offset (x, y) from both the mouse and frame position
		local mousePos = uis:GetMouseLocation() - Frame.AbsolutePosition
	local frameBottomRight = Frame.AbsoluteSize
	
	local convertedMouse = UDim2.fromScale(
		mousePos.X / frameBottomRight.X,
		mousePos.Y / frameBottomRight.Y
		)
		return convertedMouse
	end
	minhpamount.FocusLost:Connect(function()
		local amount = tonumber(minhpamount.Text)
		if amount then
			minhp = amount
		else
			minhpamount.Text = ""
		end
	end)
	local bindtable = {
		["RMB"] = "MouseButton2",
		["LMB"] = "MouseButton1",
		["MMB"] = "MouseButton3",
	}
	function correct()
		local text = toggles.LockBind.TextBox.Text
		for	key, correct in bindtable do
			if text == key then
				return correct
			end
		end
	end
	local framedrag = dragmodule.new(gui.HubFrame):Enable()
	local lockedplayer
	if not debugtesting then
	for _, othergui in game:GetService("CoreGui"):GetChildren() do
		if othergui.Name == gui.Name then
			if othergui == gui then continue end
			othergui:Destroy()
		end
		end
		if getgenv().ExecutedOnce == true then
			getgenv().ExecutedOnce = false
			gui:Destroy()
		end
	end
	local function togglebutton(button:TextButton,check:BoolValue)
		if check then
			if button.BackgroundTransparency == 0 then
				return true
			else
				return false
			end
		end
		if button.BackgroundTransparency == 0 then
			button.BackgroundTransparency = 1
		else
			button.BackgroundTransparency = 0
		end
	end
	-- AIMBOT--
	local checkthread = nil
	local function unlock(stayactive)
		if stayactive then
			activated = true
		else
			activated = false
		end
		locked = false
		lockedplayer = nil
	end
	local aimbottoggle = toggles.AimbotToggle
	aimbottoggle.Toggle.MouseButton1Click:Connect(function()
		if aimbottoggle.Toggle.BackgroundTransparency == 0 then
			aimbottoggle.Toggle.BackgroundTransparency = 1
			activated = false
			locked = false
			lockedplayer = nil
			aimbotframe.UIStroke.Color = Color3.fromRGB(0,0,0)
		else
			aimbottoggle.Toggle.BackgroundTransparency = 0
			activated = false
		end
	end)
	checks.TargetBots.Toggle.MouseButton1Click:Connect(function()
		togglebutton(checks.TargetBots.Toggle)
	end)
	toggles.Autofire.Toggle.MouseButton1Click:Connect(function()
		togglebutton(toggles.Autofire.Toggle)
		if 	togglebutton(toggles.Autofire.Toggle,true) then
			autofire = true
		else
			autofire = false
		end
	end)
	checks.TeamCheck.Toggle.MouseButton1Click:Connect(function()
		togglebutton(checks.TeamCheck.Toggle)
		if togglebutton(checks.TeamCheck.Toggle,true) then
			for _, p in players:GetPlayers() do
				if p.Team == player.Team then
					table.insert(blacklist,p.Character)
				end
			end
		else
			blacklist = {player.Character}
		end
	end)
	
	uis.InputBegan:Connect(function(input,bool)
		if mode == "Key" then
			if input.KeyCode.Name == toggles.LockBind.TextBox.Text then
				if aimbottoggle.Toggle.BackgroundTransparency == 1 then return end
				if activated == true then
					activated = false
					partTarget = nil
					locked = false
					lockedplayer = nil
					aimbotframe.UIStroke.Color = Color3.fromRGB(0,0,0)
				else
					activated = true
					if aimbottoggle.Toggle.BackgroundTransparency == 0 then
						aimbotframe.UIStroke.Color = Color3.fromRGB(255,0,0)
					end
				end
			end
		elseif mode == "Mouse" then
			local mousebutton = correct()
			if not mousebutton then return end
			if input.UserInputType == Enum.UserInputType[correct()] then
				if togglemode == "Toggle" then
					if activated then
						activated = false
						partTarget = nil
						locked = false
						lockedplayer = nil
						aimbotframe.UIStroke.Color = Color3.fromRGB(0,0,0)
						return
					end
				end
				if aimbottoggle.Toggle.BackgroundTransparency == 1 then return end
				activated = true
				if aimbottoggle.Toggle.BackgroundTransparency == 0 then
					aimbotframe.UIStroke.Color = Color3.fromRGB(255,0,0)
				end
			end
		end
		if toclosemode == "Key" then
			if input.KeyCode.Name == toggles.HideUi.TextBox.Text then
				if mainframe.Visible == true then
					mainframe.Visible = false
				else
					mainframe.Visible = true
				end
		end	end
	end)
	uis.InputEnded:Connect(function(input,bool)
		if togglemode == "Toggle" then return end
		if mode == "Mouse" then
		local mousebutton = correct()
			if not mousebutton then return end
		end
		if input.KeyCode.Name == toggles.LockBind.TextBox.Text then
			if aimbottoggle.Toggle.BackgroundTransparency == 1 then return end
			if activated == true then
				activated = false
				partTarget = nil
				locked = false
				lockedplayer = nil
				aimbotframe.UIStroke.Color = Color3.fromRGB(0,0,0)
				return end
		end
		if correct() then
			if input.UserInputType == Enum.UserInputType[correct()] then
				if aimbottoggle.Toggle.BackgroundTransparency == 1 then return end
				partTarget = nil
			activated = false
			locked = false
				lockedplayer = nil
					aimbotframe.UIStroke.Color = Color3.fromRGB(0,0,0)
			end
		end
	end)
	-- MOBILE LOCK --
	local mobiletoggle = toggles.MobileMode.ChangeToggleMode
	mobiletoggle.Parent.Arrow.Text = "◣"
	mobiletoggle.MouseButton1Click:Connect(function()
		if mobiletoggle.DropFrame.Visible == true then
			mobiletoggle.DropFrame.Visible = false
		else
			mobiletoggle.DropFrame.Visible = true
		end
	end)
	for _, option in mobiletoggle.DropFrame:GetChildren() do
		if option:IsA("TextButton") then
			option.MouseButton1Click:Connect(function()
				local oldtext = option.Text
				option.Text = mobiletoggle.Text
				mobiletoggle.Text = oldtext
				option.Parent.Visible = false
				togglemode = oldtext
				if oldtext == "Custom" then
					mobilelockbutton.Visible = false
					toggles.MobileMode.ModeSelection.Text = "Select"
				elseif oldtext == "Normal" then
					mobilelockbutton.Visible = true
					toggles.MobileMode.ModeSelection.Text = "Move"
				end
			end)
		end
	end
	local enableswitch = dragmodule.new(gui.MobileLock)
	toggles.MobileMode.ModeSelection.MouseButton1Click:Connect(function()
	
		local button = toggles.MobileMode.ModeSelection
		local ogpos = mobilelockoriginalpos
		local originalcolor = Color3.fromRGB(93, 131, 255)
		if button.Parent.ChangeToggleMode.Text == "Normal" then
			if button.BackgroundColor3 == originalcolor then
				mobilelockbutton.Position = ogpos
				button.BackgroundColor3 = Color3.fromRGB(74, 106, 203)
				enableswitch:Enable()
			else
				button.BackgroundColor3 = originalcolor
				enableswitch:Disable()
			end
		else
	
		end
	end)
	mobilelockbutton.MouseButton1Down:Connect(function()
		if togglemode ~= "Hold" then return end
		if aimbottoggle.Toggle.BackgroundTransparency == 1 then return end
		activated = true
		if aimbottoggle.Toggle.BackgroundTransparency == 0 then
			aimbotframe.UIStroke.Color = Color3.fromRGB(255,0,0)
		end
	
	end)
	mobilelockbutton.MouseButton1Up:Connect(function()
		if togglemode ~= "Hold" then return end
		if aimbottoggle.Toggle.BackgroundTransparency == 1 then return end
			activated = false
			partTarget = nil
			locked = false
			lockedplayer = nil
			aimbotframe.UIStroke.Color = Color3.fromRGB(0,0,0)
	end)
	mobilelockbutton.MouseButton1Click:Connect(function()
		if togglemode ~= "Toggle" then return end
		if activated == true then
			activated = false
			partTarget = nil
			locked = false
			lockedplayer = nil
			aimbotframe.UIStroke.Color = Color3.fromRGB(0,0,0)
		else
			activated = true
			if aimbottoggle.Toggle.BackgroundTransparency == 0 then
				aimbotframe.UIStroke.Color = Color3.fromRGB(255,0,0)
			end
		end
	end)
	-- END --
	local function canceldispls(thread:thread)
		task.cancel(thread)
		thread = nil
	end
	local function prediction(target:Part,range:number)
		return target.CFrame.Position + target.AssemblyLinearVelocity * range
	end
	local function wallcheck(character:Model,toggle)
		if toggle then
			local RayDirection = (character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Unit * (character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
			local RaycastParameters = RaycastParams.new()
			RaycastParameters.FilterType = Enum.RaycastFilterType.Exclude
			RaycastParameters.FilterDescendantsInstances = { player.Character }
			RaycastParameters.IgnoreWater = true
			local RaycastResult = workspace:Raycast(player.Character.HumanoidRootPart.Position, RayDirection, RaycastParameters)
			if RaycastResult then
				if RaycastResult.Instance.Parent == character or RaycastResult.Instance.Parent.Parent == character then
					return true
				end
			end
		else
			return true
		end
		return false
	end
	local function getclosestplayer()
		local middlepos = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2  - (game:GetService("GuiService"):GetGuiInset().Y/2))
			local ClosestPlayer = nil
			local ClosestPlayerDistance = math.huge
			local ClosestPosDistance = "sigma"
	
			for _, Player in next, players:GetPlayers() do
				if Player ~= player and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
					local MousePoint = Vector2.new(Mouse.X, Mouse.Y)
					if not hasmouse then
						MousePoint = middlepos
						aimbotframe.Position = UDim2.fromOffset(middlepos.X, middlepos.Y)
					end
				local pos, OnScreen = cam:WorldToViewportPoint(Player.Character.HumanoidRootPart.Position)
				local Distance = (MousePoint - Vector2.new(pos.X, pos.Y)).Magnitude
				local PosDist = "ohio"
	
				if OnScreen and Distance < ClosestPlayerDistance then
					if Distance <= aimbotframe.AbsoluteSize.X/2 then
							if teamcheck(Player,togglebutton(checks.TeamCheck.Toggle,true)) then
							if wallcheck(Player.Character,togglebutton(checks.TargetBots.Toggle,true)) then
									locked = true
									ClosestPlayer = Player
								ClosestPlayerDistance = Distance
								ClosestPosDistance = PosDist
								end
						end
						end
					end
			end
		end
		if ClosestPlayer then
			return ClosestPlayer.Character
		else
		end
	end
	local unlockplayer = checks.Lockforever
	unlockplayer.Toggle.MouseButton1Click:Connect(function()
		togglebutton(unlockplayer.Toggle)
	end)
	local mousemovethread = nil
	local partstable = {"HumanoidRootPart","Head"}
	local function mousething()
		if changetarget.Text ~= "Random" then
			partTarget = changetarget.Text
		else
			if not partTarget then
			local randompick = math.random(1,#partstable)
				partTarget = partstable[randompick]
			end
		end
	
		local smoothness = 0
		if tonumber(toggles.Smoothing.TextBox.Text) then
			local number = math.clamp(tonumber(toggles.Smoothing.TextBox.Text),0.01,0.99)
			smoothness = 1 - number
		end
		if hasmouse then
			aimbotframe.Position = UDim2.fromOffset(Mouse.X,Mouse.Y)
			end
		if not  activated then return end
		if aimbottoggle.Toggle.BackgroundTransparency == 1 then return end
		if togglebutton(unlockplayer.Toggle,true) and not lockedplayer then
			lockedplayer = getclosestplayer()
		elseif not togglebutton(unlockplayer.Toggle,true) then
			lockedplayer = getclosestplayer()
		end
		if locked then
			if lockedplayer then
				if lockmode == "Camera" then
					cam.CFrame = cam.CFrame:Lerp(CFrame.new(cam.CFrame.Position, prediction(lockedplayer[partTarget],tonumber(checks.Prediction.TextBox.Text)) or lockedplayer[partTarget].CFrame.Position),smoothness)
					
					if autofire then
						if mouse1click then
							mouse1click()
						end
					end
				elseif lockmode == "Mouse" then
					local position,screen = cam.WorldToScreenPoint(cam,prediction(lockedplayer[partTarget],tonumber(checks.Prediction.TextBox.Text)) or lockedplayer[partTarget].CFrame.Position)
					if screen then
						local mousepos =UDim2.fromOffset(Mouse.X,Mouse.Y)
						local moveto = mousepos:Lerp(UDim2.fromOffset(position.X,position.Y),smoothness)
						local convertedvector = Vector2.new(moveto.X.Offset,moveto.Y.Offset)
						movemouse(convertedvector.X,convertedvector.Y)
						if autofire then
							if mouse1click then
								mouse1click()
							end
						end
						if not checkthread then
							checkthread = task.spawn(function()
								lockedplayer.Humanoid.HealthChanged:Connect(function(hp)
									if hp <= minhp then
										unlock(true)
										canceldispls(checkthread)
									end
								end)
							end)
						end
					end
				elseif lockmode == "Dynamic" then
					if uis.MouseBehavior == Enum.MouseBehavior.LockCenter then
						cam.CFrame = cam.CFrame:Lerp(CFrame.new(cam.CFrame.Position, prediction(lockedplayer[partTarget],tonumber(checks.Prediction.TextBox.Text)) or lockedplayer[partTarget].CFrame.Position),smoothness)
					else
						local position,screen = cam.WorldToScreenPoint(cam,prediction(lockedplayer[partTarget],tonumber(checks.Prediction.TextBox.Text)) or lockedplayer[partTarget].CFrame.Position)
						if screen then
							local mousepos =UDim2.fromOffset(Mouse.X,Mouse.Y)
							local moveto = mousepos:Lerp(UDim2.fromOffset(position.X,position.Y),smoothness)
							local convertedvector = Vector2.new(moveto.X.Offset,moveto.Y.Offset)
							movemouse(convertedvector.X,convertedvector.Y)
							if autofire then
								if mouse1click then
									mouse1click()
								end
							end
							if not checkthread then
								checkthread = task.spawn(function()
									lockedplayer.Humanoid.HealthChanged:Connect(function(hp)
										if hp <= minhp then
											unlock(true)
											canceldispls(checkthread)
										end
									end)
								end)
							end
						end
					end
				end
			end
			return
		end
	end
	--[[task.spawn(function()
		while true do
			local rand = math.random(1,10)
			if rand == 1 then
				task.wait()
			end
			mousething()
		end
	end)]]
	local function isInScreen(thingie)
		local pos = thingie.AbsolutePosition
		return pos.X + thingie.AbsoluteSize.X <= cam.ViewportSize.X and pos.X >= 0
			and pos.Y + thingie.AbsoluteSize.Y <= cam.ViewportSize.Y and pos.Y >= 0
	end
	local runninginstance = runService.RenderStepped:Connect(function()
		mousething()
	end)
	-- FOV --
	local FOVSettings = aimbotmenu.Sigma
	FOVSettings.FovSize.TextBox.FocusLost:Connect(function()
		if tonumber(FOVSettings.FovSize.TextBox.Text) then
			local number = tonumber(FOVSettings.FovSize.TextBox.Text) / 10
			aimbotframe.Size = UDim2.fromScale(number,number)
		else
			FOVSettings.FovSize.TextBox.Text = tostring(math.round(aimbotframe.Size.X.Scale/0.1))
		end
	end)
	
	FOVSettings.FovVisibility.Toggle.MouseButton1Click:Connect(function()
		togglebutton(FOVSettings.FovVisibility.Toggle)
		if not togglebutton(FOVSettings.FovVisibility.Toggle,true) then
			aimbotframe.Visible = false
		else
			aimbotframe.Visible = true
		end
	end)
	
	-- ESP --
	local espinstance = nil
	local esptotal = mainframe.EspTotal
	local espmenu = esptotal.EspMenu
	local esptoggles = espmenu.Toggles
	local highlight
	local deletehighlight = {}
	local function addhighlight(plr:Model)
		if not togglebutton(esptoggles.EnableEsp.Toggle,true) then return end
		if plr == player.Character then return end
		local highlight = Instance.new("Highlight")
		highlight.Parent = plr
		highlight.FillColor = players:GetPlayerFromCharacter(plr).TeamColor.Color
		highlight.FillTransparency = 1
		highlight.OutlineColor = players:GetPlayerFromCharacter(plr).TeamColor.Color
			table.insert(deletehighlight,highlight)
	end
		esptoggles.EnableEsp.Toggle.MouseButton1Click:Connect(function()
			togglebutton(esptoggles.EnableEsp.Toggle)
			if togglebutton(esptoggles.EnableEsp.Toggle,true) then
				espinstance = task.spawn(function()
					for _, addto in players:GetPlayers() do
						if addto.Character then
							addhighlight(addto.Character)
						end
						addto.CharacterAdded:Connect(function()
							addhighlight(addto.Character)
						end)
					end
					players.PlayerAdded:Connect(function(otherplr)
						otherplr.CharacterAdded:Connect(function(otherplrchar)
							addhighlight(otherplrchar)
						end)
					end)
				end)
			else
				task.cancel(espinstance)
				espinstance = nil
				for _, highlight in deletehighlight do
					highlight:Destroy()
				end
	
			end
	end)
	gui.Destroying:Connect(function()
		if espinstance then
			task.cancel(espinstance)
			espinstance = nil
			for _, highlight in deletehighlight do
				highlight:Destroy()
			end
		end
		if mousemovethread then
			task.cancel(mousemovethread)
			mousemovethread = nil
		end
runninginstance:Disconnect()
	end)
end
task.spawn(SCRIPT_ba)

return UI["1"], require;
